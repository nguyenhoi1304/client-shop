[{"D:\\Funix\\NJS\\Asm3\\client\\src\\index.js":"1","D:\\Funix\\NJS\\Asm3\\client\\src\\App.jsx":"2","D:\\Funix\\NJS\\Asm3\\client\\src\\store.js":"3","D:\\Funix\\NJS\\Asm3\\client\\src\\reportWebVitals.js":"4","D:\\Funix\\NJS\\Asm3\\client\\src\\History\\History.jsx":"5","D:\\Funix\\NJS\\Asm3\\client\\src\\Detail\\Detail.jsx":"6","D:\\Funix\\NJS\\Asm3\\client\\src\\Authentication\\SignUp.jsx":"7","D:\\Funix\\NJS\\Asm3\\client\\src\\Home\\Home.jsx":"8","D:\\Funix\\NJS\\Asm3\\client\\src\\Authentication\\SignIn.jsx":"9","D:\\Funix\\NJS\\Asm3\\client\\src\\Checkout\\Checkout.jsx":"10","D:\\Funix\\NJS\\Asm3\\client\\src\\History\\Component\\DetailHistory.jsx":"11","D:\\Funix\\NJS\\Asm3\\client\\src\\Shop\\Shop.jsx":"12","D:\\Funix\\NJS\\Asm3\\client\\src\\Cart\\Cart.jsx":"13","D:\\Funix\\NJS\\Asm3\\client\\src\\History\\Component\\MainHistory.jsx":"14","D:\\Funix\\NJS\\Asm3\\client\\src\\Share\\Footer\\Footer.jsx":"15","D:\\Funix\\NJS\\Asm3\\client\\src\\Share\\Header\\Header.jsx":"16","D:\\Funix\\NJS\\Asm3\\client\\src\\Share\\Chat\\Chat.jsx":"17","D:\\Funix\\NJS\\Asm3\\client\\src\\Redux\\Reducer\\ReducerRoot.jsx":"18","D:\\Funix\\NJS\\Asm3\\client\\src\\convertMoney.js":"19","D:\\Funix\\NJS\\Asm3\\client\\src\\Authentication\\LoginLink.jsx":"20","D:\\Funix\\NJS\\Asm3\\client\\src\\API\\ProductAPI.jsx":"21","D:\\Funix\\NJS\\Asm3\\client\\src\\API\\CartAPI.jsx":"22","D:\\Funix\\NJS\\Asm3\\client\\src\\API\\MessengerAPI.jsx":"23","D:\\Funix\\NJS\\Asm3\\client\\src\\Authentication\\LogoutLink.jsx":"24","D:\\Funix\\NJS\\Asm3\\client\\src\\API\\CheckoutAPI.jsx":"25","D:\\Funix\\NJS\\Asm3\\client\\src\\API\\ChatRoomsAPI.jsx":"26","D:\\Funix\\NJS\\Asm3\\client\\src\\API\\HistoryAPI.jsx":"27","D:\\Funix\\NJS\\Asm3\\client\\src\\API\\CommentAPI.jsx":"28","D:\\Funix\\NJS\\Asm3\\client\\src\\Authentication\\Name.jsx":"29","D:\\Funix\\NJS\\Asm3\\client\\src\\Redux\\Action\\ActionCart.jsx":"30","D:\\Funix\\NJS\\Asm3\\client\\src\\API\\UserAPI.jsx":"31","D:\\Funix\\NJS\\Asm3\\client\\src\\Redux\\Action\\ActionSession.jsx":"32","D:\\Funix\\NJS\\Asm3\\client\\src\\Shop\\Component\\Pagination.jsx":"33","D:\\Funix\\NJS\\Asm3\\client\\src\\Share\\img\\Image.jsx":"34","D:\\Funix\\NJS\\Asm3\\client\\src\\Shop\\Component\\Search.jsx":"35","D:\\Funix\\NJS\\Asm3\\client\\src\\Shop\\Component\\Products.jsx":"36","D:\\Funix\\NJS\\Asm3\\client\\src\\Shop\\Component\\SortProduct.jsx":"37","D:\\Funix\\NJS\\Asm3\\client\\src\\Cart\\Component\\ListCart.jsx":"38","D:\\Funix\\NJS\\Asm3\\client\\src\\Redux\\Reducer\\ReducerSession.jsx":"39","D:\\Funix\\NJS\\Asm3\\client\\src\\Redux\\Reducer\\ReducerCart.jsx":"40","D:\\Funix\\NJS\\Asm3\\client\\src\\Shop\\Component\\IndexPage.jsx":"41","D:\\Funix\\NJS\\Asm3\\client\\src\\API\\axiosClient.jsx":"42","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\index.js":"43","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\App.jsx":"44","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\store.js":"45","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\reportWebVitals.js":"46","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Cart\\Cart.jsx":"47","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Home\\Home.jsx":"48","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Detail\\Detail.jsx":"49","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Authentication\\SignIn.jsx":"50","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Authentication\\SignUp.jsx":"51","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Checkout\\Checkout.jsx":"52","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Shop\\Shop.jsx":"53","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Share\\Chat\\Chat.jsx":"54","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Share\\Footer\\Footer.jsx":"55","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Share\\Header\\Header.jsx":"56","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\History\\Component\\DetailHistory.jsx":"57","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\History\\Component\\MainHistory.jsx":"58","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Redux\\Reducer\\ReducerRoot.jsx":"59","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\convertMoney.js":"60","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Share\\img\\Image.jsx":"61","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Authentication\\LoginLink.jsx":"62","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Authentication\\Name.jsx":"63","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Redux\\Action\\ActionCart.jsx":"64","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Cart\\Component\\ListCart.jsx":"65","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Authentication\\LogoutLink.jsx":"66","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\API\\CartAPI.jsx":"67","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\API\\UserAPI.jsx":"68","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Redux\\Action\\ActionSession.jsx":"69","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\API\\ProductAPI.jsx":"70","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\API\\CommentAPI.jsx":"71","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\API\\MessengerAPI.jsx":"72","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\API\\CheckoutAPI.jsx":"73","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\API\\ChatRoomsAPI.jsx":"74","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Shop\\Component\\Pagination.jsx":"75","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Shop\\Component\\Products.jsx":"76","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Shop\\Component\\SortProduct.jsx":"77","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\API\\HistoryAPI.jsx":"78","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Shop\\Component\\Search.jsx":"79","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Redux\\Reducer\\ReducerSession.jsx":"80","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Redux\\Reducer\\ReducerCart.jsx":"81","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\API\\axiosClient.jsx":"82","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Shop\\Component\\IndexPage.jsx":"83","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Home\\Clock.jsx":"84","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Share\\img\\index.js":"85","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Feedback\\Feedback.jsx":"86","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\API\\NewsApi.jsx":"87"},{"size":614,"mtime":1662556006000,"results":"88","hashOfConfig":"89"},{"size":1422,"mtime":1702409600044,"results":"90","hashOfConfig":"89"},{"size":153,"mtime":1662556006000,"results":"91","hashOfConfig":"89"},{"size":396,"mtime":1662556006000,"results":"92","hashOfConfig":"89"},{"size":395,"mtime":1702128073748,"results":"93","hashOfConfig":"89"},{"size":17703,"mtime":1702127067537,"results":"94","hashOfConfig":"89"},{"size":6763,"mtime":1700767126062,"results":"95","hashOfConfig":"89"},{"size":14017,"mtime":1702408981689,"results":"96","hashOfConfig":"89"},{"size":5606,"mtime":1700761267978,"results":"97","hashOfConfig":"89"},{"size":13365,"mtime":1702406365912,"results":"98","hashOfConfig":"89"},{"size":4121,"mtime":1700589450820,"results":"99","hashOfConfig":"89"},{"size":14179,"mtime":1702627084520,"results":"100","hashOfConfig":"89"},{"size":9418,"mtime":1700560389663,"results":"101","hashOfConfig":"89"},{"size":5143,"mtime":1702128097951,"results":"102","hashOfConfig":"89"},{"size":2051,"mtime":1662556006000,"results":"103","hashOfConfig":"89"},{"size":3567,"mtime":1702127878156,"results":"104","hashOfConfig":"89"},{"size":7040,"mtime":1702405648578,"results":"105","hashOfConfig":"89"},{"size":247,"mtime":1662556006000,"results":"106","hashOfConfig":"89"},{"size":290,"mtime":1662556006000,"results":"107","hashOfConfig":"89"},{"size":556,"mtime":1662556006000,"results":"108","hashOfConfig":"89"},{"size":482,"mtime":1662556006000,"results":"109","hashOfConfig":"89"},{"size":505,"mtime":1700239660882,"results":"110","hashOfConfig":"89"},{"size":419,"mtime":1662556006000,"results":"111","hashOfConfig":"89"},{"size":295,"mtime":1662556006000,"results":"112","hashOfConfig":"89"},{"size":294,"mtime":1700561621221,"results":"113","hashOfConfig":"89"},{"size":430,"mtime":1662556006000,"results":"114","hashOfConfig":"89"},{"size":298,"mtime":1700569940935,"results":"115","hashOfConfig":"89"},{"size":307,"mtime":1662556006000,"results":"116","hashOfConfig":"89"},{"size":1169,"mtime":1702127358596,"results":"117","hashOfConfig":"89"},{"size":335,"mtime":1662556006000,"results":"118","hashOfConfig":"89"},{"size":479,"mtime":1700025848713,"results":"119","hashOfConfig":"89"},{"size":179,"mtime":1662556006000,"results":"120","hashOfConfig":"89"},{"size":1830,"mtime":1700372228338,"results":"121","hashOfConfig":"89"},{"size":341,"mtime":1662556006000,"results":"122","hashOfConfig":"89"},{"size":986,"mtime":1662556006000,"results":"123","hashOfConfig":"89"},{"size":2156,"mtime":1702626736284,"results":"124","hashOfConfig":"89"},{"size":694,"mtime":1662556006000,"results":"125","hashOfConfig":"89"},{"size":5798,"mtime":1700241917741,"results":"126","hashOfConfig":"89"},{"size":523,"mtime":1662556006000,"results":"127","hashOfConfig":"89"},{"size":2633,"mtime":1662556006000,"results":"128","hashOfConfig":"89"},{"size":984,"mtime":1700372226076,"results":"129","hashOfConfig":"89"},{"size":889,"mtime":1702401516844,"results":"130","hashOfConfig":"89"},{"size":626,"mtime":1704662772123,"results":"131","hashOfConfig":"132"},{"size":1491,"mtime":1704713068264,"results":"133","hashOfConfig":"132"},{"size":153,"mtime":1662556006000,"results":"134","hashOfConfig":"132"},{"size":396,"mtime":1662556006000,"results":"135","hashOfConfig":"132"},{"size":9447,"mtime":1703871062072,"results":"136","hashOfConfig":"132"},{"size":27148,"mtime":1704754880057,"results":"137","hashOfConfig":"132"},{"size":17463,"mtime":1704633288557,"results":"138","hashOfConfig":"132"},{"size":5996,"mtime":1704637030188,"results":"139","hashOfConfig":"132"},{"size":9026,"mtime":1704642131328,"results":"140","hashOfConfig":"132"},{"size":13365,"mtime":1702406365912,"results":"141","hashOfConfig":"132"},{"size":17013,"mtime":1704669471262,"results":"142","hashOfConfig":"132"},{"size":7040,"mtime":1702405648578,"results":"143","hashOfConfig":"132"},{"size":3958,"mtime":1704479946072,"results":"144","hashOfConfig":"132"},{"size":8422,"mtime":1704662898787,"results":"145","hashOfConfig":"132"},{"size":4121,"mtime":1700589450820,"results":"146","hashOfConfig":"132"},{"size":5143,"mtime":1702128097951,"results":"147","hashOfConfig":"132"},{"size":249,"mtime":1704661483684,"results":"148","hashOfConfig":"132"},{"size":290,"mtime":1662556006000,"results":"149","hashOfConfig":"132"},{"size":329,"mtime":1703656364973,"results":"150","hashOfConfig":"132"},{"size":619,"mtime":1704637878899,"results":"151","hashOfConfig":"132"},{"size":1110,"mtime":1704637755239,"results":"152","hashOfConfig":"132"},{"size":335,"mtime":1662556006000,"results":"153","hashOfConfig":"132"},{"size":5845,"mtime":1703870852978,"results":"154","hashOfConfig":"132"},{"size":390,"mtime":1704637577433,"results":"155","hashOfConfig":"132"},{"size":505,"mtime":1700239660882,"results":"156","hashOfConfig":"132"},{"size":479,"mtime":1700025848713,"results":"157","hashOfConfig":"132"},{"size":179,"mtime":1662556006000,"results":"158","hashOfConfig":"132"},{"size":482,"mtime":1662556006000,"results":"159","hashOfConfig":"132"},{"size":307,"mtime":1662556006000,"results":"160","hashOfConfig":"132"},{"size":419,"mtime":1662556006000,"results":"161","hashOfConfig":"132"},{"size":294,"mtime":1700561621221,"results":"162","hashOfConfig":"132"},{"size":430,"mtime":1662556006000,"results":"163","hashOfConfig":"132"},{"size":1969,"mtime":1703874257607,"results":"164","hashOfConfig":"132"},{"size":2176,"mtime":1704476497860,"results":"165","hashOfConfig":"132"},{"size":774,"mtime":1704464277523,"results":"166","hashOfConfig":"132"},{"size":298,"mtime":1700569940935,"results":"167","hashOfConfig":"132"},{"size":1241,"mtime":1704713074766,"results":"168","hashOfConfig":"132"},{"size":523,"mtime":1662556006000,"results":"169","hashOfConfig":"132"},{"size":2633,"mtime":1662556006000,"results":"170","hashOfConfig":"132"},{"size":889,"mtime":1704746104767,"results":"171","hashOfConfig":"132"},{"size":984,"mtime":1700372226076,"results":"172","hashOfConfig":"132"},{"size":904,"mtime":1704753350352,"results":"173","hashOfConfig":"132"},{"size":550,"mtime":1704463028225,"results":"174","hashOfConfig":"132"},{"size":1104,"mtime":1704649710349,"results":"175","hashOfConfig":"132"},{"size":180,"mtime":1704744246115,"results":"176","hashOfConfig":"132"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},"1718ul2",{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"179"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"179"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"179"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"179"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"179"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"179"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"179"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"179"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"179"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"179"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"179"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},"1kgnvu8",{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"276"},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"276"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"276"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"276"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"276"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"276"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"276"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"276"},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"276"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"276"},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"276"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"327","messages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"276"},{"filePath":"330","messages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"332","messages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"334","messages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"336","messages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"340","messages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"342","messages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"346","messages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"350","messages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"276"},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"359","messages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"363","messages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"365","messages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"276"},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"369","messages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"371","messages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"373","messages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},"D:\\Funix\\NJS\\Asm3\\client\\src\\index.js",[],["375","376"],"D:\\Funix\\NJS\\Asm3\\client\\src\\App.jsx",["377"],"D:\\Funix\\NJS\\Asm3\\client\\src\\store.js",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\reportWebVitals.js",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\History\\History.jsx",[],["378","379"],"D:\\Funix\\NJS\\Asm3\\client\\src\\Detail\\Detail.jsx",["380","381","382","383","384","385"],"import React, { useEffect, useState } from \"react\";\nimport ProductAPI from \"../API/ProductAPI\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport alertify from \"alertifyjs\";\nimport { addCart } from \"../Redux/Action/ActionCart\";\nimport CartAPI from \"../API/CartAPI\";\nimport queryString from \"query-string\";\nimport CommentAPI from \"../API/CommentAPI\";\nimport convertMoney from \"../convertMoney\";\n\nfunction Detail(props) {\n  const [detail, setDetail] = useState({});\n\n  const dispatch = useDispatch();\n\n  //id params cho từng sản phẩm\n  const { id } = useParams();\n\n  //id_user được lấy từ redux\n  const id_user = useSelector((state) => state.Cart.id_user);\n\n  //listCart được lấy từ redux\n  const listCart = useSelector((state) => state.Cart.listCart);\n\n  const [product, setProduct] = useState([]);\n\n  const [star, setStar] = useState(1);\n\n  const [comment, setComment] = useState(\"\");\n\n  // id_user đã đăng nhập\n  const idUser = useSelector((state) => state.Session.idUser);\n\n  // Listcomment\n  const [list_comment, set_list_comment] = useState([]);\n\n  // state này dùng để load lại comment khi user gửi comment lên\n  const [load_comment, set_load_comment] = useState(false);\n\n  // Hàm này dùng để lấy dữ liệu comment\n  // Hàm này sẽ chạy lại phụ thuộc vào id Param\n  useEffect(() => {\n    const fetchData = async () => {\n      const params = {\n        idProduct: id,\n      };\n\n      const query = \"?\" + queryString.stringify(params);\n\n      const response = await CommentAPI.getCommentProduct(query);\n      console.log(response);\n\n      set_list_comment(response);\n    };\n\n    fetchData();\n  }, [id]);\n\n  // Hàm thay đổi sao đánh giá\n  const onChangeStar = (e) => {\n    setStar(e.target.value);\n  };\n\n  // Hàm thay đổi comment\n  const onChangeComment = (e) => {\n    setComment(e.target.value);\n  };\n\n  // Hàm này dùng để bình luận\n  const handlerComment = () => {\n    if (idUser === \"\") {\n      alertify.set(\"notifier\", \"position\", \"bottom-left\");\n      alertify.error(\"Vui Lòng Kiểm Tra Đăng Nhập!\");\n      return;\n    }\n\n    const fetchSendComment = async () => {\n      const params = {\n        idProduct: id,\n        idUser: localStorage.getItem(\"id_user\"),\n        fullname: localStorage.getItem(\"name_user\"),\n        content: comment,\n        star: star,\n      };\n\n      const query = \"?\" + queryString.stringify(params);\n\n      const response = await CommentAPI.postCommentProduct(query);\n      console.log(response);\n\n      set_load_comment(true);\n    };\n\n    fetchSendComment();\n\n    setComment(\"\");\n  };\n\n  // Hàm này dùng để load lại dữ liệu comment\n  // Phụ thuộc vào state load_comment\n  useEffect(() => {\n    if (load_comment) {\n      const fetchData = async () => {\n        const params = {\n          idProduct: id,\n        };\n\n        const query = \"?\" + queryString.stringify(params);\n\n        const response = await CommentAPI.getCommentProduct(query);\n        console.log(response);\n\n        set_list_comment(response);\n      };\n\n      fetchData();\n\n      set_load_comment(false);\n    }\n  }, [load_comment]);\n\n  //Hàm này gọi API và cắt chỉ lấy 4 sản phẩm\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await ProductAPI.getAPI();\n      const data = response;\n      setProduct(data);\n    };\n\n    fetchData();\n  }, []);\n\n  //Phần này là để thay đổi số lượng khi mua sản phẩm\n  const [text, setText] = useState(1);\n  const onChangeText = (e) => {\n    setText(e.target.value);\n  };\n\n  //Tăng lên 1 đơn vị\n  const upText = () => {\n    const value = parseInt(text) + 1;\n\n    setText(value);\n  };\n\n  //Giảm 1 đơn vị\n  const downText = () => {\n    const value = parseInt(text) - 1;\n\n    if (value === 0) return;\n\n    setText(value);\n  };\n\n  //Hàm này để lấy dữ liệu chi tiết sản phẩm\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await ProductAPI.getDetail(id);\n      console.log(response);\n      setDetail(response);\n    };\n\n    fetchData();\n  }, [id]);\n\n  //Phần này dùng để xem review hay description\n  const [review, setReview] = useState(\"description\");\n  const handlerReview = (value) => {\n    setReview(value);\n  };\n\n  //Hàm này là Thêm Sản Phẩm\n  const addToCart = () => {\n    //khi người dùng vẫn bấm nút đặt hàng dù đã hết hàng ,Kiểm tra số lượng sản phẩm trong kho mà = 0 thì hiển thị thông báo\n    if (detail.count === 0) {\n      alert(\n        \"Rất tiếc, sản phẩm này hiện không tồn tại. Hãy chọn một phương thức kết hợp khác.\"\n      );\n      return;\n    }\n    if (text > detail.count) {\n      alert(\n        \"kiểm tra lại số lượng đặt , vượt quá số lượng có của chúng tôi! Vui lòng đặt lại\"\n      );\n      return;\n    }\n    let id_user_cart = \"\";\n\n    if (localStorage.getItem(\"id_user\")) {\n      id_user_cart = localStorage.getItem(\"id_user\");\n      console.log(id_user_cart);\n    } else {\n      id_user_cart = id_user;\n    }\n\n    const data = {\n      idUser: id_user_cart,\n      idProduct: detail._id,\n      nameProduct: detail.name,\n      priceProduct: detail.price,\n      count: text,\n      img: detail.img1,\n    };\n\n    if (localStorage.getItem(\"id_user\")) {\n      console.log(\"Bạn Đã Đăng Nhập!\");\n\n      const fetchPost = async () => {\n        const dataBody = {\n          idUser: id_user_cart, //localStorage.getItem('id_user')\n          idProduct: detail._id, // Lấy idProduct\n          count: text, // Lấy số lượng\n        };\n\n        const body = JSON.stringify(dataBody);\n\n        const response = await CartAPI.postAddToCart(body);\n\n        console.log(response);\n      };\n\n      fetchPost();\n    } else {\n      const action = addCart(data);\n      dispatch(action);\n    }\n\n    alertify.set(\"notifier\", \"position\", \"bottom-left\");\n    alertify.success(\"Bạn Đã Thêm Hàng Thành Công!\");\n  };\n\n  return (\n    <section className=\"py-5\">\n      <div className=\"container\">\n        <div className=\"row mb-5\">\n          <div className=\"col-lg-6\">\n            <div className=\"row m-sm-0\">\n              <div className=\"col-sm-2 p-sm-0 order-2 order-sm-1 mt-2 mt-sm-0\">\n                <div\n                  className=\"owl-thumbs d-flex flex-row flex-sm-column\"\n                  data-slider-id=\"1\"\n                >\n                  <div className=\"owl-thumb-item flex-fill mb-2 mr-2 mr-sm-0\">\n                    <img className=\"w-100\" src={detail.img1} alt=\"...\" />\n                  </div>\n                  <div className=\"owl-thumb-item flex-fill mb-2 mr-2 mr-sm-0\">\n                    <img className=\"w-100\" src={detail.img2} alt=\"...\" />\n                  </div>\n                  <div className=\"owl-thumb-item flex-fill mb-2 mr-2 mr-sm-0\">\n                    <img className=\"w-100\" src={detail.img3} alt=\"...\" />\n                  </div>\n                  <div className=\"owl-thumb-item flex-fill mb-2 mr-2 mr-sm-0\">\n                    <img className=\"w-100\" src={detail.img4} alt=\"...\" />\n                  </div>\n                </div>\n              </div>\n\n              <div\n                id=\"carouselExampleControls\"\n                className=\"carousel slide col-sm-10 order-1 order-sm-2\"\n                data-ride=\"carousel\"\n              >\n                <div className=\"carousel-inner owl-carousel product-slider\">\n                  <div className=\"carousel-item active\">\n                    <img\n                      className=\"d-block w-100\"\n                      src={detail.img1}\n                      alt=\"First slide\"\n                    />\n                  </div>\n                  <div className=\"carousel-item\">\n                    <img\n                      className=\"d-block w-100\"\n                      src={detail.img2}\n                      alt=\"Second slide\"\n                    />\n                  </div>\n                  <div className=\"carousel-item\">\n                    <img\n                      className=\"d-block w-100\"\n                      src={detail.img3}\n                      alt=\"Third slide\"\n                    />\n                  </div>\n                  <div className=\"carousel-item\">\n                    <img\n                      className=\"d-block w-100\"\n                      src={detail.img4}\n                      alt=\"Third slide\"\n                    />\n                  </div>\n                </div>\n                <a\n                  className=\"carousel-control-prev\"\n                  href=\"#carouselExampleControls\"\n                  role=\"button\"\n                  data-slide=\"prev\"\n                >\n                  <span\n                    className=\"carousel-control-prev-icon\"\n                    aria-hidden=\"true\"\n                  ></span>\n                  <span className=\"sr-only\">Previous</span>\n                </a>\n                <a\n                  className=\"carousel-control-next\"\n                  href=\"#carouselExampleControls\"\n                  role=\"button\"\n                  data-slide=\"next\"\n                >\n                  <span\n                    className=\"carousel-control-next-icon\"\n                    aria-hidden=\"true\"\n                  ></span>\n                  <span className=\"sr-only\">Next</span>\n                </a>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-lg-6\">\n            <br></br>\n            <h1>{detail.name}</h1>\n            <br></br>\n            <p className=\"text-muted lead\">{convertMoney(detail.price)} VND</p>\n            <br></br>\n            <p className=\"text-small mb-4\">{detail.short_desc}</p>\n            <ul className=\"list-unstyled small d-inline-block\">\n              <strong>{detail.count} sản phẩm có sẵn</strong>\n              <li className=\"mb-3 bg-white text-muted\">\n                <strong className=\"text-uppercase text-dark\">Category:</strong>\n                <span className=\"reset-anchor ml-2\">{detail.category}s</span>\n              </li>\n            </ul>\n            <div className=\"row align-items-stretch mb-4\">\n              <div className=\"col-sm-5 pr-sm-0\">\n                <div className=\"border d-flex align-items-center justify-content-between py-1 px-3 bg-white border-white\">\n                  <span className=\"small text-uppercase text-gray mr-4 no-select\">\n                    Quantity\n                  </span>\n                  <div className=\"quantity\">\n                    <button\n                      className=\"dec-btn p-0\"\n                      style={{ cursor: \"pointer\" }}\n                    >\n                      <i className=\"fas fa-caret-left\" onClick={downText}></i>\n                    </button>\n                    <input\n                      className=\"form-control border-0 shadow-0 p-0\"\n                      type=\"text\"\n                      value={text}\n                      onChange={onChangeText}\n                    />\n                    <button\n                      className=\"inc-btn p-0\"\n                      style={{ cursor: \"pointer\" }}\n                    >\n                      <i className=\"fas fa-caret-right\" onClick={upText}></i>\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-sm-3 pl-sm-0\">\n                <span\n                  className=\"btn btn-dark btn-sm btn-block d-flex align-items-center justify-content-center px-0 text-white\"\n                  onClick={addToCart}\n                >\n                  Add to cart\n                </span>\n              </div>\n              <br></br>\n              <br></br>\n            </div>\n          </div>\n        </div>\n        {/* <div className='form-group'>\n\t\t\t\t\t<label htmlFor='exampleFormControlTextarea1'>Comment:</label>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\trows='3'\n\t\t\t\t\t\tonChange={onChangeComment}\n\t\t\t\t\t\tvalue={comment}></textarea>\n\t\t\t\t</div> */}\n        {/* <div className='d-flex justify-content-between'>\n\t\t\t\t\t<div className='d-flex w-25'>\n\t\t\t\t\t\t<span className='mt-2'>Evaluate: </span>\n\t\t\t\t\t\t&nbsp; &nbsp;\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName='form-control w-25'\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\tmin='1'\n\t\t\t\t\t\t\tmax='5'\n\t\t\t\t\t\t\tvalue={star}\n\t\t\t\t\t\t\tonChange={onChangeStar}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t&nbsp; &nbsp;\n\t\t\t\t\t\t<span className='mt-2'>Star</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\tclassName='btn btn-dark btn-sm btn-block px-0 text-white'\n\t\t\t\t\t\t\tstyle={{ width: '12rem' }}\n\t\t\t\t\t\t\tonClick={handlerComment}>\n\t\t\t\t\t\t\tSend\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div> */}\n        <br />\n        <ul className=\"nav nav-tabs border-0\">\n          <li className=\"nav-item\">\n            <a\n              className=\"nav-link fix_comment\"\n              onClick={() => handlerReview(\"description\")}\n              style={\n                review === \"description\"\n                  ? { backgroundColor: \"#383838\", color: \"#ffffff\" }\n                  : { color: \"#383838\" }\n              }\n            >\n              Description\n            </a>\n          </li>\n          {/* <li className='nav-item'>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\tclassName='nav-link fix_comment'\n\t\t\t\t\t\t\tonClick={() => handlerReview('review')}\n\t\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\t\treview === 'review'\n\t\t\t\t\t\t\t\t\t? { backgroundColor: '#383838', color: '#ffffff' }\n\t\t\t\t\t\t\t\t\t: { color: '#383838' }\n\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\tReviews\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li> */}\n        </ul>\n        <div className=\"tab-content mb-5\">\n          {review === \"description\" ? (\n            <div className=\"tab-pane fade show active\">\n              <div className=\"pt-4 pb-4 bg-white\">\n                <h6 className=\"text-uppercase\">Product description </h6>\n                <br></br>\n                <p\n                  className=\"text-muted text-small mb-0\"\n                  style={{ whiteSpace: \"pre-wrap\" }}\n                >\n                  {detail.long_desc}\n                </p>\n              </div>\n            </div>\n          ) : (\n            <div className=\"tab-pane fade show active\">\n              <div className=\"p-4 p-lg-5 bg-white\">\n                <div className=\"row\">\n                  <div className=\"col-lg-8\">\n                    {list_comment &&\n                      list_comment.map((value) => (\n                        <div className=\"media mb-3\" key={value._id}>\n                          <img\n                            className=\"rounded-circle\"\n                            src=\"https://img.icons8.com/color/36/000000/administrator-male.png\"\n                            alt=\"\"\n                            width=\"50\"\n                          />\n                          <div className=\"media-body ml-3\">\n                            <h6 className=\"mb-0 text-uppercase\">\n                              {value.fullname}\n                            </h6>\n                            <p className=\"small text-muted mb-0 text-uppercase\">\n                              dd/mm/yyyy\n                            </p>\n                            <ul className=\"list-inline mb-1 text-xs\">\n                              <li className=\"list-inline-item m-0\">\n                                <i className={value.star1}></i>\n                              </li>\n                              <li className=\"list-inline-item m-0\">\n                                <i className={value.star2}></i>\n                              </li>\n                              <li className=\"list-inline-item m-0\">\n                                <i className={value.star3}></i>\n                              </li>\n                              <li className=\"list-inline-item m-0\">\n                                <i className={value.star4}></i>\n                              </li>\n                              <li className=\"list-inline-item m-0\">\n                                <i className={value.star5}></i>\n                              </li>\n                            </ul>\n                            <p className=\"text-small mb-0 text-muted\">\n                              {value.content}\n                            </p>\n                          </div>\n                        </div>\n                      ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n        <h2 className=\"h5 text-uppercase mb-4\">Related products</h2>\n        <div className=\"row\">\n          {product &&\n            product\n              .filter(\n                (el) => el.category === detail.category && el._id !== detail._id\n              )\n              .map((value) => (\n                <div className=\"col-lg-3 col-sm-6\" key={value._id}>\n                  <div className=\"product text-center skel-loader\">\n                    <div className=\"d-block mb-3 position-relative\">\n                      <img\n                        className=\"img-fluid w-100\"\n                        src={value.img1}\n                        alt=\"...\"\n                      />\n                      <div className=\"product-overlay\">\n                        <ul className=\"mb-0 list-inline\"></ul>\n                      </div>\n                    </div>\n                    <h6>\n                      <Link\n                        className=\"reset-anchor\"\n                        to={`/detail/${value._id}`}\n                      >\n                        {value.name}\n                      </Link>\n                    </h6>\n                    <p className=\"small text-muted\">\n                      {convertMoney(value.price)} VND\n                    </p>\n                  </div>\n                </div>\n              ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Detail;\n","D:\\Funix\\NJS\\Asm3\\client\\src\\Authentication\\SignUp.jsx",["386","387"],"import React, { useState } from \"react\";\nimport { Link, Navigate, useNavigate } from \"react-router-dom\";\nimport UserAPI from \"../API/UserAPI\";\nimport \"./Auth.css\";\nimport queryString from \"query-string\";\nimport MessengerAPI from \"../API/MessengerAPI\";\n\nSignUp.propTypes = {};\n\nfunction SignUp(props) {\n  const [fullname, setFullName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n\n  const [errorEmail, setEmailError] = useState(false);\n  const [emailRegex, setEmailRegex] = useState(false);\n  const [errorPassword, setPasswordError] = useState(false);\n  const [errorFullname, setFullnameError] = useState(false);\n  const [errorPhone, setPhoneError] = useState(false);\n\n  const [success, setSuccess] = useState(false);\n  const navigation = useNavigate();\n\n  const onChangeName = (e) => {\n    setFullName(e.target.value);\n  };\n\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const onChangePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const onChangePhone = (e) => {\n    setPhone(e.target.value);\n  };\n\n  const handlerSignUp = (e) => {\n    e.preventDefault();\n\n    if (!fullname) {\n      setFullnameError(true);\n      setEmailError(false);\n      setPhoneError(false);\n      setPasswordError(false);\n      setEmailRegex(false);\n      return;\n    } else {\n      setFullnameError(false);\n      setPhoneError(false);\n      setPasswordError(false);\n      setFullnameError(false);\n      setEmailRegex(false);\n\n      if (!email) {\n        setFullnameError(false);\n        setEmailError(true);\n        setPhoneError(false);\n        setPasswordError(false);\n        return;\n      } else {\n        setEmailError(false);\n        setPhoneError(false);\n        setPasswordError(false);\n        setFullnameError(false);\n\n        if (!validateEmail(email)) {\n          setEmailRegex(true);\n          setFullnameError(false);\n          setEmailError(false);\n          setPhoneError(false);\n          setPasswordError(false);\n          return;\n        } else {\n          setEmailRegex(false);\n\n          if (!password) {\n            setFullnameError(false);\n            setEmailError(false);\n            setPhoneError(false);\n            setPasswordError(true);\n            return;\n          } else {\n            setFullnameError(false);\n            setPhoneError(false);\n            setPasswordError(false);\n            setFullnameError(false);\n            setEmailRegex(false);\n\n            if (!phone) {\n              setFullnameError(false);\n              setEmailError(false);\n              setPhoneError(true);\n              setPasswordError(false);\n            } else {\n              const fetchSignUp = async () => {\n                const body = JSON.stringify({\n                  fullname: fullname,\n                  email: email,\n                  password: password,\n                  phone: phone,\n                });\n\n                const res = await UserAPI.postSignUp(body);\n                res.message && alert(res.message);\n                if (res.isRegister) {\n                  alert(\"Tạo tài khoản thành công!\");\n                  navigation(\"/signin\");\n                }\n                console.log(res);\n                setSuccess(true);\n              };\n\n              fetchSignUp();\n\n              // Hàm này dùng để tạo các conversation cho user và admin\n              const fetchConversation = async () => {\n                const params = {\n                  email: email,\n                  password: password,\n                };\n\n                const query = \"?\" + queryString.stringify(params);\n\n                const response = await MessengerAPI.postConversation(query);\n                console.log(response);\n              };\n\n              fetchConversation();\n            }\n          }\n        }\n      }\n    }\n  };\n\n  function validateEmail(email) {\n    const re =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  return (\n    <div className=\"limiter\">\n      <div className=\"container-login100\">\n        <div className=\"wrap-login100 p-l-55 p-r-55 p-t-65 p-b-50\">\n          <span className=\"login100-form-title p-b-33\">Sign Up</span>\n          <div className=\"d-flex justify-content-center pb-5\">\n            {errorFullname && (\n              <span className=\"text-danger\">\n                * Please Check Your Full Name!\n              </span>\n            )}\n            {errorEmail && (\n              <span className=\"text-danger\">* Please Check Your Email!</span>\n            )}\n            {emailRegex && (\n              <span className=\"text-danger\">* Incorrect Email Format</span>\n            )}\n            {errorPassword && (\n              <span className=\"text-danger\">* Please Check Your Password!</span>\n            )}\n            {errorPhone && (\n              <span className=\"text-danger\">\n                * Please Check Your Phone Number!\n              </span>\n            )}\n          </div>\n          <div className=\"wrap-input100 validate-input\">\n            <input\n              className=\"input100\"\n              value={fullname}\n              onChange={onChangeName}\n              type=\"text\"\n              placeholder=\"Full Name\"\n            />\n          </div>\n\n          <div className=\"wrap-input100 rs1 validate-input\">\n            <input\n              className=\"input100\"\n              value={email}\n              onChange={onChangeEmail}\n              type=\"text\"\n              placeholder=\"Email\"\n            />\n          </div>\n\n          <div className=\"wrap-input100 rs1 validate-input\">\n            <input\n              className=\"input100\"\n              value={password}\n              onChange={onChangePassword}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n          </div>\n\n          <div className=\"wrap-input100 rs1 validate-input\">\n            <input\n              className=\"input100\"\n              value={phone}\n              onChange={onChangePhone}\n              type=\"text\"\n              placeholder=\"Phone\"\n            />\n          </div>\n\n          <div className=\"container-login100-form-btn m-t-20\">\n            <button className=\"login100-form-btn\" onClick={handlerSignUp}>\n              Sign Up\n            </button>\n          </div>\n\n          <div className=\"text-center p-t-45 p-b-4\">\n            <span className=\"txt1\">Login?</span>\n            &nbsp;\n            <Link to=\"/signin\" className=\"txt2 hov1\">\n              Click\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SignUp;\n","D:\\Funix\\NJS\\Asm3\\client\\src\\Home\\Home.jsx",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\Authentication\\SignIn.jsx",["388","389"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport UserAPI from \"../API/UserAPI\";\nimport { addSession } from \"../Redux/Action/ActionSession\";\nimport \"./Auth.css\";\nimport queryString from \"query-string\";\nimport CartAPI from \"../API/CartAPI\";\n\nfunction SignIn(props) {\n  const navigation = useNavigate();\n  //listCart được lấy từ redux\n  const listCart = useSelector((state) => state.Cart.listCart);\n\n  const [email, setEmail] = useState(\"\");\n\n  const [password, setPassword] = useState(\"\");\n\n  const [user, setUser] = useState([]);\n\n  const [errorEmail, setErrorEmail] = useState(false);\n  const [emailRegex, setEmailRegex] = useState(false);\n  const [errorPassword, setErrorPassword] = useState(false);\n\n  const [redirect, setRedirect] = useState(false);\n\n  const [checkPush, setCheckPush] = useState(false);\n  const [isLogin, setIsLogin] = useState(false);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await UserAPI.getAllData();\n\n      setUser(response.data);\n    };\n\n    fetchData();\n  }, []);\n\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const onChangePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const onSubmit = () => {\n    if (!email) {\n      setErrorEmail(true);\n      return;\n    } else {\n      if (!password) {\n        setErrorEmail(false);\n        setErrorPassword(true);\n        return;\n      } else {\n        setErrorPassword(false);\n        if (!validateEmail(email)) {\n          setEmailRegex(true);\n          return;\n        } else {\n          setEmailRegex(false);\n\n          const fetchLogin = async () => {\n            const body = JSON.stringify({\n              email: email,\n              password: password,\n            });\n\n            const res = await UserAPI.postLogin(body);\n            console.log(res);\n            setIsLogin(res.isLogin);\n            setUser(res.user);\n            //Nhận về lỗi trả về khi mà không có dữ liệu được tìm thấy\n            if (typeof res !== undefined) {\n              setErrorEmail(res.invalidateUser);\n              setErrorPassword(res.invalidatePassword);\n            }\n\n            //login Thành công\n            if (res.isLogin) {\n              localStorage.setItem(\"id_user\", email);\n\n              localStorage.setItem(\"name_user\", user?.fullName);\n\n              const action = addSession(localStorage.getItem(\"id_user\"));\n              dispatch(action);\n\n              setCheckPush(true);\n\n              navigation(\"/\");\n            }\n          };\n\n          fetchLogin();\n        }\n      }\n    }\n  };\n\n  //Hàm này dùng để đưa hết tất cả carts vào API của user\n  useEffect(() => {\n    const fetchData = async () => {\n      //Lần đầu sẽ không thực hiện insert được vì addCart = ''\n      if (checkPush === true) {\n        for (let i = 0; i < listCart.length; i++) {\n          //Nó sẽ lấy idUser và idProduct và count cần thêm để gửi lên server\n          const params = {\n            idUser: localStorage.getItem(\"id_user\"),\n            idProduct: listCart[i].idProduct,\n            count: listCart[i].count,\n          };\n\n          const query = \"?\" + queryString.stringify(params);\n\n          const response = await CartAPI.postAddToCart(query);\n          console.log(response);\n        }\n\n        setRedirect(true);\n      }\n    };\n\n    fetchData();\n  }, [checkPush]);\n\n  function validateEmail(email) {\n    const re =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  return (\n    <div className=\"limiter\">\n      <div className=\"container-login100\">\n        <div className=\"wrap-login100 p-l-55 p-r-55 p-t-65 p-b-50\">\n          <span className=\"login100-form-title p-b-33\">Sign In</span>\n\n          <div className=\"d-flex justify-content-center pb-5\">\n            {emailRegex && (\n              <span className=\"text-danger\">* Incorrect Email Format</span>\n            )}\n            {errorEmail && (\n              <span className=\"text-danger\">* Please Check Your Email</span>\n            )}\n            {errorPassword && (\n              <span className=\"text-danger\">* Please Check Your Password</span>\n            )}\n          </div>\n\n          <div className=\"wrap-input100 validate-input\">\n            <input\n              className=\"input100\"\n              type=\"text\"\n              placeholder=\"Email\"\n              value={email}\n              onChange={onChangeEmail}\n            />\n          </div>\n\n          <div className=\"wrap-input100 rs1 validate-input\">\n            <input\n              className=\"input100\"\n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={onChangePassword}\n            />\n          </div>\n\n          <div className=\"container-login100-form-btn m-t-20\">\n            {redirect && <redirect to={`/`} />}\n            <button className=\"login100-form-btn\" onClick={onSubmit}>\n              Sign in\n            </button>\n          </div>\n\n          <div className=\"text-center p-t-45 p-b-4\">\n            <span className=\"txt1\">Create an account?</span>\n            &nbsp;\n            <Link to=\"/signup\" className=\"txt2 hov1\">\n              Sign up\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SignIn;\n","D:\\Funix\\NJS\\Asm3\\client\\src\\Checkout\\Checkout.jsx",["390","391","392","393","394"],"import React, { useEffect, useState } from \"react\";\nimport queryString from \"query-string\";\nimport CartAPI from \"../API/CartAPI\";\nimport CheckoutAPI from \"../API/CheckoutAPI\";\nimport convertMoney from \"../convertMoney\";\nimport \"./Checkout.css\";\n\n// import io from \"socket.io-client\";\n// const socket = io.connect(\"http://localhost:5000\");\n// const socket = io.connect(\"https://backend-shop-rzlv.onrender.com\");\n\nfunction Checkout(props) {\n  const [carts, setCarts] = useState([]);\n\n  const [total, setTotal] = useState(0);\n\n  const [fullName, setFullName] = useState(\"\");\n  const [fullnameError, setFullnameError] = useState(false);\n\n  const [email, setEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(false);\n\n  const [emailRegex, setEmailRegex] = useState(false);\n\n  const [phone, setPhone] = useState(\"\");\n  const [phoneError, setPhoneError] = useState(false);\n\n  const [address, setAddress] = useState(\"\");\n  const [addressError, setAddressError] = useState(false);\n\n  const [success, setSuccess] = useState(false);\n\n  const [load, setLoad] = useState(false);\n\n  //Hàm này dùng để gọi API và render số sản phẩm\n  useEffect(() => {\n    if (localStorage.getItem(\"id_user\")) {\n      const fetchData = async () => {\n        const params = {\n          idUser: localStorage.getItem(\"id_user\"),\n        };\n\n        const query = \"?\" + queryString.stringify(params);\n\n        const response = await CartAPI.getCarts(query);\n\n        console.log(response);\n\n        setCarts(response);\n\n        getTotal(response);\n\n        if (response.length === 0) {\n          window.location.replace(\"/cart\");\n        }\n      };\n\n      fetchData();\n    }\n  }, []);\n\n  //Hàm này dùng để tính tổng tiền carts\n  function getTotal(carts) {\n    let sub_total = 0;\n\n    const sum_total = carts.map((value) => {\n      return (sub_total +=\n        parseInt(value.priceProduct) * parseInt(value.count));\n    });\n\n    setTotal(sub_total);\n  }\n\n  //Check Validation\n  const handlerSubmit = () => {\n    if (!fullName) {\n      setFullnameError(true);\n      setEmailError(false);\n      setPhoneError(false);\n      setAddressError(false);\n      return;\n    } else {\n      if (!email) {\n        setFullnameError(false);\n        setEmailError(true);\n        setPhoneError(false);\n        setAddressError(false);\n        return;\n      } else {\n        setPhoneError(false);\n        setAddressError(false);\n        setFullnameError(false);\n\n        if (!validateEmail(email)) {\n          setEmailRegex(true);\n          setFullnameError(false);\n          setEmailError(false);\n          setPhoneError(false);\n          setAddressError(false);\n          return;\n        } else {\n          setEmailRegex(false);\n\n          if (!phone) {\n            setFullnameError(false);\n            setEmailError(false);\n            setPhoneError(true);\n            setAddressError(false);\n            return;\n          } else {\n            setFullnameError(false);\n            setEmailError(false);\n            setPhoneError(false);\n            setAddressError(false);\n\n            if (!address) {\n              setFullnameError(false);\n              setEmailError(false);\n              setPhoneError(false);\n              setAddressError(true);\n            } else {\n              const fetchCheckout = async () => {\n                console.log(total);\n                const product = carts?.map((item) => ({\n                  idProduct: item.idProduct,\n                  quantity: item.count,\n                }));\n\n                const body = JSON.stringify({\n                  idUser: localStorage.getItem(\"id_user\"),\n                  products: product,\n                  total,\n                  fullName,\n                  phone,\n                  address,\n                  delivery: \"Pending\",\n                  status: \"Completed\",\n                });\n\n                const response = await CheckoutAPI.placeOrder(body);\n                console.log(response);\n                if (response.message === \"Success\") {\n                  // Xóa các sản phẩm trong cart\n                  for (let i = 0; i < carts.length; i++) {\n                    const params = {\n                      idUser: carts[i].idUser,\n                      idProduct: carts[i].idProduct,\n                    };\n                    const query = \"?\" + queryString.stringify(params);\n                    const response = await CartAPI.deleteToCart(query);\n                  }\n                }\n              };\n\n              fetchCheckout();\n\n              console.log(\"Thanh Cong\");\n              setLoad(!load);\n            }\n          }\n        }\n      }\n    }\n  };\n\n  //Hàm này bắt đầu gửi Email xác nhận đơn hàng\n  useEffect(() => {\n    if (load) {\n      const sendMail = async () => {\n        const data = {\n          idUser: localStorage.getItem(\"id_user\"),\n          to: email,\n          fullName: fullName,\n          phone: parseInt(phone),\n          address: address,\n          productArr: carts,\n        };\n\n        const body = JSON.stringify(data);\n\n        const response = await CheckoutAPI.postEmail(body);\n\n        console.log(response);\n      };\n\n      sendMail();\n\n      const data = localStorage.getItem(\"id_user\");\n\n      // Gửi socket lên server\n      // socket.emit(\"send_order\", data);\n\n      //Dùng setTimeout delay 3s\n      //Sau 4s nó sẽ thực hiện\n      setTimeout(() => {\n        setSuccess(!success);\n        setLoad(!load);\n      }, 4000);\n    }\n  }, [load]);\n\n  const onChangeName = (e) => {\n    setFullName(e.target.value);\n  };\n\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const onChangePhone = (e) => {\n    setPhone(e.target.value);\n  };\n\n  const onChangeAddress = (e) => {\n    setAddress(e.target.value);\n  };\n\n  function validateEmail(email) {\n    const re =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  return (\n    <div>\n      {load && (\n        <div className=\"wrapper_loader\">\n          <div className=\"loader\"></div>\n        </div>\n      )}\n\n      <div className=\"container\">\n        <section className=\"py-5 bg-light\">\n          <div className=\"container\">\n            <div className=\"row px-4 px-lg-5 py-lg-4 align-items-center\">\n              <div className=\"col-lg-6\">\n                <h1 className=\"h2 text-uppercase mb-0\">Checkout</h1>\n              </div>\n              <div className=\"col-lg-6 text-lg-right\">\n                <nav aria-label=\"breadcrumb\">\n                  <ol className=\"breadcrumb justify-content-lg-end mb-0 px-0\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"index.html\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"cart.html\">Cart</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                      Checkout\n                    </li>\n                  </ol>\n                </nav>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {!success && (\n          <section className=\"py-5\">\n            <h2 className=\"h5 text-uppercase mb-4\">Billing details</h2>\n            <div className=\"row\">\n              <div className=\"col-lg-8\">\n                <form>\n                  <div className=\"row\">\n                    <div className=\"col-lg-12 form-group\">\n                      <label\n                        className=\"text-small text-uppercase\"\n                        htmlFor=\"Fullname\"\n                      >\n                        Full Name:\n                      </label>\n                      <input\n                        className=\"form-control form-control-lg\"\n                        value={fullName}\n                        onChange={onChangeName}\n                        type=\"text\"\n                        placeholder=\"Enter Your Full Name Here!\"\n                      />\n                      {fullnameError && (\n                        <span className=\"text-danger\">\n                          * Please Check Your Full Name!\n                        </span>\n                      )}\n                    </div>\n                    <div className=\"col-lg-12 form-group\">\n                      <label\n                        className=\"text-small text-uppercase\"\n                        htmlFor=\"Email\"\n                      >\n                        Email:{\" \"}\n                      </label>\n                      <input\n                        className=\"form-control form-control-lg\"\n                        value={email}\n                        onChange={onChangeEmail}\n                        type=\"text\"\n                        placeholder=\"Enter Your Email Here!\"\n                      />\n                      {emailError && (\n                        <span className=\"text-danger\">\n                          * Please Check Your Email!\n                        </span>\n                      )}\n                      {emailRegex && (\n                        <span className=\"text-danger\">\n                          * Incorrect Email Format\n                        </span>\n                      )}\n                    </div>\n                    <div className=\"col-lg-12 form-group\">\n                      <label\n                        className=\"text-small text-uppercase\"\n                        htmlFor=\"Phone\"\n                      >\n                        Phone Number:{\" \"}\n                      </label>\n                      <input\n                        className=\"form-control form-control-lg\"\n                        value={phone}\n                        onChange={onChangePhone}\n                        type=\"number\"\n                        placeholder=\"Enter Your Phone Number Here!\"\n                      />\n                      {phoneError && (\n                        <span className=\"text-danger\">\n                          * Please Check Your Phone Number!\n                        </span>\n                      )}\n                    </div>\n                    <div className=\"col-lg-12 form-group\">\n                      <label\n                        className=\"text-small text-uppercase\"\n                        htmlFor=\"Address\"\n                      >\n                        Address:{\" \"}\n                      </label>\n                      <input\n                        className=\"form-control form-control-lg\"\n                        value={address}\n                        onChange={onChangeAddress}\n                        type=\"text\"\n                        placeholder=\"Enter Your Address Here!\"\n                      />\n                      {addressError && (\n                        <span className=\"text-danger\">\n                          * Please Check Your Address!\n                        </span>\n                      )}\n                    </div>\n                    <div className=\"col-lg-12 form-group\">\n                      <a\n                        className=\"btn btn-dark\"\n                        style={{ color: \"white\" }}\n                        type=\"submit\"\n                        onClick={handlerSubmit}\n                      >\n                        Place order\n                      </a>\n                    </div>\n                  </div>\n                </form>\n              </div>\n              <div className=\"col-lg-4\">\n                <div className=\"card border-0 rounded-0 p-lg-4 bg-light\">\n                  <div className=\"card-body\">\n                    <h5 className=\"text-uppercase mb-4\">Your order</h5>\n                    <ul className=\"list-unstyled mb-0\">\n                      {carts &&\n                        carts.map((value) => (\n                          <div key={value._id}>\n                            <li className=\"d-flex align-items-center justify-content-between\">\n                              <strong className=\"small font-weight-bold\">\n                                {value.nameProduct}\n                              </strong>\n                              <br></br>\n                              <span className=\"text-muted small\">\n                                {convertMoney(value.priceProduct)} VND x{\" \"}\n                                {value.count}\n                              </span>\n                            </li>\n                            <li className=\"border-bottom my-2\"></li>\n                          </div>\n                        ))}\n                      <li className=\"d-flex align-items-center justify-content-between\">\n                        <strong className=\"text-uppercase small font-weight-bold\">\n                          Total\n                        </strong>\n                        <span>{convertMoney(total)} VND</span>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n        )}\n\n        {success && (\n          <section className=\"py-5\">\n            <div className=\"p-5\">\n              <h1>You Have Successfully Ordered!</h1>\n              <p style={{ fontSize: \"1.2rem\" }}>Please Check Your Email.</p>\n            </div>\n          </section>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Checkout;\n","D:\\Funix\\NJS\\Asm3\\client\\src\\History\\Component\\DetailHistory.jsx",["395"],"import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport HistoryAPI from \"../../API/HistoryAPI\";\n\nfunction DetailHistory(props) {\n  const { idHistory } = useParams();\n\n  console.log(idHistory);\n  const [cart, setCart] = useState([]);\n\n  const [information, setInformation] = useState({});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await HistoryAPI.getDetail(idHistory);\n      console.log(response);\n\n      setCart(response.cart);\n      setInformation(response.information);\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <section className=\"py-5 bg-light\">\n        <div className=\"container\">\n          <div className=\"row px-4 px-lg-5 py-lg-4 align-items-center\">\n            <div className=\"col-lg-6\">\n              <h1 className=\"h2 text-uppercase mb-0\">Detail Order</h1>\n            </div>\n            <div className=\"col-lg-6 text-lg-right\">\n              <nav aria-label=\"breadcrumb\">\n                <ol className=\"breadcrumb justify-content-lg-end mb-0 px-0\">\n                  <li className=\"breadcrumb-item active\">Detail</li>\n                </ol>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <div className=\"p-5\">\n        <h1 className=\"h2 text-uppercase\">Information Order</h1>\n        <p>ID User: {information.idUser}</p>\n        <p>Full Name: {information.fullName}</p>\n        <p>Phone: {information.phone}</p>\n        <p>Address: {information.address}</p>\n        <p>Total: {information.total}$</p>\n      </div>\n\n      <div className=\"table-responsive pt-5 pb-5\">\n        <table className=\"table\">\n          <thead className=\"bg-light\">\n            <tr className=\"text-center\">\n              <th className=\"border-0\" scope=\"col\">\n                {\" \"}\n                <strong className=\"text-small text-uppercase\">\n                  ID Product\n                </strong>\n              </th>\n              <th className=\"border-0\" scope=\"col\">\n                {\" \"}\n                <strong className=\"text-small text-uppercase\">Image</strong>\n              </th>\n              <th className=\"border-0\" scope=\"col\">\n                {\" \"}\n                <strong className=\"text-small text-uppercase\">Name</strong>\n              </th>\n              <th className=\"border-0\" scope=\"col\">\n                {\" \"}\n                <strong className=\"text-small text-uppercase\">Price</strong>\n              </th>\n              <th className=\"border-0\" scope=\"col\">\n                {\" \"}\n                <strong className=\"text-small text-uppercase\">Count</strong>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {cart &&\n              cart.map((value) => (\n                <tr className=\"text-center\" key={value.idProduct}>\n                  <td className=\"align-middle border-0\">\n                    <h6 className=\"mb-0\">{value.idProduct}</h6>\n                  </td>\n                  <td className=\"pl-0 border-0\">\n                    <div className=\"media align-items-center justify-content-center\">\n                      <Link\n                        className=\"reset-anchor d-block animsition-link\"\n                        to={`/detail/${value.idProduct}`}\n                      >\n                        <img src={value.imgProduct} alt=\"...\" width=\"200\" />\n                      </Link>\n                    </div>\n                  </td>\n                  <td className=\"align-middle border-0\">\n                    <h6 className=\"mb-0\">{value.nameProduct}</h6>\n                  </td>\n                  <td className=\"align-middle border-0\">\n                    <h6 className=\"mb-0\">\n                      {parseInt(value.priceProduct).toLocaleString()} /VND\n                    </h6>\n                  </td>\n                  <td className=\"align-middle border-0\">\n                    <h6 className=\"mb-0\">{value.count}</h6>\n                  </td>\n                </tr>\n              ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default DetailHistory;\n","D:\\Funix\\NJS\\Asm3\\client\\src\\Shop\\Shop.jsx",["396","397","398"],"D:\\Funix\\NJS\\Asm3\\client\\src\\Cart\\Cart.jsx",["399","400","401","402"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteCart, updateCart } from \"../Redux/Action/ActionCart\";\nimport ListCart from \"./Component/ListCart\";\nimport alertify from \"alertifyjs\";\nimport { Link, redirect, useNavigate } from \"react-router-dom\";\nimport CartAPI from \"../API/CartAPI\";\nimport queryString from \"query-string\";\nimport convertMoney from \"../convertMoney\";\n\nfunction Cart(props) {\n  //id_user được lấy từ redux\n  const id_user = useSelector((state) => state.Cart.id_user);\n\n  //listCart được lấy từ redux\n  const listCart = useSelector((state) => state.Cart.listCart);\n\n  const [cart, setCart] = useState([]);\n\n  const [total, setTotal] = useState();\n\n  const dispatch = useDispatch();\n\n  const navigation = useNavigate();\n  //State dùng để Load dữ liệu từ Redux\n  const [loadRedux, setLoadRedux] = useState({\n    idProduct: \"\",\n    count: \"\",\n  });\n\n  //State dùng để Load dữ liệu từ API\n  const [loadAPI, setLoadAPI] = useState(false);\n\n  //Hàm này dùng để Load dữ liệu ở Redux\n  //Khi người dùng chưa đăng nhập\n  useEffect(() => {\n    const fetchDataRedux = () => {\n      if (!localStorage.getItem(\"id_user\")) {\n        setCart(listCart);\n\n        getTotal(listCart);\n      }\n    };\n\n    fetchDataRedux();\n  }, [loadRedux]);\n\n  //Hàm này dùng để tính tổng tiền carts\n  function getTotal(carts) {\n    let sub_total = 0;\n\n    const sum_total = carts.map((value) => {\n      return (sub_total +=\n        parseInt(value.priceProduct) * parseInt(value.count));\n    });\n\n    setTotal(sub_total);\n  }\n\n  //Hàm này dùng để load dữ liệu từ API\n  //Khi người dùng đã đăng nhập\n  useEffect(() => {\n    const fetchData = async () => {\n      if (localStorage.getItem(\"id_user\")) {\n        const params = {\n          idUser: localStorage.getItem(\"id_user\"),\n        };\n\n        const query = \"?\" + queryString.stringify(params);\n\n        const response = await CartAPI.getCarts(query);\n\n        setCart(response);\n\n        getTotal(response);\n      }\n    };\n\n    fetchData();\n\n    setLoadAPI(false);\n  }, [loadAPI]);\n\n  //Hàm này dùng để truyền xuống cho component con xử và trả ngược dữ liệu lại component cha\n  const onDeleteCart = (getUser, getProduct) => {\n    console.log(\"idUser: \" + getUser + \", idProduct: \" + getProduct);\n\n    const isDelete = window.confirm(\"Bạn có chắc chắn muốn xóa sản phẩm này?\");\n\n    if (isDelete) {\n      if (localStorage.getItem(\"id_user\")) {\n        // user đã đăng nhập\n\n        //Sau khi nhận được dữ liệu ở component con truyền lên thì sẽ gọi API xử lý dữ liệu\n        const fetchDelete = async () => {\n          const params = {\n            idUser: getUser,\n            idProduct: getProduct,\n          };\n\n          const query = \"?\" + queryString.stringify(params);\n\n          const response = await CartAPI.deleteToCart(query);\n          console.log(response);\n        };\n\n        fetchDelete();\n\n        //Sau đó thay đổi state loadAPI và load lại hàm useEffect\n        setLoadAPI(true);\n\n        alertify.set(\"notifier\", \"position\", \"bottom-left\");\n        alertify.error(\"Bạn Đã Xóa Hàng Thành Công!\");\n      } else {\n        // user chưa đăng nhập\n\n        //Nếu không có phiên làm việc của Session User thì mình sẽ xử lý với Redux\n        const data = {\n          idProduct: getProduct,\n          idUser: getUser,\n        };\n\n        //Đưa dữ liệu vào Redux\n        const action = deleteCart(data);\n        dispatch(action);\n\n        alertify.set(\"notifier\", \"position\", \"bottom-left\");\n        alertify.error(\"Bạn Đã Xóa Hàng Thành Công!\");\n\n        //set state loadRedux để nó load lại hàm useEffect để tiếp tục lấy dữ liệu từ redux\n        setLoadRedux({\n          idProduct: getProduct,\n          count: \"\",\n        });\n      }\n    } else {\n      return;\n    }\n  };\n\n  //Hàm này dùng để truyền xuống cho component con xử và trả ngược dữ liệu lại component cha\n  const onUpdateCount = (getUser, getProduct, getCount) => {\n    console.log(\n      \"Count: \" +\n        getCount +\n        \", idUser: \" +\n        getUser +\n        \", idProduct: \" +\n        getProduct\n    );\n\n    if (localStorage.getItem(\"id_user\")) {\n      // user đã đăng nhập\n\n      //Sau khi nhận được dữ liệu ở component con truyền lên thì sẽ gọi API xử lý dữ liệu\n      const fetchPut = async () => {\n        const data = {\n          idUser: getUser,\n          idProduct: getProduct,\n          count: getCount,\n        };\n\n        const body = JSON.stringify(data);\n\n        const response = await CartAPI.putToCart(body);\n        console.log(response);\n      };\n\n      fetchPut();\n\n      //Sau đó thay đổi state loadAPI và load lại hàm useEffect\n      setLoadAPI(true);\n\n      console.log(\"Ban Da Dang Nhap!\");\n\n      alertify.set(\"notifier\", \"position\", \"bottom-left\");\n      alertify.success(\"Bạn Đã Sửa Hàng Thành Công!\");\n    } else {\n      //Nếu không có phiên làm việc của Session User thì mình sẽ xử lý với Redux\n      const data = {\n        idProduct: getProduct,\n        idUser: getUser,\n        count: getCount,\n      };\n\n      //Đưa dữ liệu vào Redux\n      const action = updateCart(data);\n      dispatch(action);\n\n      alertify.set(\"notifier\", \"position\", \"bottom-left\");\n      alertify.success(\"Bạn Đã Sửa Hàng Thành Công!\");\n\n      //set state loadRedux để nó load lại hàm useEffect để tiếp tục lấy dữ liệu từ redux\n      setLoadRedux({\n        idProduct: getProduct,\n        count: getCount,\n      });\n    }\n  };\n\n  //Hàm này dùng để redirect đến page checkout\n\n  const onCheckout = () => {\n    if (!localStorage.getItem(\"id_user\")) {\n      alertify.set(\"notifier\", \"position\", \"bottom-left\");\n      alertify.error(\"Vui Lòng Kiểm Tra Lại Đăng Nhập!\");\n      return;\n    }\n\n    if (cart.length === 0) {\n      alertify.set(\"notifier\", \"position\", \"bottom-left\");\n      alertify.error(\"Vui Lòng Kiểm Tra Lại Giỏ Hàng!\");\n      return;\n    }\n    navigation(\"/checkout\");\n  };\n\n  return (\n    <div className=\"container\">\n      <section className=\"py-5 bg-light\">\n        <div className=\"container\">\n          <div className=\"row px-4 px-lg-5 py-lg-4 align-items-center\">\n            <div className=\"col-lg-6\">\n              <h1 className=\"h2 text-uppercase mb-0\">Cart</h1>\n            </div>\n            <div className=\"col-lg-6 text-lg-right\">\n              <nav aria-label=\"breadcrumb\">\n                <ol className=\"breadcrumb justify-content-lg-end mb-0 px-0\">\n                  <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                    Cart\n                  </li>\n                </ol>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </section>\n      <section className=\"py-5\">\n        <h2 className=\"h5 text-uppercase mb-4\">Shopping cart</h2>\n        <div className=\"row\">\n          <div className=\"col-lg-8 mb-4 mb-lg-0\">\n            <ListCart\n              listCart={cart}\n              onDeleteCart={onDeleteCart}\n              onUpdateCount={onUpdateCount}\n            />\n\n            <div className=\"bg-light px-4 py-3\">\n              <div className=\"row align-items-center text-center\">\n                <div className=\"col-md-6 mb-3 mb-md-0 text-md-left\">\n                  <Link\n                    className=\"btn btn-link p-0 text-dark btn-sm\"\n                    to={`/shop`}\n                  >\n                    <i className=\"fas fa-long-arrow-alt-left mr-2\"> </i>\n                    Continue shopping\n                  </Link>\n                </div>\n                <div className=\"col-md-6 text-md-right\">\n                  <span\n                    className=\"btn btn-outline-dark btn-sm\"\n                    onClick={onCheckout}\n                  >\n                    Proceed to checkout\n                    <i className=\"fas fa-long-arrow-alt-right ml-2\"></i>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-lg-4\">\n            <div className=\"card border-0 rounded-0 p-lg-4 bg-light\">\n              <div className=\"card-body\">\n                <h5 className=\"text-uppercase mb-4\">Cart total</h5>\n                <ul className=\"list-unstyled mb-0\">\n                  <li className=\"d-flex align-items-center justify-content-between\">\n                    <strong className=\"text-uppercase small font-weight-bold\">\n                      Subtotal\n                    </strong>\n                    <span className=\"text-muted small\">\n                      {convertMoney(total)} VND\n                    </span>\n                  </li>\n                  <li className=\"border-bottom my-2\"></li>\n                  <li className=\"d-flex align-items-center justify-content-between mb-4\">\n                    <strong className=\"text-uppercase small font-weight-bold\">\n                      Total\n                    </strong>\n                    <span>{convertMoney(total)} VND</span>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default Cart;\n","D:\\Funix\\NJS\\Asm3\\client\\src\\History\\Component\\MainHistory.jsx",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\Share\\Footer\\Footer.jsx",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\Share\\Header\\Header.jsx",["403"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addUser } from \"../../Redux/Action/ActionCart\";\nimport { addSession } from \"../../Redux/Action/ActionSession\";\n\nimport { Link } from \"react-router-dom\";\nimport LoginLink from \"../../Authentication/LoginLink\";\nimport LogoutLink from \"../../Authentication/LogoutLink\";\nimport Name from \"../../Authentication/Name\";\n\nfunction Header(props) {\n  const [active, setActive] = useState(\"Home\");\n\n  const dispatch = useDispatch();\n\n  //Sau khi F5 nó sẽ kiểm tra nếu phiên làm việc của Session vẫn còn thì nó sẽ tiếp tục\n  // đưa dữ liệu vào Redux\n  if (localStorage.getItem(\"id_user\")) {\n    const action = addSession(localStorage.getItem(\"id_user\"));\n    dispatch(action);\n  } else {\n    //Đưa idTemp vào Redux temp để tạm lưu trữ\n    localStorage.setItem(\"id_temp\", \"abc999\");\n    const action = addUser(localStorage.getItem(\"id_temp\"));\n    dispatch(action);\n  }\n\n  //Get IdUser từ redux khi user đã đăng nhập\n  var idUser = useSelector((state) => state.Session.idUser);\n\n  //Get idtemp từ redux khi user chưa đăng nhập\n  var idTemp = useSelector((state) => state.Cart.id_user);\n\n  const [loginUser, setLoginUser] = useState(false);\n  const [nameUser, setNameUser] = useState(false);\n\n  useEffect(() => {\n    if (!idUser) {\n      setLoginUser(false);\n      setNameUser(false);\n    } else {\n      setLoginUser(true);\n      setNameUser(true);\n    }\n  }, [idUser]);\n\n  const handlerActive = (value) => {\n    setActive(value);\n  };\n\n  return (\n    <div className=\"container px-0 px-lg-3\">\n      <nav className=\"navbar navbar-expand-lg navbar-light py-3 px-lg-0\">\n        <Link className=\"navbar-brand\" to={`/`}>\n          <span className=\"font-weight-bold text-uppercase text-dark\">\n            Boutique\n          </span>\n        </Link>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNavAltMarkup\"\n          aria-controls=\"navbarNavAltMarkup\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\" onClick={() => handlerActive(\"Home\")}>\n              <Link\n                className=\"nav-link\"\n                to={`/`}\n                style={\n                  active === \"Home\" ? { color: \"#dcb14a\" } : { color: \"black\" }\n                }\n              >\n                Home\n              </Link>\n            </li>\n            <li className=\"nav-item\" onClick={() => handlerActive(\"Shop\")}>\n              <Link\n                className=\"nav-link\"\n                to={`/shop`}\n                style={\n                  active === \"Shop\" ? { color: \"#dcb14a\" } : { color: \"black\" }\n                }\n              >\n                Shop\n              </Link>\n            </li>\n          </ul>\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to={`/cart`}>\n                <i className=\"fas fa-dolly-flatbed mr-1 text-gray\"></i>\n                Cart\n              </Link>\n            </li>\n            {nameUser ? <Name /> : \"\"}\n            {loginUser ? <LoginLink /> : <LogoutLink />}\n          </ul>\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nexport default Header;\n","D:\\Funix\\NJS\\Asm3\\client\\src\\Share\\Chat\\Chat.jsx",["404","405","406"],"import React, { useEffect, useState } from \"react\";\nimport \"./Chat.css\";\n\nimport ChatRoomsAPI from \"../../API/ChatRoomsAPI\";\n\nimport io from \"socket.io-client\";\n// const socket = io(\"http://localhost:5000\");\nconst socket = io.connect(\"https://backend-shop-rzlv.onrender.com\");\n\nfunction Chat(props) {\n  const [activeChat, setActiveChat] = useState(false);\n  const [textMessage, setTextMessage] = useState(\"\");\n  const [message, setMessage] = useState();\n  const [roomId, setRoomId] = useState(\n    localStorage.getItem(\"njs_asm3_roomId\") || \"\"\n  );\n\n  //Get id_user từ redux khi user đã đăng nhập\n  const [load, setLoad] = useState(false);\n\n  // Hàm này dùng để mở hộp thoại chat\n  const onChat = () => {\n    setActiveChat(!activeChat);\n  };\n\n  const onChangeText = (e) => {\n    setTextMessage(e.target.value);\n  };\n\n  const handlerSend = async () => {\n    //Sau đó nó emit dữ liệu lên server bằng socket với key send_message và value data\n\n    // Check if text equal \"/end\" then end room\n    if (roomId && textMessage.toLowerCase() === \"/end\") {\n      await ChatRoomsAPI.addMessage({\n        message: \"==END ROOM==\",\n        roomId: roomId,\n        is_admin: false,\n      });\n\n      localStorage.removeItem(\"njs_asm3_roomId\");\n      setTextMessage(\"\");\n      setRoomId(\"\");\n      setMessage([]);\n      setActiveChat(false);\n\n      return;\n    }\n\n    // Check if roomId is null then create new Room\n    if (!roomId) {\n      const newRoomData = await ChatRoomsAPI.createNewRoom();\n      setRoomId(newRoomData._id);\n      localStorage.setItem(\"njs_asm3_roomId\", newRoomData._id);\n    }\n\n    const data = {\n      message: textMessage,\n      roomId: roomId,\n      is_admin: false,\n    };\n\n    //Tiếp theo nó sẽ postdata lên api đưa dữ liệu vào database\n    await ChatRoomsAPI.addMessage(data);\n    setTextMessage(\"\");\n\n    setTimeout(() => {\n      setLoad(true);\n      socket.emit(\"send_message\", data);\n    }, 200);\n  };\n\n  const fetchData = async () => {\n    const response = await ChatRoomsAPI.getMessageByRoomId(roomId);\n    setMessage(response.content);\n  };\n\n  // Hàm này dùng để load dữ liệu message của user khi user gửi tin nhán\n  useEffect(() => {\n    if (load) {\n      fetchData();\n      setLoad(false);\n    }\n  }, [load]);\n\n  useEffect(() => {\n    setLoad(true);\n  }, [roomId]);\n\n  //Hàm này dùng để nhận socket từ server gửi lên\n  useEffect(() => {\n    //Nhận dữ liệu từ server gửi lên thông qua socket với key receive_message\n    socket.on(\"receive_message\", (data) => {\n      //Sau đó nó sẽ setLoad gọi lại hàm useEffect lấy lại dữ liệu\n      setLoad(true);\n    });\n  }, []);\n\n  return (\n    <div className=\"wrapper_chat\">\n      <div className=\"chat_messenger\" onClick={onChat}>\n        <svg x=\"0\" y=\"0\" width=\"60px\" height=\"60px\">\n          <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n            <g>\n              <circle fill=\"#383838\" cx=\"30\" cy=\"30\" r=\"30\"></circle>\n              <svg x=\"10\" y=\"10\">\n                <g transform=\"translate(0.000000, -10.000000)\" fill=\"#FFFFFF\">\n                  <g id=\"logo\" transform=\"translate(0.000000, 10.000000)\">\n                    <path\n                      d=\"M20,0 C31.2666,0 40,8.2528 40,19.4 C40,30.5472 31.2666,38.8 \n\t\t\t\t\t\t\t\t20,38.8 C17.9763,38.8 16.0348,38.5327 14.2106,38.0311 C13.856,37.9335 13.4789,37.9612 \n\t\t\t\t\t\t\t\t13.1424,38.1098 L9.1727,39.8621 C8.1343,40.3205 6.9621,39.5819 6.9273,38.4474 L6.8184,34.8894 \n\t\t\t\t\t\t\t\tC6.805,34.4513 6.6078,34.0414 6.2811,33.7492 C2.3896,30.2691 0,25.2307 0,19.4 C0,8.2528 8.7334,0 \n\t\t\t\t\t\t\t\t20,0 Z M7.99009,25.07344 C7.42629,25.96794 8.52579,26.97594 9.36809,26.33674 L15.67879,21.54734 \n\t\t\t\t\t\t\t\tC16.10569,21.22334 16.69559,21.22164 17.12429,21.54314 L21.79709,25.04774 C23.19919,26.09944 \n\t\t\t\t\t\t\t\t25.20039,25.73014 26.13499,24.24744 L32.00999,14.92654 C32.57369,14.03204 31.47419,13.02404 \n\t\t\t\t\t\t\t\t30.63189,13.66324 L24.32119,18.45264 C23.89429,18.77664 23.30439,18.77834 22.87569,18.45674 \n\t\t\t\t\t\t\t\tL18.20299,14.95224 C16.80079,13.90064 14.79959,14.26984 13.86509,15.75264 L7.99009,25.07344 Z\"\n                    ></path>\n                  </g>\n                </g>\n              </svg>\n            </g>\n          </g>\n        </svg>\n      </div>\n\n      {activeChat && (\n        <div className=\"active_chat animate__animated animate__jackInTheBox\">\n          <div style={{ width: \"100%\" }}>\n            <div\n              className=\"card card-bordered fix_boderChat\"\n              style={{ width: \"fit-content\" }}\n            >\n              <div className=\"card-header\">\n                <h4 className=\"card-title\">\n                  <strong>Customer Support</strong>\n                </h4>{\" \"}\n                <a className=\"btn btn-xs btn-secondary\" href=\"#\">\n                  Let's Chat App\n                </a>\n              </div>\n              <div className=\"ps-container ps-theme-default ps-active-y fix_scoll\">\n                {message &&\n                  message.map((value) =>\n                    !value.is_admin ? (\n                      <div\n                        className=\"media media-chat media-chat-reverse\"\n                        key={value.id}\n                      >\n                        <div className=\"media-body\">\n                          <p>You: {value.message}</p>\n                        </div>\n                      </div>\n                    ) : (\n                      <div className=\"media media-chat\" key={value.id}>\n                        {\" \"}\n                        <img\n                          className=\"avatar\"\n                          src=\"https://img.icons8.com/color/36/000000/administrator-male.png\"\n                          alt=\"...\"\n                        />\n                        <div className=\"media-body\" key={value.id}>\n                          <p>Cộng tác viên: {value.message}</p>\n                        </div>\n                      </div>\n                    )\n                  )}\n              </div>\n              <div className=\"publisher bt-1 border-light\">\n                <img\n                  className=\"avatar avatar-xs\"\n                  src=\"https://img.icons8.com/color/36/000000/administrator-male.png\"\n                  alt=\"...\"\n                />\n                <input\n                  type=\"text\"\n                  placeholder=\"Enter Message!\"\n                  onChange={onChangeText}\n                  value={textMessage}\n                  style={{ width: \"80%\" }}\n                  onKeyPress={(e) => {\n                    if (e.key === \"Enter\") {\n                      handlerSend();\n                    }\n                  }}\n                />\n                <a\n                  onClick={handlerSend}\n                  className=\"publisher-btn text-info\"\n                  data-abc=\"true\"\n                >\n                  <i className=\"fa fa-paper-plane\"></i>\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Chat;\n","D:\\Funix\\NJS\\Asm3\\client\\src\\Redux\\Reducer\\ReducerRoot.jsx",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\convertMoney.js",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\Authentication\\LoginLink.jsx",["407","408","409"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { deleteSession } from '../Redux/Action/ActionSession';\n\nfunction LoginLink(props) {\n\tconst dispatch = useDispatch();\n\n\tconst onRedirect = () => {\n\t\tlocalStorage.clear();\n\n\t\tconst action = deleteSession('');\n\t\tdispatch(action);\n\t};\n\n\treturn (\n\t\t<li className='nav-item' onClick={onRedirect}>\n\t\t\t<Link className='nav-link' to='/signin'>\n\t\t\t\t( Logout )\n\t\t\t</Link>\n\t\t</li>\n\t);\n}\n\nexport default LoginLink;\n","D:\\Funix\\NJS\\Asm3\\client\\src\\API\\ProductAPI.jsx",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\API\\CartAPI.jsx",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\API\\MessengerAPI.jsx",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\Authentication\\LogoutLink.jsx",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\API\\CheckoutAPI.jsx",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\API\\ChatRoomsAPI.jsx",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\API\\HistoryAPI.jsx",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\API\\CommentAPI.jsx",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\Authentication\\Name.jsx",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\Redux\\Action\\ActionCart.jsx",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\API\\UserAPI.jsx",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\Redux\\Action\\ActionSession.jsx",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\Shop\\Component\\Pagination.jsx",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\Share\\img\\Image.jsx",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\Shop\\Component\\Search.jsx",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\Shop\\Component\\Products.jsx",["410","411"],"D:\\Funix\\NJS\\Asm3\\client\\src\\Shop\\Component\\SortProduct.jsx",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\Cart\\Component\\ListCart.jsx",["412"],"import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport convertMoney from \"../../convertMoney\";\n\nListCart.propTypes = {\n  listCart: PropTypes.array,\n  onDeleteCart: PropTypes.func,\n  onUpdateCount: PropTypes.func,\n};\n\nListCart.defaultProps = {\n  listCart: [],\n  onDeleteCart: null,\n  onUpdateCount: null,\n};\n\nfunction ListCart(props) {\n  const { listCart, onDeleteCart, onUpdateCount } = props;\n\n  console.log(listCart);\n  const handlerChangeText = (e) => {\n    console.log(e.target.value);\n  };\n\n  const handlerDelete = (getUser, getProduct) => {\n    if (!onDeleteCart) {\n      return;\n    }\n\n    onDeleteCart(getUser, getProduct);\n  };\n\n  const handlerDown = (getIdUser, getIdProduct, getCount) => {\n    if (!onUpdateCount) {\n      return;\n    }\n\n    if (getCount === 1) {\n      return;\n    }\n\n    //Trước khi trả dữ liệu về component cha thì phải thay đổi biến count\n    const updateCount = parseInt(getCount) - 1;\n\n    onUpdateCount(getIdUser, getIdProduct, updateCount);\n  };\n\n  const handlerUp = (getIdUser, getIdProduct, getCount) => {\n    if (!onUpdateCount) {\n      return;\n    }\n\n    //Trước khi trả dữ liệu về component cha thì phải thay đổi biến count\n    const updateCount = parseInt(getCount) + 1;\n\n    onUpdateCount(getIdUser, getIdProduct, updateCount);\n  };\n\n  return (\n    <div className=\"table-responsive mb-4\">\n      <table className=\"table\">\n        <thead className=\"bg-light\">\n          <tr className=\"text-center\">\n            <th className=\"border-0\" scope=\"col\">\n              {\" \"}\n              <strong className=\"text-small text-uppercase\">Image</strong>\n            </th>\n            <th className=\"border-0\" scope=\"col\">\n              {\" \"}\n              <strong className=\"text-small text-uppercase\">Product</strong>\n            </th>\n            <th className=\"border-0\" scope=\"col\">\n              {\" \"}\n              <strong className=\"text-small text-uppercase\">Price</strong>\n            </th>\n            <th className=\"border-0\" scope=\"col\">\n              {\" \"}\n              <strong className=\"text-small text-uppercase\">Quantity</strong>\n            </th>\n            <th className=\"border-0\" scope=\"col\">\n              {\" \"}\n              <strong className=\"text-small text-uppercase\">Total</strong>\n            </th>\n            <th className=\"border-0\" scope=\"col\">\n              {\" \"}\n              <strong className=\"text-small text-uppercase\">Remove</strong>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {listCart &&\n            listCart.map((value, index) => (\n              <tr className=\"text-center\" key={index}>\n                <td className=\"pl-0 border-0\">\n                  <div className=\"media align-items-center justify-content-center\">\n                    <Link\n                      className=\"reset-anchor d-block animsition-link\"\n                      to={`/detail/${value.idProduct}`}\n                    >\n                      <img src={value.img} alt=\"...\" width=\"70\" />\n                    </Link>\n                  </div>\n                </td>\n                <td className=\"align-middle border-0\">\n                  <div className=\"media align-items-center justify-content-center\">\n                    <Link\n                      className=\"reset-anchor h6 animsition-link\"\n                      to={`/detail/${value.idProduct}`}\n                    >\n                      {value.nameProduct}\n                    </Link>\n                  </div>\n                </td>\n\n                <td className=\"align-middle border-0\">\n                  <p className=\"mb-0 small\">\n                    {convertMoney(value.priceProduct)} VND\n                  </p>\n                </td>\n                <td className=\"align-middle border-0\">\n                  <div className=\"quantity justify-content-center\">\n                    <button\n                      className=\"dec-btn p-0\"\n                      style={{ cursor: \"pointer\" }}\n                      onClick={() =>\n                        handlerDown(value.idUser, value.idProduct, value.count)\n                      }\n                    >\n                      <i className=\"fas fa-caret-left\"></i>\n                    </button>\n                    <input\n                      className=\"form-control form-control-sm border-0 shadow-0 p-0\"\n                      type=\"text\"\n                      value={value.count}\n                      onChange={handlerChangeText}\n                    />\n                    <button\n                      className=\"inc-btn p-0\"\n                      style={{ cursor: \"pointer\" }}\n                      onClick={() =>\n                        handlerUp(value.idUser, value.idProduct, value.count)\n                      }\n                    >\n                      <i className=\"fas fa-caret-right\"></i>\n                    </button>\n                  </div>\n                </td>\n                <td className=\"align-middle border-0\">\n                  <p className=\"mb-0 small\">\n                    {convertMoney(\n                      parseInt(value.priceProduct) * parseInt(value.count)\n                    )}{\" \"}\n                    VND\n                  </p>\n                </td>\n                <td className=\"align-middle border-0\">\n                  <span\n                    className=\"reset-anchor remove_cart\"\n                    style={{ cursor: \"pointer\" }}\n                    onClick={() => handlerDelete(value.idUser, value.idProduct)}\n                  >\n                    <i className=\"fas fa-trash-alt small text-muted\"></i>\n                  </span>\n                </td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default ListCart;\n","D:\\Funix\\NJS\\Asm3\\client\\src\\Redux\\Reducer\\ReducerSession.jsx",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\Redux\\Reducer\\ReducerCart.jsx",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\Shop\\Component\\IndexPage.jsx",["413"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nIndexPage.propTypes = {\n  indexPage: PropTypes.array,\n  handlerChangePage: PropTypes.func,\n  pagination: PropTypes.object,\n};\n\nIndexPage.defaultProps = {\n  indexPage: null,\n  handlerChangePage: null,\n  pagination: {},\n};\n\nfunction IndexPage(props) {\n  const { indexPage, handlerChangePage, pagination } = props;\n\n  const { page } = pagination;\n\n  const onIndexPage = (value) => {\n    if (!handlerChangePage) {\n      return;\n    }\n\n    handlerChangePage(value);\n  };\n\n  console.log(indexPage);\n\n  return (\n    <div className=\"d-flex\">\n      {indexPage &&\n        indexPage.map((value) => (\n          <li\n            className={\n              value === parseInt(page) ? \"page-item active\" : \"page-item\"\n            }\n            key={value}\n            onClick={() => onIndexPage(value)}\n          >\n            <a className=\"page-link\">{value}</a>\n          </li>\n        ))}\n    </div>\n  );\n}\n\nexport default IndexPage;\n","D:\\Funix\\NJS\\Asm3\\client\\src\\API\\axiosClient.jsx",[],"C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\index.js",[],["414","415"],"C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\App.jsx",["416"],"import \"./App.css\";\nimport \"./css/custom.css\";\nimport \"./css/style.default.css\";\n\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\n\nimport Footer from \"./Share/Footer/Footer\";\nimport Header from \"./Share/Header/Header\";\nimport Home from \"./Home/Home\";\nimport Detail from \"./Detail/Detail\";\nimport Cart from \"./Cart/Cart\";\nimport SignIn from \"./Authentication/SignIn\";\nimport SignUp from \"./Authentication/SignUp\";\nimport Checkout from \"./Checkout/Checkout\";\nimport Shop from \"./Shop/Shop\";\nimport Chat from \"./Share/Chat/Chat\";\nimport MainHistory from \"./History/Component/MainHistory\";\nimport DetailHistory from \"./History/Component/DetailHistory\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Header />\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/detail/:id\" element={<Detail />} />\n          <Route path=\"/cart\" element={<Cart />} />\n          <Route path=\"/signin\" element={<SignIn />} />\n          <Route path=\"/signup\" element={<SignUp />} />\n          <Route path=\"/checkout\" element={<Checkout />} />\n          <Route path=\"/history\" element={<MainHistory />} />\n          <Route path=\"/history/:idHistory\" element={<DetailHistory />} />\n          <Route path=\"/shop\" element={<Shop />} />\n          <Route path=\"/shop/:valueSearchHome\" element={<Shop />} />\n        </Routes>\n      </BrowserRouter>\n\n      {/* <Chat /> */}\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\store.js",[],"C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Cart\\Cart.jsx",["417","418","419","420"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteCart, updateCart } from \"../Redux/Action/ActionCart\";\nimport ListCart from \"./Component/ListCart\";\nimport alertify from \"alertifyjs\";\nimport { Link, redirect, useNavigate } from \"react-router-dom\";\nimport CartAPI from \"../API/CartAPI\";\nimport queryString from \"query-string\";\nimport convertMoney from \"../convertMoney\";\n\nfunction Cart(props) {\n  //id_user được lấy từ redux\n  const id_user = useSelector((state) => state.Cart.id_user);\n\n  //listCart được lấy từ redux\n  const listCart = useSelector((state) => state.Cart.listCart);\n\n  const [cart, setCart] = useState([]);\n\n  const [total, setTotal] = useState();\n\n  const dispatch = useDispatch();\n\n  const navigation = useNavigate();\n  //State dùng để Load dữ liệu từ Redux\n  const [loadRedux, setLoadRedux] = useState({\n    idProduct: \"\",\n    count: \"\",\n  });\n\n  //State dùng để Load dữ liệu từ API\n  const [loadAPI, setLoadAPI] = useState(false);\n\n  //Hàm này dùng để Load dữ liệu ở Redux\n  //Khi người dùng chưa đăng nhập\n  useEffect(() => {\n    const fetchDataRedux = () => {\n      if (!localStorage.getItem(\"id_user\")) {\n        setCart(listCart);\n\n        getTotal(listCart);\n      }\n    };\n\n    fetchDataRedux();\n  }, [loadRedux]);\n\n  //Hàm này dùng để tính tổng tiền carts\n  function getTotal(carts) {\n    let sub_total = 0;\n\n    const sum_total = carts.map((value) => {\n      return (sub_total +=\n        parseInt(value.priceProduct) * parseInt(value.count));\n    });\n\n    setTotal(sub_total);\n  }\n\n  //Hàm này dùng để load dữ liệu từ API\n  //Khi người dùng đã đăng nhập\n  useEffect(() => {\n    const fetchData = async () => {\n      if (localStorage.getItem(\"id_user\")) {\n        const params = {\n          idUser: localStorage.getItem(\"id_user\"),\n        };\n\n        const query = \"?\" + queryString.stringify(params);\n\n        const response = await CartAPI.getCarts(query);\n\n        setCart(response);\n\n        getTotal(response);\n      }\n    };\n\n    fetchData();\n\n    setLoadAPI(false);\n  }, [loadAPI]);\n\n  //Hàm này dùng để truyền xuống cho component con xử và trả ngược dữ liệu lại component cha\n  const onDeleteCart = (getUser, getProduct) => {\n    console.log(\"idUser: \" + getUser + \", idProduct: \" + getProduct);\n\n    const isDelete = window.confirm(\"Bạn có chắc chắn muốn xóa sản phẩm này?\");\n\n    if (isDelete) {\n      if (localStorage.getItem(\"id_user\")) {\n        // user đã đăng nhập\n\n        //Sau khi nhận được dữ liệu ở component con truyền lên thì sẽ gọi API xử lý dữ liệu\n        const fetchDelete = async () => {\n          const params = {\n            idUser: getUser,\n            idProduct: getProduct,\n          };\n\n          const query = \"?\" + queryString.stringify(params);\n\n          const response = await CartAPI.deleteToCart(query);\n          console.log(response);\n        };\n\n        fetchDelete();\n\n        //Sau đó thay đổi state loadAPI và load lại hàm useEffect\n        setLoadAPI(true);\n\n        alertify.set(\"notifier\", \"position\", \"bottom-left\");\n        alertify.error(\"Bạn Đã Xóa Hàng Thành Công!\");\n      } else {\n        // user chưa đăng nhập\n\n        //Nếu không có phiên làm việc của Session User thì mình sẽ xử lý với Redux\n        const data = {\n          idProduct: getProduct,\n          idUser: getUser,\n        };\n\n        //Đưa dữ liệu vào Redux\n        const action = deleteCart(data);\n        dispatch(action);\n\n        alertify.set(\"notifier\", \"position\", \"bottom-left\");\n        alertify.error(\"Bạn Đã Xóa Hàng Thành Công!\");\n\n        //set state loadRedux để nó load lại hàm useEffect để tiếp tục lấy dữ liệu từ redux\n        setLoadRedux({\n          idProduct: getProduct,\n          count: \"\",\n        });\n      }\n    } else {\n      return;\n    }\n  };\n\n  //Hàm này dùng để truyền xuống cho component con xử và trả ngược dữ liệu lại component cha\n  const onUpdateCount = (getUser, getProduct, getCount) => {\n    console.log(\n      \"Count: \" +\n        getCount +\n        \", idUser: \" +\n        getUser +\n        \", idProduct: \" +\n        getProduct\n    );\n\n    if (localStorage.getItem(\"id_user\")) {\n      // user đã đăng nhập\n\n      //Sau khi nhận được dữ liệu ở component con truyền lên thì sẽ gọi API xử lý dữ liệu\n      const fetchPut = async () => {\n        const data = {\n          idUser: getUser,\n          idProduct: getProduct,\n          count: getCount,\n        };\n\n        const body = JSON.stringify(data);\n\n        const response = await CartAPI.putToCart(body);\n        console.log(response);\n      };\n\n      fetchPut();\n\n      //Sau đó thay đổi state loadAPI và load lại hàm useEffect\n      setLoadAPI(true);\n\n      console.log(\"Ban Da Dang Nhap!\");\n\n      alertify.set(\"notifier\", \"position\", \"bottom-left\");\n      alertify.success(\"Bạn Đã Sửa Hàng Thành Công!\");\n    } else {\n      //Nếu không có phiên làm việc của Session User thì mình sẽ xử lý với Redux\n      const data = {\n        idProduct: getProduct,\n        idUser: getUser,\n        count: getCount,\n      };\n\n      //Đưa dữ liệu vào Redux\n      const action = updateCart(data);\n      dispatch(action);\n\n      alertify.set(\"notifier\", \"position\", \"bottom-left\");\n      alertify.success(\"Bạn Đã Sửa Hàng Thành Công!\");\n\n      //set state loadRedux để nó load lại hàm useEffect để tiếp tục lấy dữ liệu từ redux\n      setLoadRedux({\n        idProduct: getProduct,\n        count: getCount,\n      });\n    }\n  };\n\n  //Hàm này dùng để redirect đến page checkout\n\n  const onCheckout = () => {\n    if (!localStorage.getItem(\"id_user\")) {\n      alertify.set(\"notifier\", \"position\", \"bottom-left\");\n      alertify.error(\"Vui Lòng Kiểm Tra Lại Đăng Nhập!\");\n      return;\n    }\n\n    if (cart.length === 0) {\n      alertify.set(\"notifier\", \"position\", \"bottom-left\");\n      alertify.error(\"Vui Lòng Kiểm Tra Lại Giỏ Hàng!\");\n      return;\n    }\n    navigation(\"/checkout\");\n  };\n\n  return (\n    <div className=\"container\">\n      <section className=\"py-5 bg-light\">\n        <div className=\"container\">\n          <div className=\"row px-4 px-lg-5 py-lg-4 align-items-center\">\n            <div className=\"col-lg-6\">\n              <h1 className=\"h2 text-uppercase mb-0\">Cart</h1>\n            </div>\n            <div className=\"col-lg-6 text-lg-right\">\n              <nav aria-label=\"breadcrumb\">\n                <ol className=\"breadcrumb justify-content-lg-end mb-0 px-0\">\n                  <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                    Cart\n                  </li>\n                </ol>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </section>\n      <section className=\"py-5\">\n        <h2 className=\"h5 text-uppercase mb-4\">Giỏ mua sắm</h2>\n        <div className=\"row\">\n          <div className=\"col-lg-8 mb-4 mb-lg-0\">\n            <ListCart\n              listCart={cart}\n              onDeleteCart={onDeleteCart}\n              onUpdateCount={onUpdateCount}\n            />\n\n            <div className=\"bg-light px-4 py-3\">\n              <div className=\"row align-items-center text-center\">\n                <div className=\"col-md-6 mb-3 mb-md-0 text-md-left\">\n                  <Link\n                    className=\"btn btn-link p-0 text-dark btn-sm\"\n                    to={`/shop`}\n                  >\n                    <i className=\"fas fa-long-arrow-alt-left mr-2\"> </i>\n                    Tiếp tục xem sản phẩm\n                  </Link>\n                </div>\n                <div className=\"col-md-6 text-md-right\">\n                  <span\n                    className=\"btn btn-outline-dark btn-sm\"\n                    onClick={onCheckout}\n                  >\n                    Thanh toán\n                    <i className=\"fas fa-long-arrow-alt-right ml-2\"></i>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-lg-4\">\n            <div className=\"card border-0 rounded-0 p-lg-4 bg-light\">\n              <div className=\"card-body\">\n                <h5 className=\"text-uppercase mb-4\">Tổng trong giỏ hàng</h5>\n                <ul className=\"list-unstyled mb-0\">\n                  <li className=\"d-flex align-items-center justify-content-between\">\n                    <strong className=\"text-uppercase small font-weight-bold\">\n                      Tổng phụ chi\n                    </strong>\n                    <span className=\"text-muted small\">\n                      {convertMoney(total)} VND\n                    </span>\n                  </li>\n                  <li className=\"border-bottom my-2\"></li>\n                  <li className=\"d-flex align-items-center justify-content-between mb-4\">\n                    <strong className=\"text-uppercase small font-weight-bold\">\n                      Tổng\n                    </strong>\n                    <span>{convertMoney(total)} VND</span>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default Cart;\n","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Home\\Home.jsx",["421"],"C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Detail\\Detail.jsx",["422","423","424","425","426","427"],"import React, { useEffect, useState } from \"react\";\nimport ProductAPI from \"../API/ProductAPI\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport alertify from \"alertifyjs\";\nimport { addCart } from \"../Redux/Action/ActionCart\";\nimport CartAPI from \"../API/CartAPI\";\nimport queryString from \"query-string\";\nimport CommentAPI from \"../API/CommentAPI\";\nimport convertMoney from \"../convertMoney\";\nimport styles from \"./Detail.module.css\";\n\nfunction Detail(props) {\n  const [detail, setDetail] = useState({});\n\n  const dispatch = useDispatch();\n\n  //id params cho từng sản phẩm\n  const { id } = useParams();\n\n  //id_user được lấy từ redux\n  const id_user = useSelector((state) => state.Cart.id_user);\n\n  //listCart được lấy từ redux\n  const listCart = useSelector((state) => state.Cart.listCart);\n\n  const [product, setProduct] = useState([]);\n\n  const [star, setStar] = useState(1);\n\n  const [comment, setComment] = useState(\"\");\n\n  // id_user đã đăng nhập\n  const idUser = useSelector((state) => state.Session.idUser);\n\n  // Listcomment\n  const [list_comment, set_list_comment] = useState([]);\n\n  // state này dùng để load lại comment khi user gửi comment lên\n  const [load_comment, set_load_comment] = useState(false);\n\n  // Hàm này dùng để lấy dữ liệu comment\n  // Hàm này sẽ chạy lại phụ thuộc vào id Param\n  useEffect(() => {\n    const fetchData = async () => {\n      const params = {\n        idProduct: id,\n      };\n\n      const query = \"?\" + queryString.stringify(params);\n\n      const response = await CommentAPI.getCommentProduct(query);\n      console.log(response);\n\n      set_list_comment(response);\n    };\n\n    fetchData();\n  }, [id]);\n\n  // Hàm thay đổi sao đánh giá\n  const onChangeStar = (e) => {\n    setStar(e.target.value);\n  };\n\n  // Hàm thay đổi comment\n  const onChangeComment = (e) => {\n    setComment(e.target.value);\n  };\n\n  // Hàm này dùng để bình luận\n  const handlerComment = () => {\n    if (idUser === \"\") {\n      alertify.set(\"notifier\", \"position\", \"bottom-left\");\n      alertify.error(\"Vui Lòng Kiểm Tra Đăng Nhập!\");\n      return;\n    }\n\n    const fetchSendComment = async () => {\n      const params = {\n        idProduct: id,\n        idUser: localStorage.getItem(\"id_user\"),\n        fullname: localStorage.getItem(\"name_user\"),\n        content: comment,\n        star: star,\n      };\n\n      const query = \"?\" + queryString.stringify(params);\n\n      const response = await CommentAPI.postCommentProduct(query);\n      console.log(response);\n\n      set_load_comment(true);\n    };\n\n    fetchSendComment();\n\n    setComment(\"\");\n  };\n\n  // Hàm này dùng để load lại dữ liệu comment\n  // Phụ thuộc vào state load_comment\n  useEffect(() => {\n    if (load_comment) {\n      const fetchData = async () => {\n        const params = {\n          idProduct: id,\n        };\n\n        const query = \"?\" + queryString.stringify(params);\n\n        const response = await CommentAPI.getCommentProduct(query);\n        console.log(response);\n\n        set_list_comment(response);\n      };\n\n      fetchData();\n\n      set_load_comment(false);\n    }\n  }, [load_comment]);\n\n  //Hàm này gọi API và cắt chỉ lấy 4 sản phẩm\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await ProductAPI.getAPI();\n      const data = response;\n      setProduct(data);\n    };\n\n    fetchData();\n  }, []);\n\n  //Phần này là để thay đổi số lượng khi mua sản phẩm\n  const [text, setText] = useState(1);\n  const onChangeText = (e) => {\n    setText(e.target.value);\n  };\n\n  //Tăng lên 1 đơn vị\n  const upText = () => {\n    const value = parseInt(text) + 1;\n\n    setText(value);\n  };\n\n  //Giảm 1 đơn vị\n  const downText = () => {\n    const value = parseInt(text) - 1;\n\n    if (value === 0) return;\n\n    setText(value);\n  };\n\n  //Hàm này để lấy dữ liệu chi tiết sản phẩm\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await ProductAPI.getDetail(id);\n      console.log(response);\n      setDetail(response);\n    };\n\n    fetchData();\n  }, [id]);\n\n  //Phần này dùng để xem review hay description\n  const [review, setReview] = useState(\"description\");\n  const handlerReview = (value) => {\n    setReview(value);\n  };\n\n  //Hàm này là Thêm Sản Phẩm\n  const addToCart = () => {\n    //khi người dùng vẫn bấm nút đặt hàng dù đã hết hàng ,Kiểm tra số lượng sản phẩm trong kho mà = 0 thì hiển thị thông báo\n    if (detail.count === 0) {\n      alert(\n        \"Rất tiếc, sản phẩm này hiện không tồn tại. Hãy chọn một phương thức kết hợp khác.\"\n      );\n      return;\n    }\n    if (text > detail.count) {\n      alert(\n        \"kiểm tra lại số lượng đặt , vượt quá số lượng có của chúng tôi! Vui lòng đặt lại\"\n      );\n      return;\n    }\n    let id_user_cart = \"\";\n\n    if (localStorage.getItem(\"id_user\")) {\n      id_user_cart = localStorage.getItem(\"id_user\");\n      console.log(id_user_cart);\n    } else {\n      id_user_cart = id_user;\n    }\n\n    const data = {\n      idUser: id_user_cart,\n      idProduct: detail._id,\n      nameProduct: detail.name,\n      priceProduct: detail.price,\n      count: text,\n      img: detail.img1,\n    };\n\n    if (localStorage.getItem(\"id_user\")) {\n      console.log(\"Bạn Đã Đăng Nhập!\");\n\n      const fetchPost = async () => {\n        const dataBody = {\n          idUser: id_user_cart, //localStorage.getItem('id_user')\n          idProduct: detail._id, // Lấy idProduct\n          count: text, // Lấy số lượng\n        };\n\n        const body = JSON.stringify(dataBody);\n\n        const response = await CartAPI.postAddToCart(body);\n\n        console.log(response);\n      };\n\n      fetchPost();\n    } else {\n      const action = addCart(data);\n      dispatch(action);\n    }\n\n    alertify.set(\"notifier\", \"position\", \"bottom-left\");\n    alertify.success(\"Bạn Đã Thêm Hàng Thành Công!\");\n  };\n  console.log();\n\n  return (\n    <section className=\"py-5\">\n      <div className=\"container\">\n        <div className=\"row mb-5\">\n          <div className=\"col-lg-6\">\n            <div className=\"row m-sm-0\">\n              <div className=\"col-sm-2 p-sm-0 order-sm-1 mt-2 mt-sm-0\">\n                <div\n                  className=\"owl-thumbs d-flex flex-row flex-sm-column\"\n                  data-slider-id=\"1\"\n                >\n                  <div className=\"owl-thumb-item flex-fill mb-3 mr-2 mr-sm-0\">\n                    <img\n                      className=\"w-100 bg-white\"\n                      src={detail.img1}\n                      alt=\"...\"\n                    />\n                  </div>\n                  <div className=\"owl-thumb-item flex-fill mb-3 mr-2 mr-sm-0\">\n                    <img\n                      className=\"w-100 bg-white\"\n                      src={detail.img2}\n                      alt=\"...\"\n                    />\n                  </div>\n                  <div className=\"owl-thumb-item flex-fill mb-3 mr-2 mr-sm-0\">\n                    <img\n                      className=\"w-100 bg-white\"\n                      src={detail.img3}\n                      alt=\"...\"\n                    />\n                  </div>\n                  <div className=\"owl-thumb-item flex-fill mb-3 mr-2 mr-sm-0\">\n                    <img\n                      className=\"w-100 bg-white\"\n                      src={detail.img4}\n                      alt=\"...\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div\n                id=\"carouselExampleControls\"\n                className=\"carousel slide col-sm-10 order-1 order-sm-2\"\n                data-ride=\"carousel\"\n              >\n                <div className=\"carousel-inner owl-carousel product-slider\">\n                  <div className=\"carousel-item active\">\n                    <img\n                      className={styles.product_img_carousel}\n                      src={detail.img1}\n                      alt=\"First slide\"\n                    />\n                  </div>\n                  <div className=\"carousel-item\">\n                    <img\n                      className={styles.product_img_carousel}\n                      src={detail.img2}\n                      alt=\"Second slide\"\n                    />\n                  </div>\n                  <div className=\"carousel-item\">\n                    <img\n                      className={styles.product_img_carousel}\n                      src={detail.img3}\n                      alt=\"Third slide\"\n                    />\n                  </div>\n                  <div className=\"carousel-item\">\n                    <img\n                      className={styles.product_img_carousel}\n                      src={detail.img4}\n                      alt=\"Third slide\"\n                    />\n                  </div>\n                </div>\n                <a\n                  className=\"carousel-control-prev \"\n                  href=\"#carouselExampleControls\"\n                  role=\"button\"\n                  data-slide=\"prev\"\n                >\n                  <span\n                    className=\"carousel-control-prev-icon bg-dark\"\n                    aria-hidden=\"true\"\n                  ></span>\n                  <span className=\"sr-only\">Previous</span>\n                </a>\n                <a\n                  className=\"carousel-control-next\"\n                  href=\"#carouselExampleControls\"\n                  role=\"button\"\n                  data-slide=\"next\"\n                >\n                  <span\n                    className=\"carousel-control-next-icon  bg-dark\"\n                    aria-hidden=\"true\"\n                  ></span>\n                  <span className=\"sr-only\">Next</span>\n                </a>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-lg-6\">\n            <br></br>\n            <h1>{detail.name}</h1>\n            <br></br>\n            <p className=\"text-muted lead\">{convertMoney(detail.price)} VND</p>\n            <br></br>\n            <p className=\"text-small mb-4\">{detail.short_desc}</p>\n            <ul className=\"list-unstyled small d-inline-block\">\n              <strong>{detail.count} sản phẩm có sẵn</strong>\n              <li className=\"mb-3 bg-white text-muted\">\n                <strong className=\"text-uppercase text-dark\">Category:</strong>\n                <span className=\"reset-anchor ml-2\">{detail.category}s</span>\n              </li>\n            </ul>\n            <div className=\"row align-items-stretch mb-4\">\n              <div className=\"col-sm-5 pr-sm-0\">\n                <div className=\"border d-flex align-items-center justify-content-between py-1 px-3 bg-white border-white\">\n                  <span className=\"small text-uppercase text-gray mr-4 no-select\">\n                    Số lượng\n                  </span>\n                  <div className=\"quantity\">\n                    <button\n                      className=\"dec-btn p-0\"\n                      style={{ cursor: \"pointer\" }}\n                    >\n                      <i className=\"fas fa-caret-left\" onClick={downText}></i>\n                    </button>\n                    <input\n                      className=\"form-control border-0 shadow-0 p-0\"\n                      type=\"text\"\n                      value={text}\n                      onChange={onChangeText}\n                    />\n                    <button\n                      className=\"inc-btn p-0\"\n                      style={{ cursor: \"pointer\" }}\n                    >\n                      <i className=\"fas fa-caret-right\" onClick={upText}></i>\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-sm-3 pl-sm-0\">\n                <span\n                  className=\"btn btn-dark btn-sm btn-block d-flex align-items-center justify-content-center px-0 text-white\"\n                  onClick={addToCart}\n                >\n                  Thêm vào giỏ\n                </span>\n              </div>\n              <br></br>\n              <br></br>\n            </div>\n          </div>\n        </div>\n        {/* <div className='form-group'>\n\t\t\t\t\t<label htmlFor='exampleFormControlTextarea1'>Comment:</label>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\trows='3'\n\t\t\t\t\t\tonChange={onChangeComment}\n\t\t\t\t\t\tvalue={comment}></textarea>\n\t\t\t\t</div> */}\n        {/* <div className='d-flex justify-content-between'>\n\t\t\t\t\t<div className='d-flex w-25'>\n\t\t\t\t\t\t<span className='mt-2'>Evaluate: </span>\n\t\t\t\t\t\t&nbsp; &nbsp;\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName='form-control w-25'\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\tmin='1'\n\t\t\t\t\t\t\tmax='5'\n\t\t\t\t\t\t\tvalue={star}\n\t\t\t\t\t\t\tonChange={onChangeStar}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t&nbsp; &nbsp;\n\t\t\t\t\t\t<span className='mt-2'>Star</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\tclassName='btn btn-dark btn-sm btn-block px-0 text-white'\n\t\t\t\t\t\t\tstyle={{ width: '12rem' }}\n\t\t\t\t\t\t\tonClick={handlerComment}>\n\t\t\t\t\t\t\tSend\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div> */}\n        <br />\n\n        <div className=\"tab-content mb-5\">\n          {review === \"description\" ? (\n            <div className=\"tab-pane fade show active\">\n              <div className=\"pt-4 pb-4 bg-white\">\n                <h6 className=\"text-uppercase\">Mô tả chi tiết sản phẩm </h6>\n                <br></br>\n                <p\n                  className=\"text-muted text-small mb-0\"\n                  style={{ whiteSpace: \"pre-wrap\" }}\n                >\n                  {detail.long_desc}\n                </p>\n              </div>\n            </div>\n          ) : (\n            <div className=\"tab-pane fade show active\">\n              <div className=\"p-4 p-lg-5 bg-white\">\n                <div className=\"row\">\n                  <div className=\"col-lg-8\">\n                    {list_comment &&\n                      list_comment.map((value) => (\n                        <div className=\"media mb-3\" key={value._id}>\n                          <img\n                            className=\"rounded-circle\"\n                            src=\"https://img.icons8.com/color/36/000000/administrator-male.png\"\n                            alt=\"\"\n                            width=\"50\"\n                          />\n                          <div className=\"media-body ml-3\">\n                            <h6 className=\"mb-0 text-uppercase\">\n                              {value.fullname}\n                            </h6>\n                            <p className=\"small text-muted mb-0 text-uppercase\">\n                              dd/mm/yyyy\n                            </p>\n                            <ul className=\"list-inline mb-1 text-xs\">\n                              <li className=\"list-inline-item m-0\">\n                                <i className={value.star1}></i>\n                              </li>\n                              <li className=\"list-inline-item m-0\">\n                                <i className={value.star2}></i>\n                              </li>\n                              <li className=\"list-inline-item m-0\">\n                                <i className={value.star3}></i>\n                              </li>\n                              <li className=\"list-inline-item m-0\">\n                                <i className={value.star4}></i>\n                              </li>\n                              <li className=\"list-inline-item m-0\">\n                                <i className={value.star5}></i>\n                              </li>\n                            </ul>\n                            <p className=\"text-small mb-0 text-muted\">\n                              {value.content}\n                            </p>\n                          </div>\n                        </div>\n                      ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n        <h2 className=\"h5 text-uppercase mb-4\">Sản phẩm tương tự</h2>\n        <div className=\"row\">\n          {product &&\n            product\n              .filter(\n                (el) => el.category === detail.category && el._id !== detail._id\n              )\n              .map((value) => (\n                <div className=\"col-lg-3 col-sm-6\" key={value._id}>\n                  <div className=\"product text-center skel-loader\">\n                    <div className=\"d-block mb-3 position-relative\">\n                      <Link\n                        className=\"reset-anchor\"\n                        to={`/detail/${value._id}`}\n                        onClick={window.scrollTo(0, 0)}\n                      >\n                        <img\n                          className={styles.product_img}\n                          src={value.img1}\n                          alt=\"...\"\n                        />\n                      </Link>\n\n                      <div className=\"product-overlay\">\n                        <ul className=\"mb-0 list-inline\"></ul>\n                      </div>\n                    </div>\n                    <h6>{value.name}</h6>\n                    <p className=\"small text-muted\">\n                      {convertMoney(value.price)} VND\n                    </p>\n                  </div>\n                </div>\n              ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Detail;\n","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Authentication\\SignIn.jsx",["428","429"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport UserAPI from \"../API/UserAPI\";\nimport { addSession } from \"../Redux/Action/ActionSession\";\nimport \"./Auth.css\";\nimport queryString from \"query-string\";\nimport CartAPI from \"../API/CartAPI\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEnvelope, faLock } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction SignIn(props) {\n  const navigation = useNavigate();\n  //listCart được lấy từ redux\n  const listCart = useSelector((state) => state.Cart.listCart);\n\n  const [email, setEmail] = useState(\"\");\n\n  const [password, setPassword] = useState(\"\");\n\n  const [user, setUser] = useState([]);\n\n  const [errorEmail, setErrorEmail] = useState(false);\n  const [emailRegex, setEmailRegex] = useState(false);\n  const [errorPassword, setErrorPassword] = useState(false);\n\n  const [redirect, setRedirect] = useState(false);\n\n  const [checkPush, setCheckPush] = useState(false);\n  const [isLogin, setIsLogin] = useState(false);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await UserAPI.getAllData();\n\n      setUser(response.data);\n    };\n\n    fetchData();\n  }, []);\n\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const onChangePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const onSubmit = () => {\n    if (!email) {\n      setErrorEmail(true);\n      return;\n    } else {\n      if (!password) {\n        setErrorEmail(false);\n        setErrorPassword(true);\n        return;\n      } else {\n        setErrorPassword(false);\n        if (!validateEmail(email)) {\n          setEmailRegex(true);\n          return;\n        } else {\n          setEmailRegex(false);\n\n          const fetchLogin = async () => {\n            const body = JSON.stringify({\n              email: email,\n              password: password,\n            });\n\n            const res = await UserAPI.postLogin(body);\n            console.log(res);\n            setIsLogin(res.isLogin);\n            setUser(res.user);\n            //Nhận về lỗi trả về khi mà không có dữ liệu được tìm thấy\n            if (typeof res !== undefined) {\n              setErrorEmail(res.invalidateUser);\n              setErrorPassword(res.invalidatePassword);\n            }\n\n            //login Thành công\n            if (res.isLogin) {\n              localStorage.setItem(\"id_user\", email);\n\n              localStorage.setItem(\"name_user\", user?.fullName);\n\n              const action = addSession(localStorage.getItem(\"id_user\"));\n              dispatch(action);\n\n              setCheckPush(true);\n\n              navigation(\"/\");\n            }\n          };\n\n          fetchLogin();\n        }\n      }\n    }\n  };\n\n  //Hàm này dùng để đưa hết tất cả carts vào API của user\n  useEffect(() => {\n    const fetchData = async () => {\n      //Lần đầu sẽ không thực hiện insert được vì addCart = ''\n      if (checkPush === true) {\n        for (let i = 0; i < listCart.length; i++) {\n          //Nó sẽ lấy idUser và idProduct và count cần thêm để gửi lên server\n          const params = {\n            idUser: localStorage.getItem(\"id_user\"),\n            idProduct: listCart[i].idProduct,\n            count: listCart[i].count,\n          };\n\n          const query = \"?\" + queryString.stringify(params);\n\n          const response = await CartAPI.postAddToCart(query);\n          console.log(response);\n        }\n\n        setRedirect(true);\n      }\n    };\n\n    fetchData();\n  }, [checkPush]);\n\n  function validateEmail(email) {\n    const re =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  return (\n    <div className=\"limiter\">\n      <div className=\"container-login100\">\n        <div className=\"wrap-login100 p-l-55 p-r-55 p-t-65 p-b-50\">\n          <span className=\"login100-form-title p-b-33 text-white\">\n            Đăng nhập\n          </span>\n\n          <div className=\"d-flex justify-content-center pb-5\">\n            {emailRegex && (\n              <span className=\"text-danger\">* Incorrect Email Format</span>\n            )}\n            {errorEmail && (\n              <span className=\"text-danger\">* Please Check Your Email</span>\n            )}\n            {errorPassword && (\n              <span className=\"text-danger\">* Please Check Your Password</span>\n            )}\n          </div>\n\n          <div className=\"inputbox\">\n            <input\n              type=\"email\"\n              className=\"input100\"\n              value={email}\n              onChange={onChangeEmail}\n            />\n            <label for=\"\" className=\"text-white \">\n              Email <FontAwesomeIcon icon={faEnvelope} />\n            </label>\n          </div>\n          <div className=\" inputbox rs1 validate-input\">\n            <input\n              className=\"input100\"\n              type=\"password\"\n              value={password}\n              onChange={onChangePassword}\n            />\n            <label for=\"\" className=\"text-light\">\n              Mật khẩu <FontAwesomeIcon icon={faLock} />\n            </label>\n          </div>\n\n          <div className=\"container-login100-form-btn m-t-20 \">\n            {redirect && <redirect to={`/`} />}\n            <button className=\"login100-form-btn text-info\" onClick={onSubmit}>\n              Đăng nhập\n            </button>\n          </div>\n\n          <div className=\"text-center p-t-45 p-b-4\">\n            <span className=\"text-light font-weight-bold\">Tạo tài khoản?</span>\n            &nbsp;\n            <Link to=\"/signup\" className=\"txt2 hov1\">\n              Đăng ký\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SignIn;\n","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Authentication\\SignUp.jsx",["430","431"],"import React, { useState } from \"react\";\nimport { Link, Navigate, useNavigate } from \"react-router-dom\";\nimport UserAPI from \"../API/UserAPI\";\nimport \"./Auth.css\";\nimport queryString from \"query-string\";\nimport MessengerAPI from \"../API/MessengerAPI\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEnvelope, faLock, faPhone } from \"@fortawesome/free-solid-svg-icons\";\n\nSignUp.propTypes = {};\n\nfunction SignUp(props) {\n  const [fullname, setFullName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const [errorEmail, setEmailError] = useState(false);\n  const [emailRegex, setEmailRegex] = useState(false);\n  const [errorPassword, setPasswordError] = useState(false);\n  const [errorConfirmPassword, setConfirmPasswordError] = useState(false);\n  const [errorFullname, setFullnameError] = useState(false);\n  const [errorPhone, setPhoneError] = useState(false);\n\n  const [success, setSuccess] = useState(false);\n  const navigation = useNavigate();\n\n  const onChangeName = (e) => {\n    setFullName(e.target.value);\n  };\n\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const onChangePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const onChangeConfirmPassword = (e) => {\n    setConfirmPassword(e.target.value);\n  };\n\n  const onChangePhone = (e) => {\n    setPhone(e.target.value);\n  };\n\n  const handlerSignUp = (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setFullnameError(false);\n      setEmailError(false);\n      setPhoneError(false);\n      setPasswordError(false);\n      setConfirmPasswordError(true);\n      setEmailRegex(false);\n      return;\n    } else if (!fullname) {\n      setFullnameError(true);\n      setEmailError(false);\n      setPhoneError(false);\n      setPasswordError(false);\n      setEmailRegex(false);\n      setConfirmPasswordError(false);\n\n      return;\n    } else {\n      setFullnameError(false);\n      setPhoneError(false);\n      setPasswordError(false);\n      setFullnameError(false);\n      setEmailRegex(false);\n      setConfirmPasswordError(false);\n\n      if (!email) {\n        setFullnameError(false);\n        setEmailError(true);\n        setPhoneError(false);\n        setPasswordError(false);\n        setConfirmPasswordError(false);\n\n        return;\n      } else {\n        setEmailError(false);\n        setPhoneError(false);\n        setPasswordError(false);\n        setFullnameError(false);\n        setConfirmPasswordError(false);\n\n        if (!validateEmail(email)) {\n          setEmailRegex(true);\n          setFullnameError(false);\n          setEmailError(false);\n          setPhoneError(false);\n          setPasswordError(false);\n          setConfirmPasswordError(false);\n\n          return;\n        } else {\n          setEmailRegex(false);\n          if (!password) {\n            setFullnameError(false);\n            setEmailError(false);\n            setPhoneError(false);\n            setPasswordError(true);\n            setConfirmPasswordError(false);\n\n            return;\n          } else {\n            setFullnameError(false);\n            setPhoneError(false);\n            setPasswordError(false);\n            setFullnameError(false);\n            setEmailRegex(false);\n            setConfirmPasswordError(false);\n\n            if (!phone) {\n              setFullnameError(false);\n              setEmailError(false);\n              setPhoneError(true);\n              setPasswordError(false);\n              setConfirmPasswordError(false);\n            } else {\n              const fetchSignUp = async () => {\n                const body = JSON.stringify({\n                  fullname: fullname,\n                  email: email,\n                  password: password,\n                  phone: phone,\n                });\n\n                const res = await UserAPI.postSignUp(body);\n                res.message && alert(res.message);\n                if (res.isRegister) {\n                  alert(\"Tạo tài khoản thành công!\");\n                  navigation(\"/signin\");\n                }\n                console.log(res);\n                setSuccess(true);\n              };\n\n              fetchSignUp();\n\n              // Hàm này dùng để tạo các conversation cho user và admin\n              const fetchConversation = async () => {\n                const params = {\n                  email: email,\n                  password: password,\n                };\n\n                const query = \"?\" + queryString.stringify(params);\n\n                const response = await MessengerAPI.postConversation(query);\n                console.log(response);\n              };\n\n              fetchConversation();\n            }\n          }\n        }\n      }\n    }\n  };\n\n  function validateEmail(email) {\n    const re =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  return (\n    <div className=\"limiter\">\n      <div className=\"container-login100\">\n        <div className=\"wrap-login100 p-l-55 p-r-55 p-t-65 p-b-50\">\n          <span className=\"login100-form-title p-b-33 text-light\">Đăng ký</span>\n          <div className=\"d-flex justify-content-center pb-5\">\n            {errorFullname && (\n              <span className=\"text-danger\">\n                * Tên đầy đủ không được để trống!\n              </span>\n            )}\n            {errorEmail && (\n              <span className=\"text-danger\">\n                * Vui lòng kiểm tra Email, Email không được để trống!\n              </span>\n            )}\n            {emailRegex && (\n              <span className=\"text-danger\">\n                * Email của bạn không đúng định dạng\n              </span>\n            )}\n            {errorPassword && (\n              <span className=\"text-danger\">\n                *Vui lòng kiểm tra lại password!\n              </span>\n            )}\n            {errorConfirmPassword && (\n              <span className=\"text-danger\">\n                * Mật khẩu xác nhận không trùng khớp với mật khẩu!\n              </span>\n            )}\n            {errorPhone && (\n              <span className=\"text-danger\">\n                * Vui lòng kiểm tra lại số điện thoại!\n              </span>\n            )}\n          </div>\n          <div className=\" validate-input inputbox\">\n            <input\n              className=\"input100\"\n              value={fullname}\n              onChange={onChangeName}\n              type=\"text\"\n            />\n            <label for=\"\" className=\"text-white \">\n              Tên đầy đủ\n            </label>\n          </div>\n\n          <div className=\"inputbox rs1 validate-input\">\n            <input\n              className=\"input100\"\n              value={email}\n              onChange={onChangeEmail}\n              type=\"email\"\n            />\n            <label for=\"\" className=\"text-white \">\n              Email <FontAwesomeIcon icon={faEnvelope} />\n            </label>\n          </div>\n\n          <div className=\"inputbox rs1 validate-input\">\n            <input\n              className=\"input100\"\n              value={password}\n              onChange={onChangePassword}\n              type=\"password\"\n              required\n            />\n            <label for=\"\" className=\"text-white \">\n              Mật khẩu <FontAwesomeIcon icon={faLock} />\n            </label>\n          </div>\n\n          <div className=\"inputbox rs1 validate-input\">\n            <input\n              className=\"input100\"\n              value={confirmPassword}\n              onChange={onChangeConfirmPassword}\n              type=\"password\"\n              required\n            />\n            <label for=\"\" className=\"text-white \">\n              Nhập lại mật khẩu <FontAwesomeIcon icon={faLock} />\n            </label>\n          </div>\n\n          <div className=\"inputbox rs1 validate-input\">\n            <input\n              className=\"input100\"\n              value={phone}\n              onChange={onChangePhone}\n              type=\"number\"\n            />\n            <label for=\"\" className=\"text-white \">\n              Số điện thoại <FontAwesomeIcon icon={faPhone} />\n            </label>\n          </div>\n\n          <div className=\"container-login100-form-btn m-t-20\">\n            <button\n              className=\"login100-form-btn text-info\"\n              onClick={handlerSignUp}\n            >\n              Đăng ký\n            </button>\n          </div>\n\n          <div className=\"text-center p-t-45 p-b-4\">\n            <span className=\"text-light font-weight-bold \">Đăng nhập?</span>\n            &nbsp;\n            <Link to=\"/signin\" className=\"txt2 hov1\">\n              Click\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SignUp;\n","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Checkout\\Checkout.jsx",["432","433","434","435","436"],"C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Shop\\Shop.jsx",["437"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useEffect, useState } from \"react\";\nimport queryString from \"query-string\";\nimport ProductAPI from \"../API/ProductAPI\";\nimport Search from \"./Component/Search\";\nimport Pagination from \"./Component/Pagination\";\nimport Products from \"./Component/Products\";\nimport SortProduct from \"./Component/SortProduct\";\nimport convertMoney from \"../convertMoney\";\nimport ImgIcon from \"../Share/img/index\";\nimport { useParams } from \"react-router-dom\";\n\nfunction Shop(props) {\n  const [products, setProducts] = useState([]);\n  const [temp, setTemp] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  let { valueSearchHome } = useParams();\n\n  //state dùng để sắp xếp sản phẩm\n  const [sort, setSort] = useState(\"default\");\n\n  //Tổng số trang\n  const [totalPage, setTotalPage] = useState();\n\n  // Get category parram from url by localtion\n  const category =\n    new URLSearchParams(window.location.search).get(\"category\") || \"all\";\n\n  //Từng trang hiện tại\n  const [pagination, setPagination] = useState({\n    page: \"1\",\n    count: \"6\",\n    search: \"\",\n    category: category,\n  });\n\n  //Hàm nà dùng để lấy value từ component SortProduct truyền lên\n  const handlerChangeSort = (value) => {\n    console.log(\"Value: \", value);\n    setSort(value);\n  };\n\n  //Hàm này dùng để thay đổi state pagination.page\n  //Nó sẽ truyền xuống Component con và nhận dữ liệu từ Component con truyền lên\n  const handlerChangePage = (value) => {\n    //Sau đó set lại cái pagination để gọi chạy làm useEffect gọi lại API pagination\n    setPagination({\n      page: value,\n      count: pagination.count,\n      search: pagination.search,\n      category: pagination.category,\n    });\n  };\n\n  //Hàm này dùng để thay đổi state pagination.search\n  //Hàm này sẽ truyền xuống Component con và nhận dữ liệu từ Component con truyền lên\n\n  const handlerSearch = (value) => {\n    console.log(\"Value: \", value);\n\n    setPagination({\n      page: pagination.page,\n      count: pagination.count,\n      search: value,\n      category: pagination.category,\n    });\n  };\n\n  //Hàm này dùng để thay đổi state pagination.category\n  const handlerCategory = (value) => {\n    console.log(\"Value: \", value);\n\n    setPagination({\n      page: pagination.page,\n      count: pagination.count,\n      search: pagination.search,\n      category: value,\n    });\n  };\n\n  //Gọi hàm useEffect tìm tổng số sản phẩm để tính tổng số trang\n  //Và nó phụ thuộc và state pagination\n  useEffect(() => {\n    const fetchAllData = async () => {\n      let response;\n      let data;\n      // Nếu mà category === 'all' thì nó sẽ gọi hàm get tất cả sản phẩm\n      // Ngược lại thì nó sẽ gọi hàm pagination và phân loại sản phẩm\n      if (pagination.category === \"all\") {\n        response = await ProductAPI.getAPI();\n        console.log(response);\n      } else {\n        const params = {\n          page: pagination.page,\n          count: pagination.count,\n          search: pagination.search,\n          category: pagination.category,\n        };\n\n        const query = queryString.stringify(params);\n\n        const newQuery = \"?\" + query;\n\n        data = await ProductAPI.getPagination(newQuery);\n        response = data.result;\n        console.log(response);\n      }\n\n      //Tính tổng số trang = tổng số sản phẩm / số lượng sản phẩm 1 trang\n      const totalPage = Math.ceil(\n        parseInt(response?.length) / parseInt(pagination.count)\n      );\n\n      setTotalPage(totalPage);\n    };\n\n    fetchAllData();\n  }, [pagination]);\n\n  //Gọi hàm Pagination\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n\n      const params = {\n        page: pagination.page,\n        count: pagination.count,\n        search: valueSearchHome ? valueSearchHome : pagination.search,\n        category: pagination.category,\n      };\n\n      const query = queryString.stringify(params);\n\n      const newQuery = \"?\" + query;\n\n      const data = await ProductAPI.getPagination(newQuery);\n      const response = data;\n\n      setProducts(response);\n      setTemp(response);\n      setLoading(false);\n    };\n\n    fetchData();\n  }, [pagination, valueSearchHome]);\n\n  return (\n    <div className=\"container\">\n      <section className=\"py-5 bg-light\">\n        <div className=\"container\">\n          <div className=\"row px-4 px-lg-5 py-lg-4 align-items-center\">\n            <div className=\"col-lg-6\">\n              <h1 className=\"h2 text-uppercase mb-0\">Cửa hàng</h1>\n            </div>\n            <div className=\"col-lg-6 text-lg-right\">\n              <nav aria-label=\"breadcrumb\">\n                <ol className=\"breadcrumb justify-content-lg-end mb-0 px-0\">\n                  <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                    Hân hạnh được đón tiếp quý khách!\n                  </li>\n                </ol>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* -------------Modal Product----------------- */}\n      {products &&\n        products.map((value) => (\n          <div\n            className=\"modal fade show\"\n            id={`product_${value._id}`}\n            key={value._id}\n          >\n            <div\n              className=\"modal-dialog modal-lg modal-dialog-centered\"\n              role=\"document\"\n            >\n              <div className=\"modal-content\">\n                <div className=\"modal-body p-0\">\n                  <div className=\"row align-items-stretch\">\n                    <div className=\"col-lg-6 p-lg-0\">\n                      <img\n                        alt=\"img1\"\n                        style={{ width: \"100%\" }}\n                        className=\"product-view d-block h-100 bg-cover bg-center\"\n                        src={value.img1}\n                        data-lightbox={`product_${value._id}`}\n                      />\n                      <img alt=\"img2\" className=\"d-none\" href={value.img2} />\n                      <img alt=\"img3\" className=\"d-none\" href={value.img3} />\n                    </div>\n                    <div className=\"col-lg-6\">\n                      {/* Để tắt modal phải có class=\"close\" và data-dissmiss=\"modal\" và aria-label=\"Close\" */}\n                      <a\n                        className=\"close p-4\"\n                        type=\"button\"\n                        href=\"#section_product\"\n                        data-dismiss=\"modal\"\n                        aria-label=\"Close\"\n                      >\n                        ×\n                      </a>\n                      <div className=\"p-5 my-md-4\">\n                        <ul className=\"list-inline mb-2\">\n                          <li className=\"list-inline-item m-0\">\n                            <i className=\"fas fa-star small text-warning\"></i>\n                          </li>\n                          <li className=\"list-inline-item m-0\">\n                            <i className=\"fas fa-star small text-warning\"></i>\n                          </li>\n                          <li className=\"list-inline-item m-0\">\n                            <i className=\"fas fa-star small text-warning\"></i>\n                          </li>\n                          <li className=\"list-inline-item m-0\">\n                            <i className=\"fas fa-star small text-warning\"></i>\n                          </li>\n                          <li className=\"list-inline-item m-0\">\n                            <i className=\"fas fa-star small text-warning\"></i>\n                          </li>\n                        </ul>\n                        <h2 className=\"h4\">{value.name}</h2>\n                        <p className=\"text-muted\">\n                          {convertMoney(value.price)} VND\n                        </p>\n                        <p className=\"text-small mb-4\">\n                          Lorem ipsum dolor sit amet, consectetur adipiscing\n                          elit. In ut ullamcorper leo, eget euismod orci. Cum\n                          sociis natoque penatibus et magnis dis parturient\n                          montes nascetur ridiculus mus. Vestibulum ultricies\n                          aliquam convallis.\n                        </p>\n                        <div className=\"row align-items-stretch mb-4\">\n                          <div className=\"col-sm-5 pl-sm-0 fix_addwish\">\n                            <a className=\"btn btn-dark btn-sm btn-block h-100 d-flex align-items-center justify-content-center px-0\">\n                              <i className=\"far fa-heart mr-2\"></i>\n                              Add Too Wish List\n                            </a>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      {/* -------------Modal Product----------------- */}\n\n      <section className=\"py-5\">\n        <div className=\"container p-0\">\n          <div className=\"row\">\n            <div className=\"col-lg-3   order-2 order-lg-1 \">\n              <div className=\"text-uppercase mb-4 header_category rounded \">\n                Danh mục sản phẩm\n              </div>\n              <div className=\"py-2 px-4 mb-3 mt-3 bg-light rounded \">\n                <strong className=\"small text-uppercase font-weight-bold \">\n                  Bánh Cao Cấp\n                </strong>\n              </div>\n              <ul className=\"list-unstyled small text-muted pl-lg-4 font-weight-normal \">\n                <li className=\"mb-3 \">\n                  <img\n                    src={ImgIcon.iconMenu}\n                    alt=\"image_icon\"\n                    style={{ filter: \"saturate(3)\" }}\n                  />\n                  <span\n                    onClick={() => handlerCategory(\"all\")}\n                    className={\n                      pagination.category === \"all\" ? \"active\" : \"none_active\"\n                    }\n                  >\n                    Bộ sưu tập bánh\n                  </span>\n                </li>\n              </ul>\n              <div className=\"py-2 px-4 bg-light mb-3 rounded\">\n                <strong className=\"small text-uppercase font-weight-bold\">\n                  Bánh tặng quà\n                </strong>\n              </div>\n              <ul className=\"list-unstyled small text-muted pl-lg-4 font-weight-normal \">\n                <li className=\"mb-3 \">\n                  <img\n                    src={ImgIcon.chocolate}\n                    alt=\"image_icon\"\n                    style={{ filter: \"saturate(3)\" }}\n                  />\n                  <span\n                    onClick={() => handlerCategory(\"chocolate\")}\n                    className={\n                      pagination.category === \"chocolate\"\n                        ? \"active\"\n                        : \"none_active\"\n                    }\n                  >\n                    Bánh Chocolate\n                  </span>\n                </li>\n                <li className=\"mb-3\">\n                  <img\n                    src={ImgIcon.custard}\n                    alt=\"image_icon\"\n                    style={{ filter: \"saturate(3)\" }}\n                  />\n                  <span\n                    className={\n                      pagination.category === \"pastry\"\n                        ? \"active\"\n                        : \"none_active\"\n                    }\n                    onClick={() => handlerCategory(\"pastry\")}\n                  >\n                    Bánh ngọt\n                  </span>\n                </li>\n                <li className=\"mb-3\">\n                  <img\n                    src={ImgIcon.custard}\n                    alt=\"image_icon\"\n                    style={{ filter: \"saturate(3)\" }}\n                  />\n                  <span\n                    className={\n                      pagination.category === \"custard\"\n                        ? \"active\"\n                        : \"none_active\"\n                    }\n                    onClick={() => handlerCategory(\"custard\")}\n                  >\n                    Bánh bông lan\n                  </span>\n                </li>\n              </ul>\n              <div className=\"py-2 px-4 bg-light mb-3 rounded\">\n                <strong className=\"small text-uppercase font-weight-bold\">\n                  Bánh ăn vặt\n                </strong>\n              </div>\n              <ul className=\"list-unstyled small text-muted pl-lg-4 font-weight-normal \">\n                <li className=\"mb-3\">\n                  <img\n                    src={ImgIcon.seasonal}\n                    alt=\"image_icon\"\n                    style={{ filter: \"saturate(3)\" }}\n                  />\n                  <span\n                    className={\n                      pagination.category === \"seasonal\"\n                        ? \"active\"\n                        : \"none_active\"\n                    }\n                    onClick={() => handlerCategory(\"seasonal\")}\n                  >\n                    Bánh theo mùa\n                  </span>\n                </li>\n                <li className=\"mb-3\">\n                  <img\n                    src={ImgIcon.jelly}\n                    alt=\"image_icon\"\n                    style={{ filter: \"saturate(3)\" }}\n                  />\n                  <span\n                    className={\n                      pagination.category === \"jelly\" ? \"active\" : \"none_active\"\n                    }\n                    onClick={() => handlerCategory(\"jelly\")}\n                  >\n                    Bánh rau câu\n                  </span>\n                </li>\n                <li className=\"mb-3\">\n                  <img\n                    src={ImgIcon.bread}\n                    alt=\"image_icon\"\n                    style={{ filter: \"saturate(3)\" }}\n                  />\n                  <span\n                    className={\n                      pagination.category === \"bread\" ? \"active\" : \"none_active\"\n                    }\n                    onClick={() => handlerCategory(\"bread\")}\n                  >\n                    Bánh mì\n                  </span>\n                </li>\n                <li className=\"mb-3 \">\n                  <img\n                    src={ImgIcon.cheesecake}\n                    alt=\"image_icon\"\n                    style={{ filter: \"saturate(3)\" }}\n                  />\n                  <span\n                    className={\n                      pagination.category === \"cheesecake\"\n                        ? \"active\"\n                        : \"none_active\"\n                    }\n                    onClick={() => handlerCategory(\"cheesecake\")}\n                  >\n                    Bánh kem\n                  </span>\n                </li>\n              </ul>\n              <div className=\"py-2 px-4 bg-light mb-3 rounded\">\n                <strong className=\"small text-uppercase font-weight-bold\">\n                  Các loại bánh khác\n                </strong>\n              </div>\n              <ul className=\"list-unstyled small text-muted pl-lg-4 font-weight-normal mb-5\">\n                <li className=\"mb-3\">\n                  <span\n                    className={\n                      pagination.category === \"other\" ? \"active\" : \"none_active\"\n                    }\n                    onClick={() => handlerCategory(\"other\")}\n                  >\n                    Bánh khác\n                  </span>\n                </li>\n              </ul>\n            </div>\n            <div className=\"col-lg-9  order-1 order-lg-2 mb-5 mb-lg-0 px-5\">\n              <div className=\"row mb-3 align-items-center\">\n                {/* ------------------Search----------------- */}\n                <Search handlerSearch={handlerSearch} />\n                {/* ------------------Search----------------- */}\n\n                <div className=\"col-lg-8\">\n                  <ul className=\"list-inline d-flex align-items-center justify-content-lg-end mb-0\">\n                    <li className=\"list-inline-item\">\n                      <SortProduct handlerChangeSort={handlerChangeSort} />\n                    </li>\n                  </ul>\n                </div>\n              </div>\n\n              {loading ? (\n                <div class=\"spinner-border text-info\" role=\"status\">\n                  <span class=\"visually-hidden\">\n                    <h4>Loading please wait...</h4>\n                  </span>\n                </div>\n              ) : (\n                <Products products={products} sort={sort} />\n              )}\n\n              <Pagination\n                pagination={pagination}\n                handlerChangePage={handlerChangePage}\n                totalPage={totalPage}\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default Shop;\n","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Share\\Chat\\Chat.jsx",["438","439","440"],"C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Share\\Footer\\Footer.jsx",[],"C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Share\\Header\\Header.jsx",["441"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addUser } from \"../../Redux/Action/ActionCart\";\nimport { addSession } from \"../../Redux/Action/ActionSession\";\nimport logo from \"../img/cakes-shop-logo.jpg\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport LoginLink from \"../../Authentication/LoginLink\";\nimport LogoutLink from \"../../Authentication/LogoutLink\";\nimport Name from \"../../Authentication/Name\";\nimport styles from \"./Header.module.css\";\n\nfunction Header(props) {\n  const dispatch = useDispatch();\n  const [valueActive, setValueActive] = useState(\"home\");\n  const [valueSearch, setValueSearch] = useState(\"\");\n  const navigation = useNavigate();\n\n  const listMenuItemLeft = {\n    home: \"Trang chủ\",\n    introduce: \"Giới thiệu\",\n    news: \"Tin tức\",\n    promotion: \"Khuyến mãi\",\n    formula: \"Công thức làm bánh\",\n    contact: \"Liên hệ\",\n  };\n\n  const listMenuItemRight = {\n    store: \"Cửa hàng\",\n    cart: \"Giỏ hàng\",\n  };\n\n  //Sau khi F5 nó sẽ kiểm tra nếu phiên làm việc của Session vẫn còn thì nó sẽ tiếp tục\n  // đưa dữ liệu vào Redux\n  if (localStorage.getItem(\"id_user\")) {\n    const action = addSession(localStorage.getItem(\"id_user\"));\n    dispatch(action);\n  } else {\n    //Đưa idTemp vào Redux temp để tạm lưu trữ\n    localStorage.setItem(\"id_temp\", \"abc999\");\n    const action = addUser(localStorage.getItem(\"id_temp\"));\n    dispatch(action);\n  }\n\n  //Get IdUser từ redux khi user đã đăng nhập\n  var idUser = useSelector((state) => state.Session.idUser);\n\n  //Get idtemp từ redux khi user chưa đăng nhập\n  var idTemp = useSelector((state) => state.Cart.id_user);\n\n  const [loginUser, setLoginUser] = useState(false);\n  const [nameUser, setNameUser] = useState(false);\n\n  useEffect(() => {\n    if (!idUser) {\n      setLoginUser(false);\n      setNameUser(false);\n    } else {\n      setLoginUser(true);\n      setNameUser(true);\n    }\n  }, [idUser]);\n\n  const handleActive = (value) => {\n    setValueActive(value);\n  };\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    navigation(`/shop/${valueSearch}`);\n    setValueSearch(\"\");\n  };\n\n  return (\n    <div className={styles.header}>\n      <div className=\"fluid px-0 px-lg-3\">\n        <nav className=\"navbar navbar-expand-lg navbar-light  \">\n          {/* button icon menu */}\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarNavAltMarkup\"\n            aria-controls=\"navbarNavAltMarkup\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n\n          <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n            <ul className=\"navbar-nav mr-auto align-items-center\">\n              <li className=\"nav-item\">\n                <img className={styles.img_logo} src={logo} alt=\"logo\" />\n              </li>\n              {/* list item left */}\n              <li className=\"nav-item\" onClick={() => handleActive(\"home\")}>\n                <Link className=\"nav-link \" to={`/`}>\n                  <span\n                    className={\n                      valueActive === \"home\"\n                        ? styles.active\n                        : styles.none_active\n                    }\n                  >\n                    {listMenuItemLeft.home}\n                  </span>\n                </Link>\n              </li>\n\n              <li\n                className=\"nav-item\"\n                onClick={() => handleActive(\"introduce\")}\n              >\n                <Link className=\"nav-link \" to={`/`}>\n                  <span\n                    className={\n                      valueActive === \"introduce\"\n                        ? styles.active\n                        : styles.none_active\n                    }\n                  >\n                    {listMenuItemLeft.introduce}\n                  </span>\n                </Link>\n              </li>\n              <li\n                className=\"nav-item\"\n                onClick={() => handleActive(\"Công thức làm bánh\")}\n              >\n                <Link className=\"nav-link \" to={`/`}>\n                  <span\n                    className={\n                      valueActive === \"Công thức làm bánh\"\n                        ? styles.active\n                        : styles.none_active\n                    }\n                  >\n                    {listMenuItemLeft.formula}\n                  </span>\n                </Link>\n              </li>\n              <li className=\"nav-item\" onClick={() => handleActive(\"news\")}>\n                <Link className=\"nav-link \" to={`/`}>\n                  <span\n                    className={\n                      valueActive === \"news\"\n                        ? styles.active\n                        : styles.none_active\n                    }\n                  >\n                    {listMenuItemLeft.news}\n                  </span>\n                </Link>\n              </li>\n              <li className=\"nav-item\" onClick={() => handleActive(\"contact\")}>\n                <Link className=\"nav-link \" to={`/`}>\n                  <span\n                    className={\n                      valueActive === \"contact\"\n                        ? styles.active\n                        : styles.none_active\n                    }\n                  >\n                    {listMenuItemLeft.contact}\n                  </span>\n                </Link>\n              </li>\n\n              <li\n                className=\"nav-item\"\n                onClick={() => handleActive(\"promotion\")}\n              >\n                <Link className=\"nav-link \" to={`/`}>\n                  <span\n                    className={\n                      valueActive === \"promotion\"\n                        ? styles.active\n                        : styles.none_active\n                    }\n                  >\n                    {listMenuItemLeft.promotion}\n                  </span>\n                </Link>\n              </li>\n            </ul>\n\n            {/* list item right */}\n            <ul className=\"navbar-nav d-flex align-items-center\">\n              <li className=\"nav-item px-1 \">\n                <form onSubmit={handleSearch} className=\"d-flex\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Bạn cần tìm gì?...\"\n                    className={styles.search_input}\n                    value={valueSearch}\n                    onChange={(e) => setValueSearch(e.target.value)}\n                  />\n                  <span>\n                    <button className={styles.btn_search} type=\"submit\">\n                      <i className=\"fas fa-search mr-1 text-white\" />\n                      Tìm Kiếm\n                    </button>\n                  </span>\n                </form>\n              </li>\n              <li\n                className=\"nav-item px-1\"\n                onClick={() => handleActive(\"store\")}\n              >\n                <Link className=\"nav-link active\" to={`/shop`}>\n                  <i className=\"fas fa-store mr-1 text-white\"></i>\n                  <span\n                    className={\n                      valueActive === \"store\"\n                        ? styles.active\n                        : styles.none_active\n                    }\n                  >\n                    {listMenuItemRight.store}\n                  </span>\n                </Link>\n              </li>\n              <li\n                className=\"nav-item px-1\"\n                onClick={() => handleActive(\"cart\")}\n              >\n                <Link className=\"nav-link\" to={`/cart`}>\n                  <i className=\"fas fa-dolly-flatbed mr-1 text-white\"></i>\n                  <span\n                    className={\n                      valueActive === \"cart\"\n                        ? styles.active\n                        : styles.none_active\n                    }\n                  >\n                    {listMenuItemRight.cart}\n                  </span>\n                </Link>\n              </li>\n              {nameUser ? <Name /> : \"\"}\n              {loginUser ? <LoginLink /> : <LogoutLink />}\n            </ul>\n          </div>\n        </nav>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\History\\Component\\DetailHistory.jsx",["442"],"C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\History\\Component\\MainHistory.jsx",[],"C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Redux\\Reducer\\ReducerRoot.jsx",[],"C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\convertMoney.js",[],"C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Share\\img\\Image.jsx",[],"C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Authentication\\LoginLink.jsx",["443","444","445"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { deleteSession } from \"../Redux/Action/ActionSession\";\n\nfunction LoginLink(props) {\n  const dispatch = useDispatch();\n\n  const onRedirect = () => {\n    localStorage.clear();\n\n    const action = deleteSession(\"\");\n    dispatch(action);\n  };\n\n  return (\n    <li className=\"nav-item \" onClick={onRedirect}>\n      <Link className=\"nav-link text-secondary text-uppercase\" to=\"/signin\">\n        ( Đăng xuất )\n      </Link>\n    </li>\n  );\n}\n\nexport default LoginLink;\n","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Authentication\\Name.jsx",[],"C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Redux\\Action\\ActionCart.jsx",[],"C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Cart\\Component\\ListCart.jsx",["446"],"import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport convertMoney from \"../../convertMoney\";\n\nListCart.propTypes = {\n  listCart: PropTypes.array,\n  onDeleteCart: PropTypes.func,\n  onUpdateCount: PropTypes.func,\n};\n\nListCart.defaultProps = {\n  listCart: [],\n  onDeleteCart: null,\n  onUpdateCount: null,\n};\n\nfunction ListCart(props) {\n  const { listCart, onDeleteCart, onUpdateCount } = props;\n\n  console.log(listCart);\n  const handlerChangeText = (e) => {\n    console.log(e.target.value);\n  };\n\n  const handlerDelete = (getUser, getProduct) => {\n    if (!onDeleteCart) {\n      return;\n    }\n\n    onDeleteCart(getUser, getProduct);\n  };\n\n  const handlerDown = (getIdUser, getIdProduct, getCount) => {\n    if (!onUpdateCount) {\n      return;\n    }\n\n    if (getCount === 1) {\n      return;\n    }\n\n    //Trước khi trả dữ liệu về component cha thì phải thay đổi biến count\n    const updateCount = parseInt(getCount) - 1;\n\n    onUpdateCount(getIdUser, getIdProduct, updateCount);\n  };\n\n  const handlerUp = (getIdUser, getIdProduct, getCount) => {\n    if (!onUpdateCount) {\n      return;\n    }\n\n    //Trước khi trả dữ liệu về component cha thì phải thay đổi biến count\n    const updateCount = parseInt(getCount) + 1;\n\n    onUpdateCount(getIdUser, getIdProduct, updateCount);\n  };\n\n  return (\n    <div className=\"table-responsive mb-4\">\n      <table className=\"table\">\n        <thead className=\"bg-light\">\n          <tr className=\"text-center\">\n            <th className=\"border-0\" scope=\"col\">\n              {\" \"}\n              <strong className=\"text-small text-uppercase\">Hình ảnh</strong>\n            </th>\n            <th className=\"border-0\" scope=\"col\">\n              {\" \"}\n              <strong className=\"text-small text-uppercase\">\n                Tên sản phẩm\n              </strong>\n            </th>\n            <th className=\"border-0\" scope=\"col\">\n              {\" \"}\n              <strong className=\"text-small text-uppercase\">Giá</strong>\n            </th>\n            <th className=\"border-0\" scope=\"col\">\n              {\" \"}\n              <strong className=\"text-small text-uppercase\">Số lượng</strong>\n            </th>\n            <th className=\"border-0\" scope=\"col\">\n              {\" \"}\n              <strong className=\"text-small text-uppercase\">Tổng</strong>\n            </th>\n            <th className=\"border-0\" scope=\"col\">\n              {\" \"}\n              <strong className=\"text-small text-uppercase\"></strong>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {listCart &&\n            listCart.map((value, index) => (\n              <tr className=\"text-center\" key={index}>\n                <td className=\"pl-0 border-0\">\n                  <div className=\"media align-items-center justify-content-center\">\n                    <Link\n                      className=\"reset-anchor d-block animsition-link\"\n                      to={`/detail/${value.idProduct}`}\n                    >\n                      <img src={value.img} alt=\"...\" width=\"70\" />\n                    </Link>\n                  </div>\n                </td>\n                <td className=\"align-middle border-0\">\n                  <div className=\"media align-items-center justify-content-center\">\n                    <Link\n                      className=\"reset-anchor h6 animsition-link\"\n                      to={`/detail/${value.idProduct}`}\n                    >\n                      {value.nameProduct}\n                    </Link>\n                  </div>\n                </td>\n\n                <td className=\"align-middle border-0\">\n                  <p className=\"mb-0 small\">\n                    {convertMoney(value.priceProduct)} VND\n                  </p>\n                </td>\n                <td className=\"align-middle border-0\">\n                  <div className=\"quantity justify-content-center\">\n                    <button\n                      className=\"dec-btn p-0\"\n                      style={{ cursor: \"pointer\" }}\n                      onClick={() =>\n                        handlerDown(value.idUser, value.idProduct, value.count)\n                      }\n                    >\n                      <i className=\"fas fa-caret-left\"></i>\n                    </button>\n                    <input\n                      className=\"form-control form-control-sm border-0 shadow-0 p-0\"\n                      type=\"text\"\n                      value={value.count}\n                      onChange={handlerChangeText}\n                    />\n                    <button\n                      className=\"inc-btn p-0\"\n                      style={{ cursor: \"pointer\" }}\n                      onClick={() =>\n                        handlerUp(value.idUser, value.idProduct, value.count)\n                      }\n                    >\n                      <i className=\"fas fa-caret-right\"></i>\n                    </button>\n                  </div>\n                </td>\n                <td className=\"align-middle border-0\">\n                  <p className=\"mb-0 small\">\n                    {convertMoney(\n                      parseInt(value.priceProduct) * parseInt(value.count)\n                    )}{\" \"}\n                    VND\n                  </p>\n                </td>\n                <td className=\"align-middle border-0\">\n                  <span\n                    className=\"reset-anchor remove_cart\"\n                    style={{ cursor: \"pointer\" }}\n                    onClick={() => handlerDelete(value.idUser, value.idProduct)}\n                  >\n                    <i className=\"fas fa-trash-alt small text-muted\"></i>\n                  </span>\n                </td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default ListCart;\n","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Authentication\\LogoutLink.jsx",[],"C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\API\\CartAPI.jsx",[],"C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\API\\UserAPI.jsx",[],"C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Redux\\Action\\ActionSession.jsx",[],"C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\API\\ProductAPI.jsx",[],"C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\API\\CommentAPI.jsx",[],"C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\API\\MessengerAPI.jsx",[],"C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\API\\CheckoutAPI.jsx",[],"C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\API\\ChatRoomsAPI.jsx",[],"C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Shop\\Component\\Pagination.jsx",[],"C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Shop\\Component\\Products.jsx",["447","448"],"import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport convertMoney from \"../../convertMoney\";\nimport \"../shop.css\";\nProducts.propTypes = {\n  products: PropTypes.array,\n  sort: PropTypes.string,\n};\n\nProducts.defaultProps = {\n  products: [],\n  sort: \"\",\n};\n\nfunction Products(props) {\n  const { products, sort } = props;\n\n  if (sort === \"DownToUp\") {\n    products.sort((a, b) => {\n      return a.price - b.price;\n    });\n  } else if (sort === \"UpToDown\") {\n    products.sort((a, b) => {\n      return b.price - a.price;\n    });\n  }\n\n  return (\n    <div className=\"row\">\n      {/* -------------Product----------------- */}\n      {products &&\n        products.map((value) => (\n          <div className=\"col-lg-4 col-sm-6 Section_Category \" key={value._id}>\n            <div className=\"product text-center\">\n              <div className=\"position-relative mb-3\">\n                <div className=\"badge text-white badge-\"></div>\n                <div className=\"card\">\n                  <Link className=\"d-block\" to={`/detail/${value._id}`}>\n                    <img className=\"product_img\" src={value.img1} alt=\"...\" />\n                    {/* Hiển thị thông báo hết hàng khi số lượng sản phẩm trong kho = 0 */}\n                    {value.count === 0 && (\n                      <div className=\"message_outOfStock\">Hết Hàng </div>\n                    )}\n                  </Link>\n                  <div className=\"mt-4\">\n                    <h6>\n                      <a className=\"reset-anchor \" href=\"detail.html\">\n                        {value.name}\n                      </a>\n                    </h6>\n                    <p className=\"small text-muted\">\n                      {convertMoney(value.price)} VND\n                    </p>\n                  </div>\n                </div>\n                <div className=\"product-overlay\">\n                  <ul className=\"mb-0 list-inline\"></ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      {/* -------------Product----------------- */}\n    </div>\n  );\n}\n\nexport default Products;\n","C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Shop\\Component\\SortProduct.jsx",[],"C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\API\\HistoryAPI.jsx",[],"C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Shop\\Component\\Search.jsx",[],"C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Redux\\Reducer\\ReducerSession.jsx",[],"C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Redux\\Reducer\\ReducerCart.jsx",[],"C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\API\\axiosClient.jsx",[],"C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Shop\\Component\\IndexPage.jsx",["449"],"C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Home\\Clock.jsx",[],"C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Share\\img\\index.js",[],"C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\Feedback\\Feedback.jsx",[],"C:\\Users\\Hii\\Desktop\\Asm3\\client\\src\\API\\NewsApi.jsx",[],{"ruleId":"450","replacedBy":"451"},{"ruleId":"452","replacedBy":"453"},{"ruleId":"454","severity":1,"message":"455","line":16,"column":8,"nodeType":"456","messageId":"457","endLine":16,"endColumn":12},{"ruleId":"450","replacedBy":"458"},{"ruleId":"452","replacedBy":"459"},{"ruleId":"454","severity":1,"message":"460","line":24,"column":9,"nodeType":"456","messageId":"457","endLine":24,"endColumn":17},{"ruleId":"454","severity":1,"message":"461","line":61,"column":9,"nodeType":"456","messageId":"457","endLine":61,"endColumn":21},{"ruleId":"454","severity":1,"message":"462","line":66,"column":9,"nodeType":"456","messageId":"457","endLine":66,"endColumn":24},{"ruleId":"454","severity":1,"message":"463","line":71,"column":9,"nodeType":"456","messageId":"457","endLine":71,"endColumn":23},{"ruleId":"464","severity":1,"message":"465","line":121,"column":6,"nodeType":"466","endLine":121,"endColumn":20,"suggestions":"467"},{"ruleId":"468","severity":1,"message":"469","line":411,"column":13,"nodeType":"470","endLine":419,"endColumn":14},{"ruleId":"454","severity":1,"message":"471","line":2,"column":16,"nodeType":"456","messageId":"457","endLine":2,"endColumn":24},{"ruleId":"454","severity":1,"message":"472","line":22,"column":10,"nodeType":"456","messageId":"457","endLine":22,"endColumn":17},{"ruleId":"454","severity":1,"message":"473","line":28,"column":10,"nodeType":"456","messageId":"457","endLine":28,"endColumn":17},{"ruleId":"464","severity":1,"message":"474","line":128,"column":6,"nodeType":"466","endLine":128,"endColumn":17,"suggestions":"475"},{"ruleId":"454","severity":1,"message":"476","line":66,"column":11,"nodeType":"456","messageId":"457","endLine":66,"endColumn":20},{"ruleId":"454","severity":1,"message":"477","line":150,"column":27,"nodeType":"456","messageId":"457","endLine":150,"endColumn":35},{"ruleId":"454","severity":1,"message":"478","line":188,"column":13,"nodeType":"456","messageId":"457","endLine":188,"endColumn":17},{"ruleId":"464","severity":1,"message":"479","line":200,"column":6,"nodeType":"466","endLine":200,"endColumn":12,"suggestions":"480"},{"ruleId":"468","severity":1,"message":"469","line":351,"column":23,"nodeType":"470","endLine":356,"endColumn":24},{"ruleId":"464","severity":1,"message":"481","line":23,"column":6,"nodeType":"466","endLine":23,"endColumn":8,"suggestions":"482"},{"ruleId":"454","severity":1,"message":"483","line":5,"column":10,"nodeType":"456","messageId":"457","endLine":5,"endColumn":14},{"ruleId":"454","severity":1,"message":"484","line":11,"column":8,"nodeType":"456","messageId":"457","endLine":11,"endColumn":21},{"ruleId":"454","severity":1,"message":"485","line":15,"column":10,"nodeType":"456","messageId":"457","endLine":15,"endColumn":14},{"ruleId":"454","severity":1,"message":"486","line":6,"column":16,"nodeType":"456","messageId":"457","endLine":6,"endColumn":24},{"ruleId":"454","severity":1,"message":"487","line":13,"column":9,"nodeType":"456","messageId":"457","endLine":13,"endColumn":16},{"ruleId":"464","severity":1,"message":"474","line":46,"column":6,"nodeType":"466","endLine":46,"endColumn":17,"suggestions":"488"},{"ruleId":"454","severity":1,"message":"476","line":52,"column":11,"nodeType":"456","messageId":"457","endLine":52,"endColumn":20},{"ruleId":"454","severity":1,"message":"489","line":32,"column":7,"nodeType":"456","messageId":"457","endLine":32,"endColumn":13},{"ruleId":"464","severity":1,"message":"490","line":84,"column":6,"nodeType":"466","endLine":84,"endColumn":12,"suggestions":"491"},{"ruleId":"468","severity":1,"message":"492","line":139,"column":17,"nodeType":"470","endLine":139,"endColumn":66},{"ruleId":"468","severity":1,"message":"469","line":188,"column":17,"nodeType":"470","endLine":192,"endColumn":18},{"ruleId":"454","severity":1,"message":"493","line":1,"column":17,"nodeType":"456","messageId":"457","endLine":1,"endColumn":26},{"ruleId":"454","severity":1,"message":"494","line":1,"column":28,"nodeType":"456","messageId":"457","endLine":1,"endColumn":36},{"ruleId":"454","severity":1,"message":"495","line":3,"column":16,"nodeType":"456","messageId":"457","endLine":3,"endColumn":24},{"ruleId":"454","severity":1,"message":"493","line":1,"column":17,"nodeType":"456","messageId":"457","endLine":1,"endColumn":26},{"ruleId":"454","severity":1,"message":"494","line":1,"column":28,"nodeType":"456","messageId":"457","endLine":1,"endColumn":36},{"ruleId":"454","severity":1,"message":"494","line":1,"column":17,"nodeType":"456","messageId":"457","endLine":1,"endColumn":25},{"ruleId":"468","severity":1,"message":"469","line":42,"column":13,"nodeType":"470","endLine":42,"endColumn":38},{"ruleId":"450","replacedBy":"496"},{"ruleId":"452","replacedBy":"497"},{"ruleId":"454","severity":1,"message":"455","line":16,"column":8,"nodeType":"456","messageId":"457","endLine":16,"endColumn":12},{"ruleId":"454","severity":1,"message":"486","line":6,"column":16,"nodeType":"456","messageId":"457","endLine":6,"endColumn":24},{"ruleId":"454","severity":1,"message":"487","line":13,"column":9,"nodeType":"456","messageId":"457","endLine":13,"endColumn":16},{"ruleId":"464","severity":1,"message":"474","line":46,"column":6,"nodeType":"466","endLine":46,"endColumn":17,"suggestions":"498"},{"ruleId":"454","severity":1,"message":"476","line":52,"column":11,"nodeType":"456","messageId":"457","endLine":52,"endColumn":20},{"ruleId":"464","severity":1,"message":"499","line":92,"column":6,"nodeType":"466","endLine":92,"endColumn":8,"suggestions":"500"},{"ruleId":"454","severity":1,"message":"460","line":25,"column":9,"nodeType":"456","messageId":"457","endLine":25,"endColumn":17},{"ruleId":"454","severity":1,"message":"461","line":62,"column":9,"nodeType":"456","messageId":"457","endLine":62,"endColumn":21},{"ruleId":"454","severity":1,"message":"462","line":67,"column":9,"nodeType":"456","messageId":"457","endLine":67,"endColumn":24},{"ruleId":"454","severity":1,"message":"463","line":72,"column":9,"nodeType":"456","messageId":"457","endLine":72,"endColumn":23},{"ruleId":"464","severity":1,"message":"465","line":122,"column":6,"nodeType":"466","endLine":122,"endColumn":20,"suggestions":"501"},{"ruleId":"454","severity":1,"message":"502","line":170,"column":9,"nodeType":"456","messageId":"457","endLine":170,"endColumn":22},{"ruleId":"454","severity":1,"message":"473","line":30,"column":10,"nodeType":"456","messageId":"457","endLine":30,"endColumn":17},{"ruleId":"464","severity":1,"message":"474","line":130,"column":6,"nodeType":"466","endLine":130,"endColumn":17,"suggestions":"503"},{"ruleId":"454","severity":1,"message":"471","line":2,"column":16,"nodeType":"456","messageId":"457","endLine":2,"endColumn":24},{"ruleId":"454","severity":1,"message":"472","line":26,"column":10,"nodeType":"456","messageId":"457","endLine":26,"endColumn":17},{"ruleId":"454","severity":1,"message":"476","line":66,"column":11,"nodeType":"456","messageId":"457","endLine":66,"endColumn":20},{"ruleId":"454","severity":1,"message":"477","line":150,"column":27,"nodeType":"456","messageId":"457","endLine":150,"endColumn":35},{"ruleId":"454","severity":1,"message":"478","line":188,"column":13,"nodeType":"456","messageId":"457","endLine":188,"endColumn":17},{"ruleId":"464","severity":1,"message":"479","line":200,"column":6,"nodeType":"466","endLine":200,"endColumn":12,"suggestions":"504"},{"ruleId":"468","severity":1,"message":"469","line":351,"column":23,"nodeType":"470","endLine":356,"endColumn":24},{"ruleId":"454","severity":1,"message":"485","line":15,"column":10,"nodeType":"456","messageId":"457","endLine":15,"endColumn":14},{"ruleId":"464","severity":1,"message":"490","line":84,"column":6,"nodeType":"466","endLine":84,"endColumn":12,"suggestions":"505"},{"ruleId":"468","severity":1,"message":"492","line":139,"column":17,"nodeType":"470","endLine":139,"endColumn":66},{"ruleId":"468","severity":1,"message":"469","line":188,"column":17,"nodeType":"470","endLine":192,"endColumn":18},{"ruleId":"454","severity":1,"message":"489","line":48,"column":7,"nodeType":"456","messageId":"457","endLine":48,"endColumn":13},{"ruleId":"464","severity":1,"message":"481","line":23,"column":6,"nodeType":"466","endLine":23,"endColumn":8,"suggestions":"506"},{"ruleId":"454","severity":1,"message":"493","line":1,"column":17,"nodeType":"456","messageId":"457","endLine":1,"endColumn":26},{"ruleId":"454","severity":1,"message":"494","line":1,"column":28,"nodeType":"456","messageId":"457","endLine":1,"endColumn":36},{"ruleId":"454","severity":1,"message":"495","line":3,"column":16,"nodeType":"456","messageId":"457","endLine":3,"endColumn":24},{"ruleId":"454","severity":1,"message":"494","line":1,"column":17,"nodeType":"456","messageId":"457","endLine":1,"endColumn":25},{"ruleId":"454","severity":1,"message":"493","line":1,"column":17,"nodeType":"456","messageId":"457","endLine":1,"endColumn":26},{"ruleId":"454","severity":1,"message":"494","line":1,"column":28,"nodeType":"456","messageId":"457","endLine":1,"endColumn":36},{"ruleId":"468","severity":1,"message":"469","line":42,"column":13,"nodeType":"470","endLine":42,"endColumn":38},"no-native-reassign",["507"],"no-negated-in-lhs",["508"],"no-unused-vars","'Chat' is defined but never used.","Identifier","unusedVar",["507"],["508"],"'listCart' is assigned a value but never used.","'onChangeStar' is assigned a value but never used.","'onChangeComment' is assigned a value but never used.","'handlerComment' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["509"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Navigate' is defined but never used.","'success' is assigned a value but never used.","'isLogin' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'listCart'. Either include it or remove the dependency array.",["510"],"'sum_total' is assigned a value but never used.","'response' is assigned a value but never used.","'data' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'address', 'carts', 'email', 'fullName', 'phone', and 'success'. Either include them or remove the dependency array. You can also do a functional update 'setSuccess(s => ...)' if you only need 'success' in the 'setSuccess' call.",["511"],"React Hook useEffect has a missing dependency: 'idHistory'. Either include it or remove the dependency array.",["512"],"'Link' is defined but never used.","'ReactPaginate' is defined but never used.","'temp' is assigned a value but never used.","'redirect' is defined but never used.","'id_user' is assigned a value but never used.",["513"],"'idTemp' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["514"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'useEffect' is defined but never used.","'useState' is defined but never used.","'Redirect' is defined but never used.",["507"],["508"],["515"],"React Hook useEffect has a missing dependency: 'startTimer'. Either include it or remove the dependency array.",["516"],["517"],"'handlerReview' is assigned a value but never used.",["518"],["519"],["520"],["521"],"no-global-assign","no-unsafe-negation",{"desc":"522","fix":"523"},{"desc":"524","fix":"525"},{"desc":"526","fix":"527"},{"desc":"528","fix":"529"},{"desc":"530","fix":"531"},{"desc":"532","fix":"533"},{"desc":"530","fix":"534"},{"desc":"535","fix":"536"},{"desc":"522","fix":"537"},{"desc":"524","fix":"538"},{"desc":"526","fix":"539"},{"desc":"532","fix":"540"},{"desc":"528","fix":"541"},"Update the dependencies array to be: [id, load_comment]",{"range":"542","text":"543"},"Update the dependencies array to be: [checkPush, listCart]",{"range":"544","text":"545"},"Update the dependencies array to be: [address, carts, email, fullName, load, phone, success]",{"range":"546","text":"547"},"Update the dependencies array to be: [idHistory]",{"range":"548","text":"549"},"Update the dependencies array to be: [listCart, loadRedux]",{"range":"550","text":"551"},"Update the dependencies array to be: [fetchData, load]",{"range":"552","text":"553"},{"range":"554","text":"551"},"Update the dependencies array to be: [startTimer]",{"range":"555","text":"556"},{"range":"557","text":"543"},{"range":"558","text":"545"},{"range":"559","text":"547"},{"range":"560","text":"553"},{"range":"561","text":"549"},[3076,3090],"[id, load_comment]",[3455,3466],"[checkPush, listCart]",[5430,5436],"[address, carts, email, fullName, load, phone, success]",[596,598],"[idHistory]",[1300,1311],"[listCart, loadRedux]",[2222,2228],"[fetchData, load]",[1300,1311],[2592,2594],"[startTimer]",[3118,3132],[3593,3604],[5430,5436],[2222,2228],[596,598]]