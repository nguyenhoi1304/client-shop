[{"C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\index.js":"1","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\App.jsx":"2","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\store.js":"4","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\Layout\\DefaultLayout.jsx":"5","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\routes\\index.jsx":"6","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\Redux\\Reducer\\ReducerRoot.jsx":"7","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\Authentication\\SignUp.jsx":"8","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\Authentication\\SignIn.jsx":"9","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\components\\Footer\\Footer.jsx":"10","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\pages\\Shop\\Shop.jsx":"11","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\pages\\Cart\\Cart.jsx":"12","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\pages\\Detail\\Detail.jsx":"13","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\components\\Header\\Header.jsx":"14","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\pages\\Checkout\\Checkout.jsx":"15","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\pages\\History\\component\\MainHistory.jsx":"16","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\pages\\History\\component\\DetailHistory.jsx":"17","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\pages\\Contact\\Contact.jsx":"18","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\pages\\Blog\\Blog.jsx":"19","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\pages\\About\\About.jsx":"20","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\pages\\Home\\Home.jsx":"21","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\Redux\\Reducer\\ReducerCart.jsx":"22","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\Redux\\Reducer\\ReducerSession.jsx":"23","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\convertMoney.js":"24","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\Share\\img\\index.js":"25","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\Authentication\\LogoutLink.jsx":"26","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\Authentication\\Name.jsx":"27","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\Authentication\\LoginLink.jsx":"28","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\API\\CartAPI.jsx":"29","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\API\\MessengerAPI.jsx":"30","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\API\\UserAPI.jsx":"31","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\API\\CommentAPI.jsx":"32","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\API\\CheckoutAPI.jsx":"33","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\API\\ProductAPI.jsx":"34","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\Redux\\Action\\ActionSession.jsx":"35","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\Redux\\Action\\ActionCart.jsx":"36","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\API\\HistoryAPI.jsx":"37","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\pages\\Shop\\Component\\Search.jsx":"38","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\pages\\Shop\\Component\\SortProduct.jsx":"39","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\pages\\Shop\\Component\\Pagination.jsx":"40","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\pages\\Shop\\Component\\Products.jsx":"41","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\pages\\Cart\\Component\\ListCart.jsx":"42","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\Share\\img\\Image.jsx":"43","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\API\\NewsApi.jsx":"44","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\pages\\Home\\Component\\Clock.jsx":"45","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\pages\\Home\\Component\\Feedback.jsx":"46","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\pages\\Contact\\Map\\Map.jsx":"47","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\API\\axiosClient.jsx":"48","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\pages\\Shop\\Component\\IndexPage.jsx":"49"},{"size":685,"mtime":1716877191517,"results":"50","hashOfConfig":"51"},{"size":1047,"mtime":1704909204238,"results":"52","hashOfConfig":"51"},{"size":396,"mtime":1662556006000,"results":"53","hashOfConfig":"51"},{"size":153,"mtime":1662556006000,"results":"54","hashOfConfig":"51"},{"size":306,"mtime":1704908588001,"results":"55","hashOfConfig":"51"},{"size":1246,"mtime":1716877191520,"results":"56","hashOfConfig":"51"},{"size":249,"mtime":1704661483684,"results":"57","hashOfConfig":"51"},{"size":9316,"mtime":1715198544384,"results":"58","hashOfConfig":"51"},{"size":6261,"mtime":1715198531075,"results":"59","hashOfConfig":"51"},{"size":4108,"mtime":1716877191517,"results":"60","hashOfConfig":"51"},{"size":17873,"mtime":1720505109008,"results":"61","hashOfConfig":"51"},{"size":9697,"mtime":1704913301130,"results":"62","hashOfConfig":"51"},{"size":18417,"mtime":1704913447549,"results":"63","hashOfConfig":"51"},{"size":9642,"mtime":1720518363461,"results":"64","hashOfConfig":"51"},{"size":13395,"mtime":1704913346267,"results":"65","hashOfConfig":"51"},{"size":5537,"mtime":1704913699620,"results":"66","hashOfConfig":"51"},{"size":4364,"mtime":1704913677173,"results":"67","hashOfConfig":"51"},{"size":1116,"mtime":1716877191519,"results":"68","hashOfConfig":"51"},{"size":590,"mtime":1716929422332,"results":"69","hashOfConfig":"51"},{"size":3765,"mtime":1716877191518,"results":"70","hashOfConfig":"51"},{"size":28759,"mtime":1720518623222,"results":"71","hashOfConfig":"51"},{"size":2854,"mtime":1704757800796,"results":"72","hashOfConfig":"51"},{"size":469,"mtime":1704910094261,"results":"73","hashOfConfig":"51"},{"size":332,"mtime":1704907352357,"results":"74","hashOfConfig":"51"},{"size":550,"mtime":1704463028225,"results":"75","hashOfConfig":"51"},{"size":390,"mtime":1704637577433,"results":"76","hashOfConfig":"51"},{"size":1110,"mtime":1704637755239,"results":"77","hashOfConfig":"51"},{"size":598,"mtime":1720515965098,"results":"78","hashOfConfig":"51"},{"size":505,"mtime":1700239660882,"results":"79","hashOfConfig":"51"},{"size":419,"mtime":1662556006000,"results":"80","hashOfConfig":"51"},{"size":479,"mtime":1700025848713,"results":"81","hashOfConfig":"51"},{"size":307,"mtime":1662556006000,"results":"82","hashOfConfig":"51"},{"size":294,"mtime":1700561621221,"results":"83","hashOfConfig":"51"},{"size":482,"mtime":1662556006000,"results":"84","hashOfConfig":"51"},{"size":179,"mtime":1662556006000,"results":"85","hashOfConfig":"51"},{"size":335,"mtime":1662556006000,"results":"86","hashOfConfig":"51"},{"size":298,"mtime":1700569940935,"results":"87","hashOfConfig":"51"},{"size":1241,"mtime":1704713074766,"results":"88","hashOfConfig":"51"},{"size":774,"mtime":1704464277523,"results":"89","hashOfConfig":"51"},{"size":1969,"mtime":1704908055350,"results":"90","hashOfConfig":"51"},{"size":2179,"mtime":1704908058474,"results":"91","hashOfConfig":"51"},{"size":5834,"mtime":1704907421273,"results":"92","hashOfConfig":"51"},{"size":329,"mtime":1703656364973,"results":"93","hashOfConfig":"51"},{"size":180,"mtime":1704744246115,"results":"94","hashOfConfig":"51"},{"size":849,"mtime":1704906807803,"results":"95","hashOfConfig":"51"},{"size":1110,"mtime":1704906926117,"results":"96","hashOfConfig":"51"},{"size":763,"mtime":1716877191519,"results":"97","hashOfConfig":"51"},{"size":889,"mtime":1720508956518,"results":"98","hashOfConfig":"51"},{"size":1019,"mtime":1720505147446,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"7g4noo",{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"102"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"102"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"102"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"102"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"102"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"102"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"102"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\index.js",[],["206","207"],"C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\App.jsx",[],"C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\store.js",[],"C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\Layout\\DefaultLayout.jsx",[],"C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\routes\\index.jsx",[],"C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\Redux\\Reducer\\ReducerRoot.jsx",[],"C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\Authentication\\SignUp.jsx",["208","209"],"import React, { useState } from \"react\";\nimport { Link, Navigate, useNavigate } from \"react-router-dom\";\nimport UserAPI from \"../API/UserAPI\";\nimport \"./Auth.css\";\nimport queryString from \"query-string\";\nimport MessengerAPI from \"../API/MessengerAPI\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEnvelope, faLock, faPhone } from \"@fortawesome/free-solid-svg-icons\";\n\nSignUp.propTypes = {};\n\nfunction SignUp(props) {\n  const [fullname, setFullName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const [errorEmail, setEmailError] = useState(false);\n  const [emailRegex, setEmailRegex] = useState(false);\n  const [errorPassword, setPasswordError] = useState(false);\n  const [errorConfirmPassword, setConfirmPasswordError] = useState(false);\n  const [errorFullname, setFullnameError] = useState(false);\n  const [errorPhone, setPhoneError] = useState(false);\n\n  const [success, setSuccess] = useState(false);\n  const navigation = useNavigate();\n\n  const onChangeName = (e) => {\n    setFullName(e.target.value);\n  };\n\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const onChangePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const onChangeConfirmPassword = (e) => {\n    setConfirmPassword(e.target.value);\n  };\n\n  const onChangePhone = (e) => {\n    setPhone(e.target.value);\n  };\n\n  const handlerSignUp = (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setFullnameError(false);\n      setEmailError(false);\n      setPhoneError(false);\n      setPasswordError(false);\n      setConfirmPasswordError(true);\n      setEmailRegex(false);\n      return;\n    } else if (!fullname) {\n      setFullnameError(true);\n      setEmailError(false);\n      setPhoneError(false);\n      setPasswordError(false);\n      setEmailRegex(false);\n      setConfirmPasswordError(false);\n\n      return;\n    } else {\n      setFullnameError(false);\n      setPhoneError(false);\n      setPasswordError(false);\n      setFullnameError(false);\n      setEmailRegex(false);\n      setConfirmPasswordError(false);\n\n      if (!email) {\n        setFullnameError(false);\n        setEmailError(true);\n        setPhoneError(false);\n        setPasswordError(false);\n        setConfirmPasswordError(false);\n\n        return;\n      } else {\n        setEmailError(false);\n        setPhoneError(false);\n        setPasswordError(false);\n        setFullnameError(false);\n        setConfirmPasswordError(false);\n\n        if (!validateEmail(email)) {\n          setEmailRegex(true);\n          setFullnameError(false);\n          setEmailError(false);\n          setPhoneError(false);\n          setPasswordError(false);\n          setConfirmPasswordError(false);\n\n          return;\n        } else {\n          setEmailRegex(false);\n          if (!password) {\n            setFullnameError(false);\n            setEmailError(false);\n            setPhoneError(false);\n            setPasswordError(true);\n            setConfirmPasswordError(false);\n\n            return;\n          } else {\n            setFullnameError(false);\n            setPhoneError(false);\n            setPasswordError(false);\n            setFullnameError(false);\n            setEmailRegex(false);\n            setConfirmPasswordError(false);\n\n            if (!phone) {\n              setFullnameError(false);\n              setEmailError(false);\n              setPhoneError(true);\n              setPasswordError(false);\n              setConfirmPasswordError(false);\n            } else {\n              const fetchSignUp = async () => {\n                const body = JSON.stringify({\n                  fullname: fullname,\n                  email: email,\n                  password: password,\n                  phone: phone,\n                });\n\n                const res = await UserAPI.postSignUp(body);\n                res.message && alert(res.message);\n                if (res.isRegister) {\n                  alert(\"Tạo tài khoản thành công!\");\n                  navigation(\"/signin\");\n                }\n                console.log(res);\n                setSuccess(true);\n              };\n\n              fetchSignUp();\n\n              // Hàm này dùng để tạo các conversation cho user và admin\n              const fetchConversation = async () => {\n                const params = {\n                  email: email,\n                  password: password,\n                };\n\n                const query = \"?\" + queryString.stringify(params);\n\n                const response = await MessengerAPI.postConversation(query);\n                console.log(response);\n              };\n\n              fetchConversation();\n            }\n          }\n        }\n      }\n    }\n  };\n\n  function validateEmail(email) {\n    const re =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  return (\n    <div className=\"signup\">\n      <div className=\"limiter\">\n        <div className=\"container-login100\">\n          <div className=\"wrap-login100 p-l-55 p-r-55 p-t-65 p-b-50\">\n            <span className=\"login100-form-title p-b-33 text-light\">\n              Đăng ký\n            </span>\n            <div className=\"d-flex justify-content-center pb-5\">\n              {errorFullname && (\n                <span className=\"text-danger\">\n                  * Tên đầy đủ không được để trống!\n                </span>\n              )}\n              {errorEmail && (\n                <span className=\"text-danger\">\n                  * Vui lòng kiểm tra Email, Email không được để trống!\n                </span>\n              )}\n              {emailRegex && (\n                <span className=\"text-danger\">\n                  * Email của bạn không đúng định dạng\n                </span>\n              )}\n              {errorPassword && (\n                <span className=\"text-danger\">\n                  *Vui lòng kiểm tra lại password!\n                </span>\n              )}\n              {errorConfirmPassword && (\n                <span className=\"text-danger\">\n                  * Mật khẩu xác nhận không trùng khớp với mật khẩu!\n                </span>\n              )}\n              {errorPhone && (\n                <span className=\"text-danger\">\n                  * Vui lòng kiểm tra lại số điện thoại!\n                </span>\n              )}\n            </div>\n            <div className=\" validate-input inputbox\">\n              <input\n                className=\"input100\"\n                value={fullname}\n                onChange={onChangeName}\n                type=\"text\"\n              />\n              <label for=\"\" className=\"text-white \">\n                Tên đầy đủ\n              </label>\n            </div>\n\n            <div className=\"inputbox rs1 validate-input\">\n              <input\n                className=\"input100\"\n                value={email}\n                onChange={onChangeEmail}\n                type=\"email\"\n              />\n              <label for=\"\" className=\"text-white \">\n                Email <FontAwesomeIcon icon={faEnvelope} />\n              </label>\n            </div>\n\n            <div className=\"inputbox rs1 validate-input\">\n              <input\n                className=\"input100\"\n                value={password}\n                onChange={onChangePassword}\n                type=\"password\"\n                required\n              />\n              <label for=\"\" className=\"text-white \">\n                Mật khẩu <FontAwesomeIcon icon={faLock} />\n              </label>\n            </div>\n\n            <div className=\"inputbox rs1 validate-input\">\n              <input\n                className=\"input100\"\n                value={confirmPassword}\n                onChange={onChangeConfirmPassword}\n                type=\"password\"\n                required\n              />\n              <label for=\"\" className=\"text-white \">\n                Nhập lại mật khẩu <FontAwesomeIcon icon={faLock} />\n              </label>\n            </div>\n\n            <div className=\"inputbox rs1 validate-input\">\n              <input\n                className=\"input100\"\n                value={phone}\n                onChange={onChangePhone}\n                type=\"number\"\n              />\n              <label for=\"\" className=\"text-white \">\n                Số điện thoại <FontAwesomeIcon icon={faPhone} />\n              </label>\n            </div>\n\n            <div className=\"container-login100-form-btn m-t-20\">\n              <button\n                className=\"login100-form-btn text-info\"\n                onClick={handlerSignUp}\n              >\n                Đăng ký\n              </button>\n            </div>\n\n            <div className=\"text-center p-t-45 p-b-4\">\n              <span className=\"text-light font-weight-bold \">Đăng nhập?</span>\n              &nbsp;\n              <Link to=\"/signin\" className=\"txt2 hov1\">\n                Click\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SignUp;\n","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\Authentication\\SignIn.jsx",["210","211"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport UserAPI from \"../API/UserAPI\";\nimport { addSession } from \"../Redux/Action/ActionSession\";\nimport \"./Auth.css\";\nimport queryString from \"query-string\";\nimport CartAPI from \"../API/CartAPI\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEnvelope, faLock } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction SignIn(props) {\n  const navigation = useNavigate();\n  //listCart được lấy từ redux\n  const listCart = useSelector((state) => state.Cart.listCart);\n\n  const [email, setEmail] = useState(\"\");\n\n  const [password, setPassword] = useState(\"\");\n\n  const [user, setUser] = useState([]);\n\n  const [errorEmail, setErrorEmail] = useState(false);\n  const [emailRegex, setEmailRegex] = useState(false);\n  const [errorPassword, setErrorPassword] = useState(false);\n\n  const [redirect, setRedirect] = useState(false);\n\n  const [checkPush, setCheckPush] = useState(false);\n  const [isLogin, setIsLogin] = useState(false);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await UserAPI.getAllData();\n\n      setUser(response.data);\n    };\n\n    fetchData();\n  }, []);\n\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const onChangePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const onSubmit = () => {\n    if (!email) {\n      setErrorEmail(true);\n      return;\n    } else {\n      if (!password) {\n        setErrorEmail(false);\n        setErrorPassword(true);\n        return;\n      } else {\n        setErrorPassword(false);\n        if (!validateEmail(email)) {\n          setEmailRegex(true);\n          return;\n        } else {\n          setEmailRegex(false);\n\n          const fetchLogin = async () => {\n            const body = JSON.stringify({\n              email: email,\n              password: password,\n            });\n\n            const res = await UserAPI.postLogin(body);\n            console.log(res);\n            setIsLogin(res.isLogin);\n            setUser(res.user);\n            //Nhận về lỗi trả về khi mà không có dữ liệu được tìm thấy\n            if (typeof res !== undefined) {\n              setErrorEmail(res.invalidateUser);\n              setErrorPassword(res.invalidatePassword);\n            }\n\n            //login Thành công\n            if (res.isLogin) {\n              localStorage.setItem(\"id_user\", email);\n\n              localStorage.setItem(\"name_user\", user?.fullName);\n\n              const action = addSession(localStorage.getItem(\"id_user\"));\n              dispatch(action);\n\n              setCheckPush(true);\n\n              navigation(\"/\");\n            }\n          };\n\n          fetchLogin();\n        }\n      }\n    }\n  };\n\n  //Hàm này dùng để đưa hết tất cả carts vào API của user\n  useEffect(() => {\n    const fetchData = async () => {\n      //Lần đầu sẽ không thực hiện insert được vì addCart = ''\n      if (checkPush === true) {\n        for (let i = 0; i < listCart.length; i++) {\n          //Nó sẽ lấy idUser và idProduct và count cần thêm để gửi lên server\n          const params = {\n            idUser: localStorage.getItem(\"id_user\"),\n            idProduct: listCart[i].idProduct,\n            count: listCart[i].count,\n          };\n\n          const query = \"?\" + queryString.stringify(params);\n\n          const response = await CartAPI.postAddToCart(query);\n          console.log(response);\n        }\n\n        setRedirect(true);\n      }\n    };\n\n    fetchData();\n  }, [checkPush]);\n\n  function validateEmail(email) {\n    const re =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  return (\n    <div className=\"signin\">\n      <div className=\"limiter\">\n        <div className=\"container-login100\">\n          <div className=\"wrap-login100 p-l-55 p-r-55 p-t-65 p-b-50\">\n            <span className=\"login100-form-title p-b-33 text-white\">\n              Đăng nhập\n            </span>\n\n            <div className=\"d-flex justify-content-center pb-5\">\n              {emailRegex && (\n                <span className=\"text-danger\">* Incorrect Email Format</span>\n              )}\n              {errorEmail && (\n                <span className=\"text-danger\">* Please Check Your Email</span>\n              )}\n              {errorPassword && (\n                <span className=\"text-danger\">\n                  * Please Check Your Password\n                </span>\n              )}\n            </div>\n\n            <div className=\"inputbox\">\n              <input\n                type=\"email\"\n                className=\"input100\"\n                value={email}\n                onChange={onChangeEmail}\n              />\n              <label for=\"\" className=\"text-white \">\n                Email <FontAwesomeIcon icon={faEnvelope} />\n              </label>\n            </div>\n            <div className=\" inputbox rs1 validate-input\">\n              <input\n                className=\"input100\"\n                type=\"password\"\n                value={password}\n                onChange={onChangePassword}\n              />\n              <label for=\"\" className=\"text-light\">\n                Mật khẩu <FontAwesomeIcon icon={faLock} />\n              </label>\n            </div>\n\n            <div className=\"container-login100-form-btn m-t-20 \">\n              {redirect && <redirect to={`/`} />}\n              <button\n                className=\"login100-form-btn text-info\"\n                onClick={onSubmit}\n              >\n                Đăng nhập\n              </button>\n            </div>\n\n            <div className=\"text-center p-t-45 p-b-4\">\n              <span className=\"text-light font-weight-bold\">\n                Tạo tài khoản?\n              </span>\n              &nbsp;\n              <Link to=\"/signup\" className=\"txt2 hov1\">\n                Đăng ký\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SignIn;\n","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\components\\Footer\\Footer.jsx",[],"C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\pages\\Shop\\Shop.jsx",["212"],"C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\pages\\Cart\\Cart.jsx",["213","214","215","216"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport alertify from \"alertifyjs\";\nimport { Link, redirect, useNavigate } from \"react-router-dom\";\nimport queryString from \"query-string\";\nimport CartAPI from \"../../API/CartAPI\";\nimport { deleteCart, updateCart } from \"../../Redux/Action/ActionCart\";\nimport ListCart from \"./Component/ListCart\";\nimport ConvertMoney from \"../../convertMoney\";\nimport styles from \"./Cart.module.css\";\n\nfunction Cart(props) {\n  //id_user được lấy từ redux\n  const id_user = useSelector((state) => state.Cart.id_user);\n\n  //listCart được lấy từ redux\n  const listCart = useSelector((state) => state.Cart.listCart);\n\n  const [cart, setCart] = useState([]);\n\n  const [total, setTotal] = useState();\n\n  const dispatch = useDispatch();\n\n  const navigation = useNavigate();\n  //State dùng để Load dữ liệu từ Redux\n  const [loadRedux, setLoadRedux] = useState({\n    idProduct: \"\",\n    count: \"\",\n  });\n\n  //State dùng để Load dữ liệu từ API\n  const [loadAPI, setLoadAPI] = useState(false);\n\n  //Hàm này dùng để Load dữ liệu ở Redux\n  //Khi người dùng chưa đăng nhập\n  useEffect(() => {\n    const fetchDataRedux = () => {\n      if (!localStorage.getItem(\"id_user\")) {\n        setCart(listCart);\n\n        getTotal(listCart);\n      }\n    };\n\n    fetchDataRedux();\n  }, [loadRedux]);\n\n  //Hàm này dùng để tính tổng tiền carts\n  function getTotal(carts) {\n    let sub_total = 0;\n\n    const sum_total = carts.map((value) => {\n      return (sub_total +=\n        parseInt(value.priceProduct) * parseInt(value.count));\n    });\n\n    setTotal(sub_total);\n  }\n\n  //Hàm này dùng để load dữ liệu từ API\n  //Khi người dùng đã đăng nhập\n  useEffect(() => {\n    const fetchData = async () => {\n      if (localStorage.getItem(\"id_user\")) {\n        const params = {\n          idUser: localStorage.getItem(\"id_user\"),\n        };\n\n        const query = \"?\" + queryString.stringify(params);\n\n        const response = await CartAPI.getCarts(query);\n\n        setCart(response);\n\n        getTotal(response);\n      }\n    };\n\n    fetchData();\n\n    setLoadAPI(false);\n  }, [loadAPI]);\n\n  //Hàm này dùng để truyền xuống cho component con xử và trả ngược dữ liệu lại component cha\n  const onDeleteCart = (getUser, getProduct) => {\n    console.log(\"idUser: \" + getUser + \", idProduct: \" + getProduct);\n\n    const isDelete = window.confirm(\"Bạn có chắc chắn muốn xóa sản phẩm này?\");\n\n    if (isDelete) {\n      if (localStorage.getItem(\"id_user\")) {\n        // user đã đăng nhập\n\n        //Sau khi nhận được dữ liệu ở component con truyền lên thì sẽ gọi API xử lý dữ liệu\n        const fetchDelete = async () => {\n          const params = {\n            idUser: getUser,\n            idProduct: getProduct,\n          };\n\n          const query = \"?\" + queryString.stringify(params);\n\n          const response = await CartAPI.deleteToCart(query);\n          console.log(response);\n        };\n\n        fetchDelete();\n\n        //Sau đó thay đổi state loadAPI và load lại hàm useEffect\n        setLoadAPI(true);\n\n        alertify.set(\"notifier\", \"position\", \"bottom-left\");\n        alertify.error(\"Bạn Đã Xóa Hàng Thành Công!\");\n      } else {\n        // user chưa đăng nhập\n\n        //Nếu không có phiên làm việc của Session User thì mình sẽ xử lý với Redux\n        const data = {\n          idProduct: getProduct,\n          idUser: getUser,\n        };\n\n        //Đưa dữ liệu vào Redux\n        const action = deleteCart(data);\n        dispatch(action);\n\n        alertify.set(\"notifier\", \"position\", \"bottom-left\");\n        alertify.error(\"Bạn Đã Xóa Hàng Thành Công!\");\n\n        //set state loadRedux để nó load lại hàm useEffect để tiếp tục lấy dữ liệu từ redux\n        setLoadRedux({\n          idProduct: getProduct,\n          count: \"\",\n        });\n      }\n    } else {\n      return;\n    }\n  };\n\n  //Hàm này dùng để truyền xuống cho component con xử và trả ngược dữ liệu lại component cha\n  const onUpdateCount = (getUser, getProduct, getCount) => {\n    console.log(\n      \"Count: \" +\n        getCount +\n        \", idUser: \" +\n        getUser +\n        \", idProduct: \" +\n        getProduct\n    );\n\n    if (localStorage.getItem(\"id_user\")) {\n      // user đã đăng nhập\n\n      //Sau khi nhận được dữ liệu ở component con truyền lên thì sẽ gọi API xử lý dữ liệu\n      const fetchPut = async () => {\n        const data = {\n          idUser: getUser,\n          idProduct: getProduct,\n          count: getCount,\n        };\n\n        const body = JSON.stringify(data);\n\n        const response = await CartAPI.putToCart(body);\n        console.log(response);\n      };\n\n      fetchPut();\n\n      //Sau đó thay đổi state loadAPI và load lại hàm useEffect\n      setLoadAPI(true);\n\n      console.log(\"Ban Da Dang Nhap!\");\n\n      alertify.set(\"notifier\", \"position\", \"bottom-left\");\n      alertify.success(\"Bạn Đã Sửa Hàng Thành Công!\");\n    } else {\n      //Nếu không có phiên làm việc của Session User thì mình sẽ xử lý với Redux\n      const data = {\n        idProduct: getProduct,\n        idUser: getUser,\n        count: getCount,\n      };\n\n      //Đưa dữ liệu vào Redux\n      const action = updateCart(data);\n      dispatch(action);\n\n      alertify.set(\"notifier\", \"position\", \"bottom-left\");\n      alertify.success(\"Bạn Đã Sửa Hàng Thành Công!\");\n\n      //set state loadRedux để nó load lại hàm useEffect để tiếp tục lấy dữ liệu từ redux\n      setLoadRedux({\n        idProduct: getProduct,\n        count: getCount,\n      });\n    }\n  };\n\n  //Hàm này dùng để redirect đến page checkout\n\n  const onCheckout = () => {\n    if (!localStorage.getItem(\"id_user\")) {\n      alertify.set(\"notifier\", \"position\", \"bottom-left\");\n      alertify.error(\"Vui Lòng Kiểm Tra Lại Đăng Nhập!\");\n      return;\n    }\n\n    if (cart.length === 0) {\n      alertify.set(\"notifier\", \"position\", \"bottom-left\");\n      alertify.error(\"Vui Lòng Kiểm Tra Lại Giỏ Hàng!\");\n      return;\n    }\n    navigation(\"/checkout\");\n  };\n\n  return (\n    <div className={styles.cart}>\n      <div className=\"container\">\n        <section className=\"py-5 bg-light\">\n          <div className=\"container\">\n            <div className=\"row px-4 px-lg-5 py-lg-4 align-items-center\">\n              <div className=\"col-lg-6\">\n                <h1 className=\"h2 text-uppercase mb-0\">Cart</h1>\n              </div>\n              <div className=\"col-lg-6 text-lg-right\">\n                <nav aria-label=\"breadcrumb\">\n                  <ol className=\"breadcrumb justify-content-lg-end mb-0 px-0\">\n                    <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                      Cart\n                    </li>\n                  </ol>\n                </nav>\n              </div>\n            </div>\n          </div>\n        </section>\n        <section className=\"py-5\">\n          <h2 className=\"h5 text-uppercase mb-4\">Giỏ mua sắm</h2>\n          <div className=\"row\">\n            <div className=\"col-lg-8 mb-4 mb-lg-0\">\n              <ListCart\n                listCart={cart}\n                onDeleteCart={onDeleteCart}\n                onUpdateCount={onUpdateCount}\n              />\n\n              <div className=\"bg-light px-4 py-3\">\n                <div className=\"row align-items-center text-center\">\n                  <div className=\"col-md-6 mb-3 mb-md-0 text-md-left\">\n                    <Link\n                      className=\"btn btn-link p-0 text-dark btn-sm\"\n                      to={`/shop`}\n                    >\n                      <i className=\"fas fa-long-arrow-alt-left mr-2\"> </i>\n                      Tiếp tục xem sản phẩm\n                    </Link>\n                  </div>\n                  <div className=\"col-md-6 text-md-right\">\n                    <span\n                      className=\"btn btn-outline-dark btn-sm\"\n                      onClick={onCheckout}\n                    >\n                      Thanh toán\n                      <i className=\"fas fa-long-arrow-alt-right ml-2\"></i>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-lg-4\">\n              <div className=\"card border-0 rounded-0 p-lg-4 bg-light\">\n                <div className=\"card-body\">\n                  <h5 className=\"text-uppercase mb-4\">Tổng trong giỏ hàng</h5>\n                  <ul className=\"list-unstyled mb-0\">\n                    <li className=\"d-flex align-items-center justify-content-between\">\n                      <strong className=\"text-uppercase small font-weight-bold\">\n                        Tổng phụ chi\n                      </strong>\n                      <span className=\"text-muted small\">\n                        {ConvertMoney(total)} VND\n                      </span>\n                    </li>\n                    <li className=\"border-bottom my-2\"></li>\n                    <li className=\"d-flex align-items-center justify-content-between mb-4\">\n                      <strong className=\"text-uppercase small font-weight-bold\">\n                        Tổng\n                      </strong>\n                      <span>{ConvertMoney(total)} VND</span>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n}\n\nexport default Cart;\n","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\pages\\Detail\\Detail.jsx",["217","218","219","220","221","222"],"import React, { useEffect, useState } from \"react\";\nimport ProductAPI from \"../../API/ProductAPI\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport alertify from \"alertifyjs\";\nimport { addCart } from \"../../Redux/Action/ActionCart\";\nimport CartAPI from \"../../API/CartAPI\";\nimport queryString from \"query-string\";\nimport CommentAPI from \"../../API/CommentAPI\";\nimport convertMoney from \"../../convertMoney\";\nimport styles from \"./Detail.module.css\";\nimport Header from \"../../components/Header/Header\";\nimport Footer from \"../../components/Footer/Footer\";\n\nfunction Detail(props) {\n  const dispatch = useDispatch();\n  const [size, setSize] = useState([]);\n\n  const [detail, setDetail] = useState({});\n  //id params cho từng sản phẩm\n  const { id } = useParams();\n\n  //id_user được lấy từ redux\n  const id_user = useSelector((state) => state.Cart.id_user);\n\n  //listCart được lấy từ redux\n  const listCart = useSelector((state) => state.Cart.listCart);\n\n  const [product, setProduct] = useState([]);\n\n  const [star, setStar] = useState(1);\n\n  const [comment, setComment] = useState(\"\");\n\n  // id_user đã đăng nhập\n  const idUser = useSelector((state) => state.Session.idUser);\n\n  // Listcomment\n  const [list_comment, set_list_comment] = useState([]);\n\n  // state này dùng để load lại comment khi user gửi comment lên\n  const [load_comment, set_load_comment] = useState(false);\n\n  // Hàm này dùng để lấy dữ liệu comment\n  // Hàm này sẽ chạy lại phụ thuộc vào id Param\n  useEffect(() => {\n    const fetchData = async () => {\n      const params = {\n        idProduct: id,\n      };\n\n      const query = \"?\" + queryString.stringify(params);\n\n      const response = await CommentAPI.getCommentProduct(query);\n      console.log(response);\n\n      set_list_comment(response);\n    };\n\n    fetchData();\n  }, [id]);\n\n  // Hàm thay đổi sao đánh giá\n  const onChangeStar = (e) => {\n    setStar(e.target.value);\n  };\n\n  // Hàm thay đổi comment\n  const onChangeComment = (e) => {\n    setComment(e.target.value);\n  };\n\n  // Hàm này dùng để bình luận\n  const handlerComment = () => {\n    if (idUser === \"\") {\n      alertify.set(\"notifier\", \"position\", \"bottom-left\");\n      alertify.error(\"Vui Lòng Kiểm Tra Đăng Nhập!\");\n      return;\n    }\n\n    const fetchSendComment = async () => {\n      const params = {\n        idProduct: id,\n        idUser: localStorage.getItem(\"id_user\"),\n        fullname: localStorage.getItem(\"name_user\"),\n        content: comment,\n        star: star,\n      };\n\n      const query = \"?\" + queryString.stringify(params);\n\n      const response = await CommentAPI.postCommentProduct(query);\n      console.log(response);\n\n      set_load_comment(true);\n    };\n\n    fetchSendComment();\n\n    setComment(\"\");\n  };\n\n  // Hàm này dùng để load lại dữ liệu comment\n  // Phụ thuộc vào state load_comment\n  useEffect(() => {\n    if (load_comment) {\n      const fetchData = async () => {\n        const params = {\n          idProduct: id,\n        };\n\n        const query = \"?\" + queryString.stringify(params);\n\n        const response = await CommentAPI.getCommentProduct(query);\n        console.log(response);\n\n        set_list_comment(response);\n      };\n\n      fetchData();\n\n      set_load_comment(false);\n    }\n  }, [load_comment]);\n\n  //Hàm này gọi API và cắt chỉ lấy 4 sản phẩm\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await ProductAPI.getAPI();\n      const data = response;\n      setProduct(data);\n    };\n\n    fetchData();\n  }, []);\n\n  //Phần này là để thay đổi số lượng khi mua sản phẩm\n  const [text, setText] = useState(1);\n  const onChangeText = (e) => {\n    setText(e.target.value);\n  };\n\n  //Tăng lên 1 đơn vị\n  const upText = () => {\n    const value = parseInt(text) + 1;\n\n    setText(value);\n  };\n\n  //Giảm 1 đơn vị\n  const downText = () => {\n    const value = parseInt(text) - 1;\n\n    if (value === 0) return;\n\n    setText(value);\n  };\n\n  //Hàm này để lấy dữ liệu chi tiết sản phẩm\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await ProductAPI.getDetail(id);\n      console.log(response);\n      setDetail(response);\n    };\n\n    fetchData();\n  }, [id]);\n\n  //Phần này dùng để xem review hay description\n  const [review, setReview] = useState(\"description\");\n\n  const handlerReview = (value) => {\n    setReview(value);\n  };\n\n  //Hàm này là Thêm Sản Phẩm\n  const addToCart = () => {\n    //khi người dùng vẫn bấm nút đặt hàng dù đã hết hàng ,Kiểm tra số lượng sản phẩm trong kho mà = 0 thì hiển thị thông báo\n    if (detail.count === 0) {\n      alert(\n        \"Rất tiếc, sản phẩm này hiện không tồn tại. Hãy chọn một phương thức kết hợp khác.\"\n      );\n      return;\n    }\n    if (text > detail.count) {\n      alert(\n        \"kiểm tra lại số lượng đặt , vượt quá số lượng có của chúng tôi! Vui lòng đặt lại\"\n      );\n      return;\n    }\n    let id_user_cart = \"\";\n\n    if (localStorage.getItem(\"id_user\")) {\n      id_user_cart = localStorage.getItem(\"id_user\");\n      console.log(id_user_cart);\n    } else {\n      id_user_cart = id_user;\n    }\n\n    const data = {\n      idUser: id_user_cart,\n      idProduct: detail._id,\n      nameProduct: detail.name,\n      priceProduct: detail.price,\n      count: text,\n      img: detail.img1,\n    };\n\n    if (localStorage.getItem(\"id_user\")) {\n      console.log(\"Bạn Đã Đăng Nhập!\");\n\n      const fetchPost = async () => {\n        const dataBody = {\n          idUser: id_user_cart, //localStorage.getItem('id_user')\n          idProduct: detail._id, // Lấy idProduct\n          count: text, // Lấy số lượng\n        };\n\n        const body = JSON.stringify(dataBody);\n\n        const response = await CartAPI.postAddToCart(body);\n\n        setSize([...size, response]);\n        console.log(response);\n      };\n\n      fetchPost();\n    } else {\n      const action = addCart(data);\n      dispatch(action);\n    }\n\n    alertify.set(\"notifier\", \"position\", \"bottom-left\");\n    alertify.success(\"Bạn Đã Thêm Hàng Thành Công!\");\n  };\n\n  return (\n    <div className={styles.detail}>\n      <Header size={size.length} />\n      <section className=\"py-5\">\n        <div className=\"container\">\n          <div className=\"row mb-5\">\n            <div className=\"col-lg-6\">\n              <div className=\"row m-sm-0\">\n                <div className=\"col-sm-2 p-sm-0 order-sm-1 mt-2 mt-sm-0\">\n                  <div\n                    className=\"owl-thumbs d-flex flex-row flex-sm-column\"\n                    data-slider-id=\"1\"\n                  >\n                    <div className=\"owl-thumb-item flex-fill mb-3 mr-2 mr-sm-0\">\n                      <img\n                        className=\"w-100 bg-white\"\n                        src={detail.img1}\n                        alt=\"...\"\n                      />\n                    </div>\n                    <div className=\"owl-thumb-item flex-fill mb-3 mr-2 mr-sm-0\">\n                      <img\n                        className=\"w-100 bg-white\"\n                        src={detail.img2}\n                        alt=\"...\"\n                      />\n                    </div>\n                    <div className=\"owl-thumb-item flex-fill mb-3 mr-2 mr-sm-0\">\n                      <img\n                        className=\"w-100 bg-white\"\n                        src={detail.img3}\n                        alt=\"...\"\n                      />\n                    </div>\n                    <div className=\"owl-thumb-item flex-fill mb-3 mr-2 mr-sm-0\">\n                      <img\n                        className=\"w-100 bg-white\"\n                        src={detail.img4}\n                        alt=\"...\"\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div\n                  id=\"carouselExampleControls\"\n                  className=\"carousel slide col-sm-10 order-1 order-sm-2\"\n                  data-ride=\"carousel\"\n                >\n                  <div className=\"carousel-inner owl-carousel product-slider\">\n                    <div className=\"carousel-item active\">\n                      <img\n                        className={styles.product_img_carousel}\n                        src={detail.img1}\n                        alt=\"First slide\"\n                      />\n                    </div>\n                    <div className=\"carousel-item\">\n                      <img\n                        className={styles.product_img_carousel}\n                        src={detail.img2}\n                        alt=\"Second slide\"\n                      />\n                    </div>\n                    <div className=\"carousel-item\">\n                      <img\n                        className={styles.product_img_carousel}\n                        src={detail.img3}\n                        alt=\"Third slide\"\n                      />\n                    </div>\n                    <div className=\"carousel-item\">\n                      <img\n                        className={styles.product_img_carousel}\n                        src={detail.img4}\n                        alt=\"Third slide\"\n                      />\n                    </div>\n                  </div>\n                  <a\n                    className=\"carousel-control-prev \"\n                    href=\"#carouselExampleControls\"\n                    role=\"button\"\n                    data-slide=\"prev\"\n                  >\n                    <span\n                      className=\"carousel-control-prev-icon bg-dark\"\n                      aria-hidden=\"true\"\n                    ></span>\n                    <span className=\"sr-only\">Previous</span>\n                  </a>\n                  <a\n                    className=\"carousel-control-next\"\n                    href=\"#carouselExampleControls\"\n                    role=\"button\"\n                    data-slide=\"next\"\n                  >\n                    <span\n                      className=\"carousel-control-next-icon  bg-dark\"\n                      aria-hidden=\"true\"\n                    ></span>\n                    <span className=\"sr-only\">Next</span>\n                  </a>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-lg-6\">\n              <br></br>\n              <h1>{detail.name}</h1>\n              <br></br>\n              <p className=\"text-muted lead\">\n                {convertMoney(detail.price)} VND\n              </p>\n              <br></br>\n              <p className=\"text-small mb-4\">{detail.short_desc}</p>\n              <ul className=\"list-unstyled small d-inline-block\">\n                <strong>{detail.count} sản phẩm có sẵn</strong>\n                <li className=\"mb-3 bg-white text-muted\">\n                  <strong className=\"text-uppercase text-dark\">\n                    Category:\n                  </strong>\n                  <span className=\"reset-anchor ml-2\">{detail.category}s</span>\n                </li>\n              </ul>\n              <div className=\"row align-items-stretch mb-4\">\n                <div className=\"col-sm-5 pr-sm-0\">\n                  <div className=\"border d-flex align-items-center justify-content-between py-1 px-3 bg-white border-white\">\n                    <span className=\"small text-uppercase text-gray mr-4 no-select\">\n                      Số lượng\n                    </span>\n                    <div className=\"quantity\">\n                      <button\n                        className=\"dec-btn p-0\"\n                        style={{ cursor: \"pointer\" }}\n                      >\n                        <i className=\"fas fa-caret-left\" onClick={downText}></i>\n                      </button>\n                      <input\n                        className=\"form-control border-0 shadow-0 p-0\"\n                        type=\"text\"\n                        value={text}\n                        onChange={onChangeText}\n                      />\n                      <button\n                        className=\"inc-btn p-0\"\n                        style={{ cursor: \"pointer\" }}\n                      >\n                        <i className=\"fas fa-caret-right\" onClick={upText}></i>\n                      </button>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-sm-3 pl-sm-0\">\n                  <span\n                    className=\"btn btn-dark btn-sm btn-block d-flex align-items-center justify-content-center px-0 text-white\"\n                    onClick={addToCart}\n                  >\n                    Thêm vào giỏ\n                  </span>\n                </div>\n                <br></br>\n                <br></br>\n              </div>\n            </div>\n          </div>\n          {/* <div className='form-group'>\n  \t\t\t\t\t<label htmlFor='exampleFormControlTextarea1'>Comment:</label>\n  \t\t\t\t\t<textarea\n  \t\t\t\t\t\tclassName='form-control'\n  \t\t\t\t\t\trows='3'\n  \t\t\t\t\t\tonChange={onChangeComment}\n  \t\t\t\t\t\tvalue={comment}></textarea>\n  \t\t\t\t</div> */}\n          {/* <div className='d-flex justify-content-between'>\n  \t\t\t\t\t<div className='d-flex w-25'>\n  \t\t\t\t\t\t<span className='mt-2'>Evaluate: </span>\n  \t\t\t\t\t\t&nbsp; &nbsp;\n  \t\t\t\t\t\t<input\n  \t\t\t\t\t\t\tclassName='form-control w-25'\n  \t\t\t\t\t\t\ttype='number'\n  \t\t\t\t\t\t\tmin='1'\n  \t\t\t\t\t\t\tmax='5'\n  \t\t\t\t\t\t\tvalue={star}\n  \t\t\t\t\t\t\tonChange={onChangeStar}\n  \t\t\t\t\t\t/>\n  \t\t\t\t\t\t&nbsp; &nbsp;\n  \t\t\t\t\t\t<span className='mt-2'>Star</span>\n  \t\t\t\t\t</div>\n  \t\t\t\t\t<div>\n  \t\t\t\t\t\t<a\n  \t\t\t\t\t\t\tclassName='btn btn-dark btn-sm btn-block px-0 text-white'\n  \t\t\t\t\t\t\tstyle={{ width: '12rem' }}\n  \t\t\t\t\t\t\tonClick={handlerComment}>\n  \t\t\t\t\t\t\tSend\n  \t\t\t\t\t\t</a>\n  \t\t\t\t\t</div>\n  \t\t\t\t</div> */}\n          <br />\n\n          <div className=\"tab-content mb-5\">\n            {review === \"description\" ? (\n              <div className=\"tab-pane fade show active\">\n                <div className=\"pt-4 pb-4 bg-white\">\n                  <h6 className=\"text-uppercase\">Mô tả chi tiết sản phẩm </h6>\n                  <br></br>\n                  <p\n                    className=\"text-muted text-small mb-0\"\n                    style={{ whiteSpace: \"pre-wrap\" }}\n                  >\n                    {detail.long_desc}\n                  </p>\n                </div>\n              </div>\n            ) : (\n              <div className=\"tab-pane fade show active\">\n                <div className=\"p-4 p-lg-5 bg-white\">\n                  <div className=\"row\">\n                    <div className=\"col-lg-8\">\n                      {list_comment &&\n                        list_comment.map((value) => (\n                          <div className=\"media mb-3\" key={value._id}>\n                            <img\n                              className=\"rounded-circle\"\n                              src=\"https://img.icons8.com/color/36/000000/administrator-male.png\"\n                              alt=\"\"\n                              width=\"50\"\n                            />\n                            <div className=\"media-body ml-3\">\n                              <h6 className=\"mb-0 text-uppercase\">\n                                {value.fullname}\n                              </h6>\n                              <p className=\"small text-muted mb-0 text-uppercase\">\n                                dd/mm/yyyy\n                              </p>\n                              <ul className=\"list-inline mb-1 text-xs\">\n                                <li className=\"list-inline-item m-0\">\n                                  <i className={value.star1}></i>\n                                </li>\n                                <li className=\"list-inline-item m-0\">\n                                  <i className={value.star2}></i>\n                                </li>\n                                <li className=\"list-inline-item m-0\">\n                                  <i className={value.star3}></i>\n                                </li>\n                                <li className=\"list-inline-item m-0\">\n                                  <i className={value.star4}></i>\n                                </li>\n                                <li className=\"list-inline-item m-0\">\n                                  <i className={value.star5}></i>\n                                </li>\n                              </ul>\n                              <p className=\"text-small mb-0 text-muted\">\n                                {value.content}\n                              </p>\n                            </div>\n                          </div>\n                        ))}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n          <h2 className=\"h5 text-uppercase mb-4\">Sản phẩm tương tự</h2>\n          <div className=\"row\">\n            {product &&\n              product\n                .filter(\n                  (el) =>\n                    el.category === detail.category && el._id !== detail._id\n                )\n                .map((value) => (\n                  <div className=\"col-lg-3 col-sm-6\" key={value._id}>\n                    <div className=\"product text-center skel-loader\">\n                      <div className=\"d-block mb-3 position-relative\">\n                        <Link\n                          className=\"reset-anchor\"\n                          to={`/detail/${value._id}`}\n                          onClick={window.scrollTo(0, 0)}\n                        >\n                          <img\n                            className={styles.product_img}\n                            src={value.img1}\n                            alt=\"...\"\n                          />\n                        </Link>\n\n                        <div className=\"product-overlay\">\n                          <ul className=\"mb-0 list-inline\"></ul>\n                        </div>\n                      </div>\n                      <h6>{value.name}</h6>\n                      <p className=\"small text-muted\">\n                        {convertMoney(value.price)} VND\n                      </p>\n                    </div>\n                  </div>\n                ))}\n          </div>\n        </div>\n      </section>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Detail;\n","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\components\\Header\\Header.jsx",["223"],"C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\pages\\Checkout\\Checkout.jsx",["224","225","226","227","228"],"import React, { useEffect, useState } from \"react\";\nimport queryString from \"query-string\";\nimport CartAPI from \"../../API/CartAPI\";\nimport CheckoutAPI from \"../../API/CheckoutAPI\";\nimport convertMoney from \"../../convertMoney\";\nimport \"./Checkout.css\";\n\n// import io from \"socket.io-client\";\n// const socket = io.connect(\"http://localhost:5000\");\n// const socket = io.connect(\"https://backend-shop-rzlv.onrender.com\");\n\nfunction Checkout(props) {\n  const [carts, setCarts] = useState([]);\n\n  const [total, setTotal] = useState(0);\n\n  const [fullName, setFullName] = useState(\"\");\n  const [fullnameError, setFullnameError] = useState(false);\n\n  const [email, setEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(false);\n\n  const [emailRegex, setEmailRegex] = useState(false);\n\n  const [phone, setPhone] = useState(\"\");\n  const [phoneError, setPhoneError] = useState(false);\n\n  const [address, setAddress] = useState(\"\");\n  const [addressError, setAddressError] = useState(false);\n\n  const [success, setSuccess] = useState(false);\n\n  const [load, setLoad] = useState(false);\n\n  //Hàm này dùng để gọi API và render số sản phẩm\n  useEffect(() => {\n    if (localStorage.getItem(\"id_user\")) {\n      const fetchData = async () => {\n        const params = {\n          idUser: localStorage.getItem(\"id_user\"),\n        };\n\n        const query = \"?\" + queryString.stringify(params);\n\n        const response = await CartAPI.getCarts(query);\n\n        console.log(response);\n\n        setCarts(response);\n\n        getTotal(response);\n\n        if (response.length === 0) {\n          window.location.replace(\"/cart\");\n        }\n      };\n\n      fetchData();\n    }\n  }, []);\n\n  //Hàm này dùng để tính tổng tiền carts\n  function getTotal(carts) {\n    let sub_total = 0;\n\n    const sum_total = carts.map((value) => {\n      return (sub_total +=\n        parseInt(value.priceProduct) * parseInt(value.count));\n    });\n\n    setTotal(sub_total);\n  }\n\n  //Check Validation\n  const handlerSubmit = () => {\n    if (!fullName) {\n      setFullnameError(true);\n      setEmailError(false);\n      setPhoneError(false);\n      setAddressError(false);\n      return;\n    } else {\n      if (!email) {\n        setFullnameError(false);\n        setEmailError(true);\n        setPhoneError(false);\n        setAddressError(false);\n        return;\n      } else {\n        setPhoneError(false);\n        setAddressError(false);\n        setFullnameError(false);\n\n        if (!validateEmail(email)) {\n          setEmailRegex(true);\n          setFullnameError(false);\n          setEmailError(false);\n          setPhoneError(false);\n          setAddressError(false);\n          return;\n        } else {\n          setEmailRegex(false);\n\n          if (!phone) {\n            setFullnameError(false);\n            setEmailError(false);\n            setPhoneError(true);\n            setAddressError(false);\n            return;\n          } else {\n            setFullnameError(false);\n            setEmailError(false);\n            setPhoneError(false);\n            setAddressError(false);\n\n            if (!address) {\n              setFullnameError(false);\n              setEmailError(false);\n              setPhoneError(false);\n              setAddressError(true);\n            } else {\n              const fetchCheckout = async () => {\n                console.log(total);\n                const product = carts?.map((item) => ({\n                  idProduct: item.idProduct,\n                  quantity: item.count,\n                }));\n\n                const body = JSON.stringify({\n                  idUser: localStorage.getItem(\"id_user\"),\n                  products: product,\n                  total,\n                  fullName,\n                  phone,\n                  address,\n                  delivery: \"Pending\",\n                  status: \"Completed\",\n                });\n\n                const response = await CheckoutAPI.placeOrder(body);\n                console.log(response);\n                if (response.message === \"Success\") {\n                  // Xóa các sản phẩm trong cart\n                  for (let i = 0; i < carts.length; i++) {\n                    const params = {\n                      idUser: carts[i].idUser,\n                      idProduct: carts[i].idProduct,\n                    };\n                    const query = \"?\" + queryString.stringify(params);\n                    const response = await CartAPI.deleteToCart(query);\n                  }\n                }\n              };\n\n              fetchCheckout();\n\n              console.log(\"Thanh Cong\");\n              setLoad(!load);\n            }\n          }\n        }\n      }\n    }\n  };\n\n  //Hàm này bắt đầu gửi Email xác nhận đơn hàng\n  useEffect(() => {\n    if (load) {\n      const sendMail = async () => {\n        const data = {\n          idUser: localStorage.getItem(\"id_user\"),\n          to: email,\n          fullName: fullName,\n          phone: parseInt(phone),\n          address: address,\n          productArr: carts,\n        };\n\n        const body = JSON.stringify(data);\n\n        const response = await CheckoutAPI.postEmail(body);\n\n        console.log(response);\n      };\n\n      sendMail();\n\n      const data = localStorage.getItem(\"id_user\");\n\n      // Gửi socket lên server\n      // socket.emit(\"send_order\", data);\n\n      //Dùng setTimeout delay 3s\n      //Sau 4s nó sẽ thực hiện\n      setTimeout(() => {\n        setSuccess(!success);\n        setLoad(!load);\n      }, 4000);\n    }\n  }, [load]);\n\n  const onChangeName = (e) => {\n    setFullName(e.target.value);\n  };\n\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const onChangePhone = (e) => {\n    setPhone(e.target.value);\n  };\n\n  const onChangeAddress = (e) => {\n    setAddress(e.target.value);\n  };\n\n  function validateEmail(email) {\n    const re =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  return (\n    <div className=\"checkout\">\n      {load && (\n        <div className=\"wrapper_loader\">\n          <div className=\"loader\"></div>\n        </div>\n      )}\n\n      <div className=\"container\">\n        <section className=\"py-5 bg-light\">\n          <div className=\"container\">\n            <div className=\"row px-4 px-lg-5 py-lg-4 align-items-center\">\n              <div className=\"col-lg-6\">\n                <h1 className=\"h2 text-uppercase mb-0\">Checkout</h1>\n              </div>\n              <div className=\"col-lg-6 text-lg-right\">\n                <nav aria-label=\"breadcrumb\">\n                  <ol className=\"breadcrumb justify-content-lg-end mb-0 px-0\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"index.html\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"cart.html\">Cart</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                      Checkout\n                    </li>\n                  </ol>\n                </nav>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {!success && (\n          <section className=\"py-5\">\n            <h2 className=\"h5 text-uppercase mb-4\">Billing details</h2>\n            <div className=\"row\">\n              <div className=\"col-lg-8\">\n                <form>\n                  <div className=\"row\">\n                    <div className=\"col-lg-12 form-group\">\n                      <label\n                        className=\"text-small text-uppercase\"\n                        htmlFor=\"Fullname\"\n                      >\n                        Full Name:\n                      </label>\n                      <input\n                        className=\"form-control form-control-lg\"\n                        value={fullName}\n                        onChange={onChangeName}\n                        type=\"text\"\n                        placeholder=\"Enter Your Full Name Here!\"\n                      />\n                      {fullnameError && (\n                        <span className=\"text-danger\">\n                          * Please Check Your Full Name!\n                        </span>\n                      )}\n                    </div>\n                    <div className=\"col-lg-12 form-group\">\n                      <label\n                        className=\"text-small text-uppercase\"\n                        htmlFor=\"Email\"\n                      >\n                        Email:{\" \"}\n                      </label>\n                      <input\n                        className=\"form-control form-control-lg\"\n                        value={email}\n                        onChange={onChangeEmail}\n                        type=\"text\"\n                        placeholder=\"Enter Your Email Here!\"\n                      />\n                      {emailError && (\n                        <span className=\"text-danger\">\n                          * Please Check Your Email!\n                        </span>\n                      )}\n                      {emailRegex && (\n                        <span className=\"text-danger\">\n                          * Incorrect Email Format\n                        </span>\n                      )}\n                    </div>\n                    <div className=\"col-lg-12 form-group\">\n                      <label\n                        className=\"text-small text-uppercase\"\n                        htmlFor=\"Phone\"\n                      >\n                        Phone Number:{\" \"}\n                      </label>\n                      <input\n                        className=\"form-control form-control-lg\"\n                        value={phone}\n                        onChange={onChangePhone}\n                        type=\"number\"\n                        placeholder=\"Enter Your Phone Number Here!\"\n                      />\n                      {phoneError && (\n                        <span className=\"text-danger\">\n                          * Please Check Your Phone Number!\n                        </span>\n                      )}\n                    </div>\n                    <div className=\"col-lg-12 form-group\">\n                      <label\n                        className=\"text-small text-uppercase\"\n                        htmlFor=\"Address\"\n                      >\n                        Address:{\" \"}\n                      </label>\n                      <input\n                        className=\"form-control form-control-lg\"\n                        value={address}\n                        onChange={onChangeAddress}\n                        type=\"text\"\n                        placeholder=\"Enter Your Address Here!\"\n                      />\n                      {addressError && (\n                        <span className=\"text-danger\">\n                          * Please Check Your Address!\n                        </span>\n                      )}\n                    </div>\n                    <div className=\"col-lg-12 form-group\">\n                      <a\n                        className=\"btn btn-dark\"\n                        style={{ color: \"white\" }}\n                        type=\"submit\"\n                        onClick={handlerSubmit}\n                      >\n                        Place order\n                      </a>\n                    </div>\n                  </div>\n                </form>\n              </div>\n              <div className=\"col-lg-4\">\n                <div className=\"card border-0 rounded-0 p-lg-4 bg-light\">\n                  <div className=\"card-body\">\n                    <h5 className=\"text-uppercase mb-4\">Your order</h5>\n                    <ul className=\"list-unstyled mb-0\">\n                      {carts &&\n                        carts.map((value) => (\n                          <div key={value._id}>\n                            <li className=\"d-flex align-items-center justify-content-between\">\n                              <strong className=\"small font-weight-bold\">\n                                {value.nameProduct}\n                              </strong>\n                              <br></br>\n                              <span className=\"text-muted small\">\n                                {convertMoney(value.priceProduct)} VND x{\" \"}\n                                {value.count}\n                              </span>\n                            </li>\n                            <li className=\"border-bottom my-2\"></li>\n                          </div>\n                        ))}\n                      <li className=\"d-flex align-items-center justify-content-between\">\n                        <strong className=\"text-uppercase small font-weight-bold\">\n                          Total\n                        </strong>\n                        <span>{convertMoney(total)} VND</span>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n        )}\n\n        {success && (\n          <section className=\"py-5\">\n            <div className=\"p-5\">\n              <h1>You Have Successfully Ordered!</h1>\n              <p style={{ fontSize: \"1.2rem\" }}>Please Check Your Email.</p>\n            </div>\n          </section>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Checkout;\n","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\pages\\History\\component\\MainHistory.jsx",[],"C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\pages\\History\\component\\DetailHistory.jsx",["229"],"import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport HistoryAPI from \"../../../API/HistoryAPI\";\nimport styles from \"../History.module.css\";\n\nfunction DetailHistory(props) {\n  const { idHistory } = useParams();\n\n  const [cart, setCart] = useState([]);\n\n  const [information, setInformation] = useState({});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await HistoryAPI.getDetail(idHistory);\n      console.log(response);\n\n      setCart(response.cart);\n      setInformation(response.information);\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div className={styles.history}>\n      <div className=\"container\">\n        <section className=\"py-5 bg-light\">\n          <div className=\"container\">\n            <div className=\"row px-4 px-lg-5 py-lg-4 align-items-center\">\n              <div className=\"col-lg-6\">\n                <h1 className=\"h2 text-uppercase mb-0\">Detail Order</h1>\n              </div>\n              <div className=\"col-lg-6 text-lg-right\">\n                <nav aria-label=\"breadcrumb\">\n                  <ol className=\"breadcrumb justify-content-lg-end mb-0 px-0\">\n                    <li className=\"breadcrumb-item active\">Detail</li>\n                  </ol>\n                </nav>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        <div className=\"p-5\">\n          <h1 className=\"h2 text-uppercase\">Information Order</h1>\n          <p>ID User: {information.idUser}</p>\n          <p>Full Name: {information.fullName}</p>\n          <p>Phone: {information.phone}</p>\n          <p>Address: {information.address}</p>\n          <p>Total: {information.total}$</p>\n        </div>\n\n        <div className=\"table-responsive pt-5 pb-5\">\n          <table className=\"table\">\n            <thead className=\"bg-light\">\n              <tr className=\"text-center\">\n                <th className=\"border-0\" scope=\"col\">\n                  {\" \"}\n                  <strong className=\"text-small text-uppercase\">\n                    ID Product\n                  </strong>\n                </th>\n                <th className=\"border-0\" scope=\"col\">\n                  {\" \"}\n                  <strong className=\"text-small text-uppercase\">Image</strong>\n                </th>\n                <th className=\"border-0\" scope=\"col\">\n                  {\" \"}\n                  <strong className=\"text-small text-uppercase\">Name</strong>\n                </th>\n                <th className=\"border-0\" scope=\"col\">\n                  {\" \"}\n                  <strong className=\"text-small text-uppercase\">Price</strong>\n                </th>\n                <th className=\"border-0\" scope=\"col\">\n                  {\" \"}\n                  <strong className=\"text-small text-uppercase\">Count</strong>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {cart &&\n                cart.map((value) => (\n                  <tr className=\"text-center\" key={value.idProduct}>\n                    <td className=\"align-middle border-0\">\n                      <h6 className=\"mb-0\">{value.idProduct}</h6>\n                    </td>\n                    <td className=\"pl-0 border-0\">\n                      <div className=\"media align-items-center justify-content-center\">\n                        <Link\n                          className=\"reset-anchor d-block animsition-link\"\n                          to={`/detail/${value.idProduct}`}\n                        >\n                          <img src={value.imgProduct} alt=\"...\" width=\"200\" />\n                        </Link>\n                      </div>\n                    </td>\n                    <td className=\"align-middle border-0\">\n                      <h6 className=\"mb-0\">{value.nameProduct}</h6>\n                    </td>\n                    <td className=\"align-middle border-0\">\n                      <h6 className=\"mb-0\">\n                        {parseInt(value.priceProduct).toLocaleString()} /VND\n                      </h6>\n                    </td>\n                    <td className=\"align-middle border-0\">\n                      <h6 className=\"mb-0\">{value.count}</h6>\n                    </td>\n                  </tr>\n                ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default DetailHistory;\n","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\pages\\Contact\\Contact.jsx",[],"C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\pages\\Blog\\Blog.jsx",[],"C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\pages\\About\\About.jsx",[],"C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\pages\\Home\\Home.jsx",["230"],"C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\Redux\\Reducer\\ReducerCart.jsx",[],"C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\Redux\\Reducer\\ReducerSession.jsx",[],"C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\convertMoney.js",[],"C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\Share\\img\\index.js",[],"C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\Authentication\\LogoutLink.jsx",[],"C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\Authentication\\Name.jsx",[],"C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\Authentication\\LoginLink.jsx",["231","232","233"],"C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\API\\CartAPI.jsx",[],"C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\API\\MessengerAPI.jsx",[],"C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\API\\UserAPI.jsx",[],"C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\API\\CommentAPI.jsx",[],"C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\API\\CheckoutAPI.jsx",[],"C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\API\\ProductAPI.jsx",[],"C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\Redux\\Action\\ActionSession.jsx",[],"C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\Redux\\Action\\ActionCart.jsx",[],"C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\API\\HistoryAPI.jsx",[],"C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\pages\\Shop\\Component\\Search.jsx",[],"C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\pages\\Shop\\Component\\SortProduct.jsx",[],"C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\pages\\Shop\\Component\\Pagination.jsx",[],"C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\pages\\Shop\\Component\\Products.jsx",["234","235"],"import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport convertMoney from \"../../../convertMoney\";\nimport \"../shop.css\";\nProducts.propTypes = {\n  products: PropTypes.array,\n  sort: PropTypes.string,\n};\n\nProducts.defaultProps = {\n  products: [],\n  sort: \"\",\n};\n\nfunction Products(props) {\n  const { products, sort } = props;\n\n  if (sort === \"DownToUp\") {\n    products.sort((a, b) => {\n      return a.price - b.price;\n    });\n  } else if (sort === \"UpToDown\") {\n    products.sort((a, b) => {\n      return b.price - a.price;\n    });\n  }\n\n  return (\n    <div className=\"row\">\n      {/* -------------Product----------------- */}\n      {products &&\n        products.map((value) => (\n          <div className=\"col-lg-4 col-sm-6 Section_Category \" key={value._id}>\n            <div className=\"product text-center\">\n              <div className=\"position-relative mb-3\">\n                <div className=\"badge text-white badge-\"></div>\n                <div className=\"card\">\n                  <Link className=\"d-block\" to={`/detail/${value._id}`}>\n                    <img className=\"product_img\" src={value.img1} alt=\"...\" />\n                    {/* Hiển thị thông báo hết hàng khi số lượng sản phẩm trong kho = 0 */}\n                    {value.count === 0 && (\n                      <div className=\"message_outOfStock\">Hết Hàng </div>\n                    )}\n                  </Link>\n                  <div className=\"mt-4\">\n                    <h6>\n                      <a className=\"reset-anchor \" href=\"detail.html\">\n                        {value.name}\n                      </a>\n                    </h6>\n                    <p className=\"small text-muted\">\n                      {convertMoney(value.price)} VND\n                    </p>\n                  </div>\n                </div>\n                <div className=\"product-overlay\">\n                  <ul className=\"mb-0 list-inline\"></ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      {/* -------------Product----------------- */}\n    </div>\n  );\n}\n\nexport default Products;\n","C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\pages\\Cart\\Component\\ListCart.jsx",[],"C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\Share\\img\\Image.jsx",[],"C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\API\\NewsApi.jsx",[],"C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\pages\\Home\\Component\\Clock.jsx",[],"C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\pages\\Home\\Component\\Feedback.jsx",[],"C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\pages\\Contact\\Map\\Map.jsx",[],"C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\API\\axiosClient.jsx",[],"C:\\Users\\Hii\\Desktop\\Shopcake\\client\\src\\pages\\Shop\\Component\\IndexPage.jsx",[],{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","severity":1,"message":"241","line":2,"column":16,"nodeType":"242","messageId":"243","endLine":2,"endColumn":24},{"ruleId":"240","severity":1,"message":"244","line":26,"column":10,"nodeType":"242","messageId":"243","endLine":26,"endColumn":17},{"ruleId":"240","severity":1,"message":"245","line":30,"column":10,"nodeType":"242","messageId":"243","endLine":30,"endColumn":17},{"ruleId":"246","severity":1,"message":"247","line":130,"column":6,"nodeType":"248","endLine":130,"endColumn":17,"suggestions":"249"},{"ruleId":"240","severity":1,"message":"250","line":15,"column":10,"nodeType":"242","messageId":"243","endLine":15,"endColumn":14},{"ruleId":"240","severity":1,"message":"251","line":4,"column":16,"nodeType":"242","messageId":"243","endLine":4,"endColumn":24},{"ruleId":"240","severity":1,"message":"252","line":14,"column":9,"nodeType":"242","messageId":"243","endLine":14,"endColumn":16},{"ruleId":"246","severity":1,"message":"247","line":47,"column":6,"nodeType":"248","endLine":47,"endColumn":17,"suggestions":"253"},{"ruleId":"240","severity":1,"message":"254","line":53,"column":11,"nodeType":"242","messageId":"243","endLine":53,"endColumn":20},{"ruleId":"240","severity":1,"message":"255","line":27,"column":9,"nodeType":"242","messageId":"243","endLine":27,"endColumn":17},{"ruleId":"240","severity":1,"message":"256","line":64,"column":9,"nodeType":"242","messageId":"243","endLine":64,"endColumn":21},{"ruleId":"240","severity":1,"message":"257","line":69,"column":9,"nodeType":"242","messageId":"243","endLine":69,"endColumn":24},{"ruleId":"240","severity":1,"message":"258","line":74,"column":9,"nodeType":"242","messageId":"243","endLine":74,"endColumn":23},{"ruleId":"246","severity":1,"message":"259","line":124,"column":6,"nodeType":"248","endLine":124,"endColumn":20,"suggestions":"260"},{"ruleId":"240","severity":1,"message":"261","line":173,"column":9,"nodeType":"242","messageId":"243","endLine":173,"endColumn":22},{"ruleId":"240","severity":1,"message":"262","line":68,"column":7,"nodeType":"242","messageId":"243","endLine":68,"endColumn":13},{"ruleId":"240","severity":1,"message":"254","line":66,"column":11,"nodeType":"242","messageId":"243","endLine":66,"endColumn":20},{"ruleId":"240","severity":1,"message":"263","line":150,"column":27,"nodeType":"242","messageId":"243","endLine":150,"endColumn":35},{"ruleId":"240","severity":1,"message":"264","line":188,"column":13,"nodeType":"242","messageId":"243","endLine":188,"endColumn":17},{"ruleId":"246","severity":1,"message":"265","line":200,"column":6,"nodeType":"248","endLine":200,"endColumn":12,"suggestions":"266"},{"ruleId":"267","severity":1,"message":"268","line":351,"column":23,"nodeType":"269","endLine":356,"endColumn":24},{"ruleId":"246","severity":1,"message":"270","line":23,"column":6,"nodeType":"248","endLine":23,"endColumn":8,"suggestions":"271"},{"ruleId":"246","severity":1,"message":"272","line":93,"column":6,"nodeType":"248","endLine":93,"endColumn":8,"suggestions":"273"},{"ruleId":"240","severity":1,"message":"274","line":1,"column":17,"nodeType":"242","messageId":"243","endLine":1,"endColumn":26},{"ruleId":"240","severity":1,"message":"275","line":1,"column":28,"nodeType":"242","messageId":"243","endLine":1,"endColumn":36},{"ruleId":"240","severity":1,"message":"276","line":3,"column":16,"nodeType":"242","messageId":"243","endLine":3,"endColumn":24},{"ruleId":"240","severity":1,"message":"274","line":1,"column":17,"nodeType":"242","messageId":"243","endLine":1,"endColumn":26},{"ruleId":"240","severity":1,"message":"275","line":1,"column":28,"nodeType":"242","messageId":"243","endLine":1,"endColumn":36},"no-native-reassign",["277"],"no-negated-in-lhs",["278"],"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","'success' is assigned a value but never used.","'isLogin' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'listCart'. Either include it or remove the dependency array.","ArrayExpression",["279"],"'temp' is assigned a value but never used.","'redirect' is defined but never used.","'id_user' is assigned a value but never used.",["280"],"'sum_total' is assigned a value but never used.","'listCart' is assigned a value but never used.","'onChangeStar' is assigned a value but never used.","'onChangeComment' is assigned a value but never used.","'handlerComment' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["281"],"'handlerReview' is assigned a value but never used.","'idTemp' is assigned a value but never used.","'response' is assigned a value but never used.","'data' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'address', 'carts', 'email', 'fullName', 'phone', and 'success'. Either include them or remove the dependency array. You can also do a functional update 'setSuccess(s => ...)' if you only need 'success' in the 'setSuccess' call.",["282"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'idHistory'. Either include it or remove the dependency array.",["283"],"React Hook useEffect has a missing dependency: 'startTimer'. Either include it or remove the dependency array.",["284"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},"Update the dependencies array to be: [checkPush, listCart]",{"range":"297","text":"298"},"Update the dependencies array to be: [listCart, loadRedux]",{"range":"299","text":"300"},"Update the dependencies array to be: [id, load_comment]",{"range":"301","text":"302"},"Update the dependencies array to be: [address, carts, email, fullName, load, phone, success]",{"range":"303","text":"304"},"Update the dependencies array to be: [idHistory]",{"range":"305","text":"306"},"Update the dependencies array to be: [startTimer]",{"range":"307","text":"308"},[3593,3604],"[checkPush, listCart]",[1349,1360],"[listCart, loadRedux]",[3278,3292],"[id, load_comment]",[5439,5445],"[address, carts, email, fullName, load, phone, success]",[617,619],"[idHistory]",[2719,2721],"[startTimer]"]