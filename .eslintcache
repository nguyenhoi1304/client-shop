[{"D:\\Funix\\NJS\\Asm3\\client\\src\\index.js":"1","D:\\Funix\\NJS\\Asm3\\client\\src\\App.jsx":"2","D:\\Funix\\NJS\\Asm3\\client\\src\\store.js":"3","D:\\Funix\\NJS\\Asm3\\client\\src\\reportWebVitals.js":"4","D:\\Funix\\NJS\\Asm3\\client\\src\\History\\History.jsx":"5","D:\\Funix\\NJS\\Asm3\\client\\src\\Detail\\Detail.jsx":"6","D:\\Funix\\NJS\\Asm3\\client\\src\\Authentication\\SignUp.jsx":"7","D:\\Funix\\NJS\\Asm3\\client\\src\\Home\\Home.jsx":"8","D:\\Funix\\NJS\\Asm3\\client\\src\\Authentication\\SignIn.jsx":"9","D:\\Funix\\NJS\\Asm3\\client\\src\\Checkout\\Checkout.jsx":"10","D:\\Funix\\NJS\\Asm3\\client\\src\\History\\Component\\DetailHistory.jsx":"11","D:\\Funix\\NJS\\Asm3\\client\\src\\Shop\\Shop.jsx":"12","D:\\Funix\\NJS\\Asm3\\client\\src\\Cart\\Cart.jsx":"13","D:\\Funix\\NJS\\Asm3\\client\\src\\History\\Component\\MainHistory.jsx":"14","D:\\Funix\\NJS\\Asm3\\client\\src\\Share\\Footer\\Footer.jsx":"15","D:\\Funix\\NJS\\Asm3\\client\\src\\Share\\Header\\Header.jsx":"16","D:\\Funix\\NJS\\Asm3\\client\\src\\Share\\Chat\\Chat.jsx":"17","D:\\Funix\\NJS\\Asm3\\client\\src\\Redux\\Reducer\\ReducerRoot.jsx":"18","D:\\Funix\\NJS\\Asm3\\client\\src\\convertMoney.js":"19","D:\\Funix\\NJS\\Asm3\\client\\src\\Authentication\\LoginLink.jsx":"20","D:\\Funix\\NJS\\Asm3\\client\\src\\API\\ProductAPI.jsx":"21","D:\\Funix\\NJS\\Asm3\\client\\src\\API\\CartAPI.jsx":"22","D:\\Funix\\NJS\\Asm3\\client\\src\\API\\MessengerAPI.jsx":"23","D:\\Funix\\NJS\\Asm3\\client\\src\\Authentication\\LogoutLink.jsx":"24","D:\\Funix\\NJS\\Asm3\\client\\src\\API\\CheckoutAPI.jsx":"25","D:\\Funix\\NJS\\Asm3\\client\\src\\API\\ChatRoomsAPI.jsx":"26","D:\\Funix\\NJS\\Asm3\\client\\src\\API\\HistoryAPI.jsx":"27","D:\\Funix\\NJS\\Asm3\\client\\src\\API\\CommentAPI.jsx":"28","D:\\Funix\\NJS\\Asm3\\client\\src\\Authentication\\Name.jsx":"29","D:\\Funix\\NJS\\Asm3\\client\\src\\Redux\\Action\\ActionCart.jsx":"30","D:\\Funix\\NJS\\Asm3\\client\\src\\API\\UserAPI.jsx":"31","D:\\Funix\\NJS\\Asm3\\client\\src\\Redux\\Action\\ActionSession.jsx":"32","D:\\Funix\\NJS\\Asm3\\client\\src\\Shop\\Component\\Pagination.jsx":"33","D:\\Funix\\NJS\\Asm3\\client\\src\\Share\\img\\Image.jsx":"34","D:\\Funix\\NJS\\Asm3\\client\\src\\Shop\\Component\\Search.jsx":"35","D:\\Funix\\NJS\\Asm3\\client\\src\\Shop\\Component\\Products.jsx":"36","D:\\Funix\\NJS\\Asm3\\client\\src\\Shop\\Component\\SortProduct.jsx":"37","D:\\Funix\\NJS\\Asm3\\client\\src\\Cart\\Component\\ListCart.jsx":"38","D:\\Funix\\NJS\\Asm3\\client\\src\\Redux\\Reducer\\ReducerSession.jsx":"39","D:\\Funix\\NJS\\Asm3\\client\\src\\Redux\\Reducer\\ReducerCart.jsx":"40","D:\\Funix\\NJS\\Asm3\\client\\src\\Shop\\Component\\IndexPage.jsx":"41","D:\\Funix\\NJS\\Asm3\\client\\src\\API\\axiosClient.jsx":"42"},{"size":614,"mtime":1662556006000,"results":"43","hashOfConfig":"44"},{"size":1422,"mtime":1702409600044,"results":"45","hashOfConfig":"44"},{"size":153,"mtime":1662556006000,"results":"46","hashOfConfig":"44"},{"size":396,"mtime":1662556006000,"results":"47","hashOfConfig":"44"},{"size":395,"mtime":1702128073748,"results":"48","hashOfConfig":"44"},{"size":17703,"mtime":1702127067537,"results":"49","hashOfConfig":"44"},{"size":6763,"mtime":1700767126062,"results":"50","hashOfConfig":"44"},{"size":14017,"mtime":1702408981689,"results":"51","hashOfConfig":"44"},{"size":5606,"mtime":1700761267978,"results":"52","hashOfConfig":"44"},{"size":13365,"mtime":1702406365912,"results":"53","hashOfConfig":"44"},{"size":4121,"mtime":1700589450820,"results":"54","hashOfConfig":"44"},{"size":14179,"mtime":1702627084520,"results":"55","hashOfConfig":"44"},{"size":9418,"mtime":1700560389663,"results":"56","hashOfConfig":"44"},{"size":5143,"mtime":1702128097951,"results":"57","hashOfConfig":"44"},{"size":2051,"mtime":1662556006000,"results":"58","hashOfConfig":"44"},{"size":3567,"mtime":1702127878156,"results":"59","hashOfConfig":"44"},{"size":7040,"mtime":1702405648578,"results":"60","hashOfConfig":"44"},{"size":247,"mtime":1662556006000,"results":"61","hashOfConfig":"44"},{"size":290,"mtime":1662556006000,"results":"62","hashOfConfig":"44"},{"size":556,"mtime":1662556006000,"results":"63","hashOfConfig":"44"},{"size":482,"mtime":1662556006000,"results":"64","hashOfConfig":"44"},{"size":505,"mtime":1700239660882,"results":"65","hashOfConfig":"44"},{"size":419,"mtime":1662556006000,"results":"66","hashOfConfig":"44"},{"size":295,"mtime":1662556006000,"results":"67","hashOfConfig":"44"},{"size":294,"mtime":1700561621221,"results":"68","hashOfConfig":"44"},{"size":430,"mtime":1662556006000,"results":"69","hashOfConfig":"44"},{"size":298,"mtime":1700569940935,"results":"70","hashOfConfig":"44"},{"size":307,"mtime":1662556006000,"results":"71","hashOfConfig":"44"},{"size":1169,"mtime":1702127358596,"results":"72","hashOfConfig":"44"},{"size":335,"mtime":1662556006000,"results":"73","hashOfConfig":"44"},{"size":479,"mtime":1700025848713,"results":"74","hashOfConfig":"44"},{"size":179,"mtime":1662556006000,"results":"75","hashOfConfig":"44"},{"size":1830,"mtime":1700372228338,"results":"76","hashOfConfig":"44"},{"size":341,"mtime":1662556006000,"results":"77","hashOfConfig":"44"},{"size":986,"mtime":1662556006000,"results":"78","hashOfConfig":"44"},{"size":2156,"mtime":1702626736284,"results":"79","hashOfConfig":"44"},{"size":694,"mtime":1662556006000,"results":"80","hashOfConfig":"44"},{"size":5798,"mtime":1700241917741,"results":"81","hashOfConfig":"44"},{"size":523,"mtime":1662556006000,"results":"82","hashOfConfig":"44"},{"size":2633,"mtime":1662556006000,"results":"83","hashOfConfig":"44"},{"size":984,"mtime":1700372226076,"results":"84","hashOfConfig":"44"},{"size":889,"mtime":1702401516844,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1718ul2",{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"88"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"88"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"88"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"88"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"D:\\Funix\\NJS\\Asm3\\client\\src\\index.js",[],["183","184"],"D:\\Funix\\NJS\\Asm3\\client\\src\\App.jsx",["185"],"D:\\Funix\\NJS\\Asm3\\client\\src\\store.js",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\reportWebVitals.js",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\History\\History.jsx",[],["186","187"],"D:\\Funix\\NJS\\Asm3\\client\\src\\Detail\\Detail.jsx",["188","189","190","191","192","193"],"import React, { useEffect, useState } from \"react\";\nimport ProductAPI from \"../API/ProductAPI\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport alertify from \"alertifyjs\";\nimport { addCart } from \"../Redux/Action/ActionCart\";\nimport CartAPI from \"../API/CartAPI\";\nimport queryString from \"query-string\";\nimport CommentAPI from \"../API/CommentAPI\";\nimport convertMoney from \"../convertMoney\";\n\nfunction Detail(props) {\n  const [detail, setDetail] = useState({});\n\n  const dispatch = useDispatch();\n\n  //id params cho từng sản phẩm\n  const { id } = useParams();\n\n  //id_user được lấy từ redux\n  const id_user = useSelector((state) => state.Cart.id_user);\n\n  //listCart được lấy từ redux\n  const listCart = useSelector((state) => state.Cart.listCart);\n\n  const [product, setProduct] = useState([]);\n\n  const [star, setStar] = useState(1);\n\n  const [comment, setComment] = useState(\"\");\n\n  // id_user đã đăng nhập\n  const idUser = useSelector((state) => state.Session.idUser);\n\n  // Listcomment\n  const [list_comment, set_list_comment] = useState([]);\n\n  // state này dùng để load lại comment khi user gửi comment lên\n  const [load_comment, set_load_comment] = useState(false);\n\n  // Hàm này dùng để lấy dữ liệu comment\n  // Hàm này sẽ chạy lại phụ thuộc vào id Param\n  useEffect(() => {\n    const fetchData = async () => {\n      const params = {\n        idProduct: id,\n      };\n\n      const query = \"?\" + queryString.stringify(params);\n\n      const response = await CommentAPI.getCommentProduct(query);\n      console.log(response);\n\n      set_list_comment(response);\n    };\n\n    fetchData();\n  }, [id]);\n\n  // Hàm thay đổi sao đánh giá\n  const onChangeStar = (e) => {\n    setStar(e.target.value);\n  };\n\n  // Hàm thay đổi comment\n  const onChangeComment = (e) => {\n    setComment(e.target.value);\n  };\n\n  // Hàm này dùng để bình luận\n  const handlerComment = () => {\n    if (idUser === \"\") {\n      alertify.set(\"notifier\", \"position\", \"bottom-left\");\n      alertify.error(\"Vui Lòng Kiểm Tra Đăng Nhập!\");\n      return;\n    }\n\n    const fetchSendComment = async () => {\n      const params = {\n        idProduct: id,\n        idUser: localStorage.getItem(\"id_user\"),\n        fullname: localStorage.getItem(\"name_user\"),\n        content: comment,\n        star: star,\n      };\n\n      const query = \"?\" + queryString.stringify(params);\n\n      const response = await CommentAPI.postCommentProduct(query);\n      console.log(response);\n\n      set_load_comment(true);\n    };\n\n    fetchSendComment();\n\n    setComment(\"\");\n  };\n\n  // Hàm này dùng để load lại dữ liệu comment\n  // Phụ thuộc vào state load_comment\n  useEffect(() => {\n    if (load_comment) {\n      const fetchData = async () => {\n        const params = {\n          idProduct: id,\n        };\n\n        const query = \"?\" + queryString.stringify(params);\n\n        const response = await CommentAPI.getCommentProduct(query);\n        console.log(response);\n\n        set_list_comment(response);\n      };\n\n      fetchData();\n\n      set_load_comment(false);\n    }\n  }, [load_comment]);\n\n  //Hàm này gọi API và cắt chỉ lấy 4 sản phẩm\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await ProductAPI.getAPI();\n      const data = response;\n      setProduct(data);\n    };\n\n    fetchData();\n  }, []);\n\n  //Phần này là để thay đổi số lượng khi mua sản phẩm\n  const [text, setText] = useState(1);\n  const onChangeText = (e) => {\n    setText(e.target.value);\n  };\n\n  //Tăng lên 1 đơn vị\n  const upText = () => {\n    const value = parseInt(text) + 1;\n\n    setText(value);\n  };\n\n  //Giảm 1 đơn vị\n  const downText = () => {\n    const value = parseInt(text) - 1;\n\n    if (value === 0) return;\n\n    setText(value);\n  };\n\n  //Hàm này để lấy dữ liệu chi tiết sản phẩm\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await ProductAPI.getDetail(id);\n      console.log(response);\n      setDetail(response);\n    };\n\n    fetchData();\n  }, [id]);\n\n  //Phần này dùng để xem review hay description\n  const [review, setReview] = useState(\"description\");\n  const handlerReview = (value) => {\n    setReview(value);\n  };\n\n  //Hàm này là Thêm Sản Phẩm\n  const addToCart = () => {\n    //khi người dùng vẫn bấm nút đặt hàng dù đã hết hàng ,Kiểm tra số lượng sản phẩm trong kho mà = 0 thì hiển thị thông báo\n    if (detail.count === 0) {\n      alert(\n        \"Rất tiếc, sản phẩm này hiện không tồn tại. Hãy chọn một phương thức kết hợp khác.\"\n      );\n      return;\n    }\n    if (text > detail.count) {\n      alert(\n        \"kiểm tra lại số lượng đặt , vượt quá số lượng có của chúng tôi! Vui lòng đặt lại\"\n      );\n      return;\n    }\n    let id_user_cart = \"\";\n\n    if (localStorage.getItem(\"id_user\")) {\n      id_user_cart = localStorage.getItem(\"id_user\");\n      console.log(id_user_cart);\n    } else {\n      id_user_cart = id_user;\n    }\n\n    const data = {\n      idUser: id_user_cart,\n      idProduct: detail._id,\n      nameProduct: detail.name,\n      priceProduct: detail.price,\n      count: text,\n      img: detail.img1,\n    };\n\n    if (localStorage.getItem(\"id_user\")) {\n      console.log(\"Bạn Đã Đăng Nhập!\");\n\n      const fetchPost = async () => {\n        const dataBody = {\n          idUser: id_user_cart, //localStorage.getItem('id_user')\n          idProduct: detail._id, // Lấy idProduct\n          count: text, // Lấy số lượng\n        };\n\n        const body = JSON.stringify(dataBody);\n\n        const response = await CartAPI.postAddToCart(body);\n\n        console.log(response);\n      };\n\n      fetchPost();\n    } else {\n      const action = addCart(data);\n      dispatch(action);\n    }\n\n    alertify.set(\"notifier\", \"position\", \"bottom-left\");\n    alertify.success(\"Bạn Đã Thêm Hàng Thành Công!\");\n  };\n\n  return (\n    <section className=\"py-5\">\n      <div className=\"container\">\n        <div className=\"row mb-5\">\n          <div className=\"col-lg-6\">\n            <div className=\"row m-sm-0\">\n              <div className=\"col-sm-2 p-sm-0 order-2 order-sm-1 mt-2 mt-sm-0\">\n                <div\n                  className=\"owl-thumbs d-flex flex-row flex-sm-column\"\n                  data-slider-id=\"1\"\n                >\n                  <div className=\"owl-thumb-item flex-fill mb-2 mr-2 mr-sm-0\">\n                    <img className=\"w-100\" src={detail.img1} alt=\"...\" />\n                  </div>\n                  <div className=\"owl-thumb-item flex-fill mb-2 mr-2 mr-sm-0\">\n                    <img className=\"w-100\" src={detail.img2} alt=\"...\" />\n                  </div>\n                  <div className=\"owl-thumb-item flex-fill mb-2 mr-2 mr-sm-0\">\n                    <img className=\"w-100\" src={detail.img3} alt=\"...\" />\n                  </div>\n                  <div className=\"owl-thumb-item flex-fill mb-2 mr-2 mr-sm-0\">\n                    <img className=\"w-100\" src={detail.img4} alt=\"...\" />\n                  </div>\n                </div>\n              </div>\n\n              <div\n                id=\"carouselExampleControls\"\n                className=\"carousel slide col-sm-10 order-1 order-sm-2\"\n                data-ride=\"carousel\"\n              >\n                <div className=\"carousel-inner owl-carousel product-slider\">\n                  <div className=\"carousel-item active\">\n                    <img\n                      className=\"d-block w-100\"\n                      src={detail.img1}\n                      alt=\"First slide\"\n                    />\n                  </div>\n                  <div className=\"carousel-item\">\n                    <img\n                      className=\"d-block w-100\"\n                      src={detail.img2}\n                      alt=\"Second slide\"\n                    />\n                  </div>\n                  <div className=\"carousel-item\">\n                    <img\n                      className=\"d-block w-100\"\n                      src={detail.img3}\n                      alt=\"Third slide\"\n                    />\n                  </div>\n                  <div className=\"carousel-item\">\n                    <img\n                      className=\"d-block w-100\"\n                      src={detail.img4}\n                      alt=\"Third slide\"\n                    />\n                  </div>\n                </div>\n                <a\n                  className=\"carousel-control-prev\"\n                  href=\"#carouselExampleControls\"\n                  role=\"button\"\n                  data-slide=\"prev\"\n                >\n                  <span\n                    className=\"carousel-control-prev-icon\"\n                    aria-hidden=\"true\"\n                  ></span>\n                  <span className=\"sr-only\">Previous</span>\n                </a>\n                <a\n                  className=\"carousel-control-next\"\n                  href=\"#carouselExampleControls\"\n                  role=\"button\"\n                  data-slide=\"next\"\n                >\n                  <span\n                    className=\"carousel-control-next-icon\"\n                    aria-hidden=\"true\"\n                  ></span>\n                  <span className=\"sr-only\">Next</span>\n                </a>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-lg-6\">\n            <br></br>\n            <h1>{detail.name}</h1>\n            <br></br>\n            <p className=\"text-muted lead\">{convertMoney(detail.price)} VND</p>\n            <br></br>\n            <p className=\"text-small mb-4\">{detail.short_desc}</p>\n            <ul className=\"list-unstyled small d-inline-block\">\n              <strong>{detail.count} sản phẩm có sẵn</strong>\n              <li className=\"mb-3 bg-white text-muted\">\n                <strong className=\"text-uppercase text-dark\">Category:</strong>\n                <span className=\"reset-anchor ml-2\">{detail.category}s</span>\n              </li>\n            </ul>\n            <div className=\"row align-items-stretch mb-4\">\n              <div className=\"col-sm-5 pr-sm-0\">\n                <div className=\"border d-flex align-items-center justify-content-between py-1 px-3 bg-white border-white\">\n                  <span className=\"small text-uppercase text-gray mr-4 no-select\">\n                    Quantity\n                  </span>\n                  <div className=\"quantity\">\n                    <button\n                      className=\"dec-btn p-0\"\n                      style={{ cursor: \"pointer\" }}\n                    >\n                      <i className=\"fas fa-caret-left\" onClick={downText}></i>\n                    </button>\n                    <input\n                      className=\"form-control border-0 shadow-0 p-0\"\n                      type=\"text\"\n                      value={text}\n                      onChange={onChangeText}\n                    />\n                    <button\n                      className=\"inc-btn p-0\"\n                      style={{ cursor: \"pointer\" }}\n                    >\n                      <i className=\"fas fa-caret-right\" onClick={upText}></i>\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-sm-3 pl-sm-0\">\n                <span\n                  className=\"btn btn-dark btn-sm btn-block d-flex align-items-center justify-content-center px-0 text-white\"\n                  onClick={addToCart}\n                >\n                  Add to cart\n                </span>\n              </div>\n              <br></br>\n              <br></br>\n            </div>\n          </div>\n        </div>\n        {/* <div className='form-group'>\n\t\t\t\t\t<label htmlFor='exampleFormControlTextarea1'>Comment:</label>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\trows='3'\n\t\t\t\t\t\tonChange={onChangeComment}\n\t\t\t\t\t\tvalue={comment}></textarea>\n\t\t\t\t</div> */}\n        {/* <div className='d-flex justify-content-between'>\n\t\t\t\t\t<div className='d-flex w-25'>\n\t\t\t\t\t\t<span className='mt-2'>Evaluate: </span>\n\t\t\t\t\t\t&nbsp; &nbsp;\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName='form-control w-25'\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\tmin='1'\n\t\t\t\t\t\t\tmax='5'\n\t\t\t\t\t\t\tvalue={star}\n\t\t\t\t\t\t\tonChange={onChangeStar}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t&nbsp; &nbsp;\n\t\t\t\t\t\t<span className='mt-2'>Star</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\tclassName='btn btn-dark btn-sm btn-block px-0 text-white'\n\t\t\t\t\t\t\tstyle={{ width: '12rem' }}\n\t\t\t\t\t\t\tonClick={handlerComment}>\n\t\t\t\t\t\t\tSend\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div> */}\n        <br />\n        <ul className=\"nav nav-tabs border-0\">\n          <li className=\"nav-item\">\n            <a\n              className=\"nav-link fix_comment\"\n              onClick={() => handlerReview(\"description\")}\n              style={\n                review === \"description\"\n                  ? { backgroundColor: \"#383838\", color: \"#ffffff\" }\n                  : { color: \"#383838\" }\n              }\n            >\n              Description\n            </a>\n          </li>\n          {/* <li className='nav-item'>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\tclassName='nav-link fix_comment'\n\t\t\t\t\t\t\tonClick={() => handlerReview('review')}\n\t\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\t\treview === 'review'\n\t\t\t\t\t\t\t\t\t? { backgroundColor: '#383838', color: '#ffffff' }\n\t\t\t\t\t\t\t\t\t: { color: '#383838' }\n\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\tReviews\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li> */}\n        </ul>\n        <div className=\"tab-content mb-5\">\n          {review === \"description\" ? (\n            <div className=\"tab-pane fade show active\">\n              <div className=\"pt-4 pb-4 bg-white\">\n                <h6 className=\"text-uppercase\">Product description </h6>\n                <br></br>\n                <p\n                  className=\"text-muted text-small mb-0\"\n                  style={{ whiteSpace: \"pre-wrap\" }}\n                >\n                  {detail.long_desc}\n                </p>\n              </div>\n            </div>\n          ) : (\n            <div className=\"tab-pane fade show active\">\n              <div className=\"p-4 p-lg-5 bg-white\">\n                <div className=\"row\">\n                  <div className=\"col-lg-8\">\n                    {list_comment &&\n                      list_comment.map((value) => (\n                        <div className=\"media mb-3\" key={value._id}>\n                          <img\n                            className=\"rounded-circle\"\n                            src=\"https://img.icons8.com/color/36/000000/administrator-male.png\"\n                            alt=\"\"\n                            width=\"50\"\n                          />\n                          <div className=\"media-body ml-3\">\n                            <h6 className=\"mb-0 text-uppercase\">\n                              {value.fullname}\n                            </h6>\n                            <p className=\"small text-muted mb-0 text-uppercase\">\n                              dd/mm/yyyy\n                            </p>\n                            <ul className=\"list-inline mb-1 text-xs\">\n                              <li className=\"list-inline-item m-0\">\n                                <i className={value.star1}></i>\n                              </li>\n                              <li className=\"list-inline-item m-0\">\n                                <i className={value.star2}></i>\n                              </li>\n                              <li className=\"list-inline-item m-0\">\n                                <i className={value.star3}></i>\n                              </li>\n                              <li className=\"list-inline-item m-0\">\n                                <i className={value.star4}></i>\n                              </li>\n                              <li className=\"list-inline-item m-0\">\n                                <i className={value.star5}></i>\n                              </li>\n                            </ul>\n                            <p className=\"text-small mb-0 text-muted\">\n                              {value.content}\n                            </p>\n                          </div>\n                        </div>\n                      ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n        <h2 className=\"h5 text-uppercase mb-4\">Related products</h2>\n        <div className=\"row\">\n          {product &&\n            product\n              .filter(\n                (el) => el.category === detail.category && el._id !== detail._id\n              )\n              .map((value) => (\n                <div className=\"col-lg-3 col-sm-6\" key={value._id}>\n                  <div className=\"product text-center skel-loader\">\n                    <div className=\"d-block mb-3 position-relative\">\n                      <img\n                        className=\"img-fluid w-100\"\n                        src={value.img1}\n                        alt=\"...\"\n                      />\n                      <div className=\"product-overlay\">\n                        <ul className=\"mb-0 list-inline\"></ul>\n                      </div>\n                    </div>\n                    <h6>\n                      <Link\n                        className=\"reset-anchor\"\n                        to={`/detail/${value._id}`}\n                      >\n                        {value.name}\n                      </Link>\n                    </h6>\n                    <p className=\"small text-muted\">\n                      {convertMoney(value.price)} VND\n                    </p>\n                  </div>\n                </div>\n              ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Detail;\n","D:\\Funix\\NJS\\Asm3\\client\\src\\Authentication\\SignUp.jsx",["194","195"],"import React, { useState } from \"react\";\nimport { Link, Navigate, useNavigate } from \"react-router-dom\";\nimport UserAPI from \"../API/UserAPI\";\nimport \"./Auth.css\";\nimport queryString from \"query-string\";\nimport MessengerAPI from \"../API/MessengerAPI\";\n\nSignUp.propTypes = {};\n\nfunction SignUp(props) {\n  const [fullname, setFullName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n\n  const [errorEmail, setEmailError] = useState(false);\n  const [emailRegex, setEmailRegex] = useState(false);\n  const [errorPassword, setPasswordError] = useState(false);\n  const [errorFullname, setFullnameError] = useState(false);\n  const [errorPhone, setPhoneError] = useState(false);\n\n  const [success, setSuccess] = useState(false);\n  const navigation = useNavigate();\n\n  const onChangeName = (e) => {\n    setFullName(e.target.value);\n  };\n\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const onChangePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const onChangePhone = (e) => {\n    setPhone(e.target.value);\n  };\n\n  const handlerSignUp = (e) => {\n    e.preventDefault();\n\n    if (!fullname) {\n      setFullnameError(true);\n      setEmailError(false);\n      setPhoneError(false);\n      setPasswordError(false);\n      setEmailRegex(false);\n      return;\n    } else {\n      setFullnameError(false);\n      setPhoneError(false);\n      setPasswordError(false);\n      setFullnameError(false);\n      setEmailRegex(false);\n\n      if (!email) {\n        setFullnameError(false);\n        setEmailError(true);\n        setPhoneError(false);\n        setPasswordError(false);\n        return;\n      } else {\n        setEmailError(false);\n        setPhoneError(false);\n        setPasswordError(false);\n        setFullnameError(false);\n\n        if (!validateEmail(email)) {\n          setEmailRegex(true);\n          setFullnameError(false);\n          setEmailError(false);\n          setPhoneError(false);\n          setPasswordError(false);\n          return;\n        } else {\n          setEmailRegex(false);\n\n          if (!password) {\n            setFullnameError(false);\n            setEmailError(false);\n            setPhoneError(false);\n            setPasswordError(true);\n            return;\n          } else {\n            setFullnameError(false);\n            setPhoneError(false);\n            setPasswordError(false);\n            setFullnameError(false);\n            setEmailRegex(false);\n\n            if (!phone) {\n              setFullnameError(false);\n              setEmailError(false);\n              setPhoneError(true);\n              setPasswordError(false);\n            } else {\n              const fetchSignUp = async () => {\n                const body = JSON.stringify({\n                  fullname: fullname,\n                  email: email,\n                  password: password,\n                  phone: phone,\n                });\n\n                const res = await UserAPI.postSignUp(body);\n                res.message && alert(res.message);\n                if (res.isRegister) {\n                  alert(\"Tạo tài khoản thành công!\");\n                  navigation(\"/signin\");\n                }\n                console.log(res);\n                setSuccess(true);\n              };\n\n              fetchSignUp();\n\n              // Hàm này dùng để tạo các conversation cho user và admin\n              const fetchConversation = async () => {\n                const params = {\n                  email: email,\n                  password: password,\n                };\n\n                const query = \"?\" + queryString.stringify(params);\n\n                const response = await MessengerAPI.postConversation(query);\n                console.log(response);\n              };\n\n              fetchConversation();\n            }\n          }\n        }\n      }\n    }\n  };\n\n  function validateEmail(email) {\n    const re =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  return (\n    <div className=\"limiter\">\n      <div className=\"container-login100\">\n        <div className=\"wrap-login100 p-l-55 p-r-55 p-t-65 p-b-50\">\n          <span className=\"login100-form-title p-b-33\">Sign Up</span>\n          <div className=\"d-flex justify-content-center pb-5\">\n            {errorFullname && (\n              <span className=\"text-danger\">\n                * Please Check Your Full Name!\n              </span>\n            )}\n            {errorEmail && (\n              <span className=\"text-danger\">* Please Check Your Email!</span>\n            )}\n            {emailRegex && (\n              <span className=\"text-danger\">* Incorrect Email Format</span>\n            )}\n            {errorPassword && (\n              <span className=\"text-danger\">* Please Check Your Password!</span>\n            )}\n            {errorPhone && (\n              <span className=\"text-danger\">\n                * Please Check Your Phone Number!\n              </span>\n            )}\n          </div>\n          <div className=\"wrap-input100 validate-input\">\n            <input\n              className=\"input100\"\n              value={fullname}\n              onChange={onChangeName}\n              type=\"text\"\n              placeholder=\"Full Name\"\n            />\n          </div>\n\n          <div className=\"wrap-input100 rs1 validate-input\">\n            <input\n              className=\"input100\"\n              value={email}\n              onChange={onChangeEmail}\n              type=\"text\"\n              placeholder=\"Email\"\n            />\n          </div>\n\n          <div className=\"wrap-input100 rs1 validate-input\">\n            <input\n              className=\"input100\"\n              value={password}\n              onChange={onChangePassword}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n          </div>\n\n          <div className=\"wrap-input100 rs1 validate-input\">\n            <input\n              className=\"input100\"\n              value={phone}\n              onChange={onChangePhone}\n              type=\"text\"\n              placeholder=\"Phone\"\n            />\n          </div>\n\n          <div className=\"container-login100-form-btn m-t-20\">\n            <button className=\"login100-form-btn\" onClick={handlerSignUp}>\n              Sign Up\n            </button>\n          </div>\n\n          <div className=\"text-center p-t-45 p-b-4\">\n            <span className=\"txt1\">Login?</span>\n            &nbsp;\n            <Link to=\"/signin\" className=\"txt2 hov1\">\n              Click\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SignUp;\n","D:\\Funix\\NJS\\Asm3\\client\\src\\Home\\Home.jsx",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\Authentication\\SignIn.jsx",["196","197"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport UserAPI from \"../API/UserAPI\";\nimport { addSession } from \"../Redux/Action/ActionSession\";\nimport \"./Auth.css\";\nimport queryString from \"query-string\";\nimport CartAPI from \"../API/CartAPI\";\n\nfunction SignIn(props) {\n  const navigation = useNavigate();\n  //listCart được lấy từ redux\n  const listCart = useSelector((state) => state.Cart.listCart);\n\n  const [email, setEmail] = useState(\"\");\n\n  const [password, setPassword] = useState(\"\");\n\n  const [user, setUser] = useState([]);\n\n  const [errorEmail, setErrorEmail] = useState(false);\n  const [emailRegex, setEmailRegex] = useState(false);\n  const [errorPassword, setErrorPassword] = useState(false);\n\n  const [redirect, setRedirect] = useState(false);\n\n  const [checkPush, setCheckPush] = useState(false);\n  const [isLogin, setIsLogin] = useState(false);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await UserAPI.getAllData();\n\n      setUser(response.data);\n    };\n\n    fetchData();\n  }, []);\n\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const onChangePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const onSubmit = () => {\n    if (!email) {\n      setErrorEmail(true);\n      return;\n    } else {\n      if (!password) {\n        setErrorEmail(false);\n        setErrorPassword(true);\n        return;\n      } else {\n        setErrorPassword(false);\n        if (!validateEmail(email)) {\n          setEmailRegex(true);\n          return;\n        } else {\n          setEmailRegex(false);\n\n          const fetchLogin = async () => {\n            const body = JSON.stringify({\n              email: email,\n              password: password,\n            });\n\n            const res = await UserAPI.postLogin(body);\n            console.log(res);\n            setIsLogin(res.isLogin);\n            setUser(res.user);\n            //Nhận về lỗi trả về khi mà không có dữ liệu được tìm thấy\n            if (typeof res !== undefined) {\n              setErrorEmail(res.invalidateUser);\n              setErrorPassword(res.invalidatePassword);\n            }\n\n            //login Thành công\n            if (res.isLogin) {\n              localStorage.setItem(\"id_user\", email);\n\n              localStorage.setItem(\"name_user\", user?.fullName);\n\n              const action = addSession(localStorage.getItem(\"id_user\"));\n              dispatch(action);\n\n              setCheckPush(true);\n\n              navigation(\"/\");\n            }\n          };\n\n          fetchLogin();\n        }\n      }\n    }\n  };\n\n  //Hàm này dùng để đưa hết tất cả carts vào API của user\n  useEffect(() => {\n    const fetchData = async () => {\n      //Lần đầu sẽ không thực hiện insert được vì addCart = ''\n      if (checkPush === true) {\n        for (let i = 0; i < listCart.length; i++) {\n          //Nó sẽ lấy idUser và idProduct và count cần thêm để gửi lên server\n          const params = {\n            idUser: localStorage.getItem(\"id_user\"),\n            idProduct: listCart[i].idProduct,\n            count: listCart[i].count,\n          };\n\n          const query = \"?\" + queryString.stringify(params);\n\n          const response = await CartAPI.postAddToCart(query);\n          console.log(response);\n        }\n\n        setRedirect(true);\n      }\n    };\n\n    fetchData();\n  }, [checkPush]);\n\n  function validateEmail(email) {\n    const re =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  return (\n    <div className=\"limiter\">\n      <div className=\"container-login100\">\n        <div className=\"wrap-login100 p-l-55 p-r-55 p-t-65 p-b-50\">\n          <span className=\"login100-form-title p-b-33\">Sign In</span>\n\n          <div className=\"d-flex justify-content-center pb-5\">\n            {emailRegex && (\n              <span className=\"text-danger\">* Incorrect Email Format</span>\n            )}\n            {errorEmail && (\n              <span className=\"text-danger\">* Please Check Your Email</span>\n            )}\n            {errorPassword && (\n              <span className=\"text-danger\">* Please Check Your Password</span>\n            )}\n          </div>\n\n          <div className=\"wrap-input100 validate-input\">\n            <input\n              className=\"input100\"\n              type=\"text\"\n              placeholder=\"Email\"\n              value={email}\n              onChange={onChangeEmail}\n            />\n          </div>\n\n          <div className=\"wrap-input100 rs1 validate-input\">\n            <input\n              className=\"input100\"\n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={onChangePassword}\n            />\n          </div>\n\n          <div className=\"container-login100-form-btn m-t-20\">\n            {redirect && <redirect to={`/`} />}\n            <button className=\"login100-form-btn\" onClick={onSubmit}>\n              Sign in\n            </button>\n          </div>\n\n          <div className=\"text-center p-t-45 p-b-4\">\n            <span className=\"txt1\">Create an account?</span>\n            &nbsp;\n            <Link to=\"/signup\" className=\"txt2 hov1\">\n              Sign up\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SignIn;\n","D:\\Funix\\NJS\\Asm3\\client\\src\\Checkout\\Checkout.jsx",["198","199","200","201","202"],"import React, { useEffect, useState } from \"react\";\nimport queryString from \"query-string\";\nimport CartAPI from \"../API/CartAPI\";\nimport CheckoutAPI from \"../API/CheckoutAPI\";\nimport convertMoney from \"../convertMoney\";\nimport \"./Checkout.css\";\n\n// import io from \"socket.io-client\";\n// const socket = io.connect(\"http://localhost:5000\");\n// const socket = io.connect(\"https://backend-shop-rzlv.onrender.com\");\n\nfunction Checkout(props) {\n  const [carts, setCarts] = useState([]);\n\n  const [total, setTotal] = useState(0);\n\n  const [fullName, setFullName] = useState(\"\");\n  const [fullnameError, setFullnameError] = useState(false);\n\n  const [email, setEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(false);\n\n  const [emailRegex, setEmailRegex] = useState(false);\n\n  const [phone, setPhone] = useState(\"\");\n  const [phoneError, setPhoneError] = useState(false);\n\n  const [address, setAddress] = useState(\"\");\n  const [addressError, setAddressError] = useState(false);\n\n  const [success, setSuccess] = useState(false);\n\n  const [load, setLoad] = useState(false);\n\n  //Hàm này dùng để gọi API và render số sản phẩm\n  useEffect(() => {\n    if (localStorage.getItem(\"id_user\")) {\n      const fetchData = async () => {\n        const params = {\n          idUser: localStorage.getItem(\"id_user\"),\n        };\n\n        const query = \"?\" + queryString.stringify(params);\n\n        const response = await CartAPI.getCarts(query);\n\n        console.log(response);\n\n        setCarts(response);\n\n        getTotal(response);\n\n        if (response.length === 0) {\n          window.location.replace(\"/cart\");\n        }\n      };\n\n      fetchData();\n    }\n  }, []);\n\n  //Hàm này dùng để tính tổng tiền carts\n  function getTotal(carts) {\n    let sub_total = 0;\n\n    const sum_total = carts.map((value) => {\n      return (sub_total +=\n        parseInt(value.priceProduct) * parseInt(value.count));\n    });\n\n    setTotal(sub_total);\n  }\n\n  //Check Validation\n  const handlerSubmit = () => {\n    if (!fullName) {\n      setFullnameError(true);\n      setEmailError(false);\n      setPhoneError(false);\n      setAddressError(false);\n      return;\n    } else {\n      if (!email) {\n        setFullnameError(false);\n        setEmailError(true);\n        setPhoneError(false);\n        setAddressError(false);\n        return;\n      } else {\n        setPhoneError(false);\n        setAddressError(false);\n        setFullnameError(false);\n\n        if (!validateEmail(email)) {\n          setEmailRegex(true);\n          setFullnameError(false);\n          setEmailError(false);\n          setPhoneError(false);\n          setAddressError(false);\n          return;\n        } else {\n          setEmailRegex(false);\n\n          if (!phone) {\n            setFullnameError(false);\n            setEmailError(false);\n            setPhoneError(true);\n            setAddressError(false);\n            return;\n          } else {\n            setFullnameError(false);\n            setEmailError(false);\n            setPhoneError(false);\n            setAddressError(false);\n\n            if (!address) {\n              setFullnameError(false);\n              setEmailError(false);\n              setPhoneError(false);\n              setAddressError(true);\n            } else {\n              const fetchCheckout = async () => {\n                console.log(total);\n                const product = carts?.map((item) => ({\n                  idProduct: item.idProduct,\n                  quantity: item.count,\n                }));\n\n                const body = JSON.stringify({\n                  idUser: localStorage.getItem(\"id_user\"),\n                  products: product,\n                  total,\n                  fullName,\n                  phone,\n                  address,\n                  delivery: \"Pending\",\n                  status: \"Completed\",\n                });\n\n                const response = await CheckoutAPI.placeOrder(body);\n                console.log(response);\n                if (response.message === \"Success\") {\n                  // Xóa các sản phẩm trong cart\n                  for (let i = 0; i < carts.length; i++) {\n                    const params = {\n                      idUser: carts[i].idUser,\n                      idProduct: carts[i].idProduct,\n                    };\n                    const query = \"?\" + queryString.stringify(params);\n                    const response = await CartAPI.deleteToCart(query);\n                  }\n                }\n              };\n\n              fetchCheckout();\n\n              console.log(\"Thanh Cong\");\n              setLoad(!load);\n            }\n          }\n        }\n      }\n    }\n  };\n\n  //Hàm này bắt đầu gửi Email xác nhận đơn hàng\n  useEffect(() => {\n    if (load) {\n      const sendMail = async () => {\n        const data = {\n          idUser: localStorage.getItem(\"id_user\"),\n          to: email,\n          fullName: fullName,\n          phone: parseInt(phone),\n          address: address,\n          productArr: carts,\n        };\n\n        const body = JSON.stringify(data);\n\n        const response = await CheckoutAPI.postEmail(body);\n\n        console.log(response);\n      };\n\n      sendMail();\n\n      const data = localStorage.getItem(\"id_user\");\n\n      // Gửi socket lên server\n      // socket.emit(\"send_order\", data);\n\n      //Dùng setTimeout delay 3s\n      //Sau 4s nó sẽ thực hiện\n      setTimeout(() => {\n        setSuccess(!success);\n        setLoad(!load);\n      }, 4000);\n    }\n  }, [load]);\n\n  const onChangeName = (e) => {\n    setFullName(e.target.value);\n  };\n\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const onChangePhone = (e) => {\n    setPhone(e.target.value);\n  };\n\n  const onChangeAddress = (e) => {\n    setAddress(e.target.value);\n  };\n\n  function validateEmail(email) {\n    const re =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  return (\n    <div>\n      {load && (\n        <div className=\"wrapper_loader\">\n          <div className=\"loader\"></div>\n        </div>\n      )}\n\n      <div className=\"container\">\n        <section className=\"py-5 bg-light\">\n          <div className=\"container\">\n            <div className=\"row px-4 px-lg-5 py-lg-4 align-items-center\">\n              <div className=\"col-lg-6\">\n                <h1 className=\"h2 text-uppercase mb-0\">Checkout</h1>\n              </div>\n              <div className=\"col-lg-6 text-lg-right\">\n                <nav aria-label=\"breadcrumb\">\n                  <ol className=\"breadcrumb justify-content-lg-end mb-0 px-0\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"index.html\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"cart.html\">Cart</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                      Checkout\n                    </li>\n                  </ol>\n                </nav>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {!success && (\n          <section className=\"py-5\">\n            <h2 className=\"h5 text-uppercase mb-4\">Billing details</h2>\n            <div className=\"row\">\n              <div className=\"col-lg-8\">\n                <form>\n                  <div className=\"row\">\n                    <div className=\"col-lg-12 form-group\">\n                      <label\n                        className=\"text-small text-uppercase\"\n                        htmlFor=\"Fullname\"\n                      >\n                        Full Name:\n                      </label>\n                      <input\n                        className=\"form-control form-control-lg\"\n                        value={fullName}\n                        onChange={onChangeName}\n                        type=\"text\"\n                        placeholder=\"Enter Your Full Name Here!\"\n                      />\n                      {fullnameError && (\n                        <span className=\"text-danger\">\n                          * Please Check Your Full Name!\n                        </span>\n                      )}\n                    </div>\n                    <div className=\"col-lg-12 form-group\">\n                      <label\n                        className=\"text-small text-uppercase\"\n                        htmlFor=\"Email\"\n                      >\n                        Email:{\" \"}\n                      </label>\n                      <input\n                        className=\"form-control form-control-lg\"\n                        value={email}\n                        onChange={onChangeEmail}\n                        type=\"text\"\n                        placeholder=\"Enter Your Email Here!\"\n                      />\n                      {emailError && (\n                        <span className=\"text-danger\">\n                          * Please Check Your Email!\n                        </span>\n                      )}\n                      {emailRegex && (\n                        <span className=\"text-danger\">\n                          * Incorrect Email Format\n                        </span>\n                      )}\n                    </div>\n                    <div className=\"col-lg-12 form-group\">\n                      <label\n                        className=\"text-small text-uppercase\"\n                        htmlFor=\"Phone\"\n                      >\n                        Phone Number:{\" \"}\n                      </label>\n                      <input\n                        className=\"form-control form-control-lg\"\n                        value={phone}\n                        onChange={onChangePhone}\n                        type=\"number\"\n                        placeholder=\"Enter Your Phone Number Here!\"\n                      />\n                      {phoneError && (\n                        <span className=\"text-danger\">\n                          * Please Check Your Phone Number!\n                        </span>\n                      )}\n                    </div>\n                    <div className=\"col-lg-12 form-group\">\n                      <label\n                        className=\"text-small text-uppercase\"\n                        htmlFor=\"Address\"\n                      >\n                        Address:{\" \"}\n                      </label>\n                      <input\n                        className=\"form-control form-control-lg\"\n                        value={address}\n                        onChange={onChangeAddress}\n                        type=\"text\"\n                        placeholder=\"Enter Your Address Here!\"\n                      />\n                      {addressError && (\n                        <span className=\"text-danger\">\n                          * Please Check Your Address!\n                        </span>\n                      )}\n                    </div>\n                    <div className=\"col-lg-12 form-group\">\n                      <a\n                        className=\"btn btn-dark\"\n                        style={{ color: \"white\" }}\n                        type=\"submit\"\n                        onClick={handlerSubmit}\n                      >\n                        Place order\n                      </a>\n                    </div>\n                  </div>\n                </form>\n              </div>\n              <div className=\"col-lg-4\">\n                <div className=\"card border-0 rounded-0 p-lg-4 bg-light\">\n                  <div className=\"card-body\">\n                    <h5 className=\"text-uppercase mb-4\">Your order</h5>\n                    <ul className=\"list-unstyled mb-0\">\n                      {carts &&\n                        carts.map((value) => (\n                          <div key={value._id}>\n                            <li className=\"d-flex align-items-center justify-content-between\">\n                              <strong className=\"small font-weight-bold\">\n                                {value.nameProduct}\n                              </strong>\n                              <br></br>\n                              <span className=\"text-muted small\">\n                                {convertMoney(value.priceProduct)} VND x{\" \"}\n                                {value.count}\n                              </span>\n                            </li>\n                            <li className=\"border-bottom my-2\"></li>\n                          </div>\n                        ))}\n                      <li className=\"d-flex align-items-center justify-content-between\">\n                        <strong className=\"text-uppercase small font-weight-bold\">\n                          Total\n                        </strong>\n                        <span>{convertMoney(total)} VND</span>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n        )}\n\n        {success && (\n          <section className=\"py-5\">\n            <div className=\"p-5\">\n              <h1>You Have Successfully Ordered!</h1>\n              <p style={{ fontSize: \"1.2rem\" }}>Please Check Your Email.</p>\n            </div>\n          </section>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Checkout;\n","D:\\Funix\\NJS\\Asm3\\client\\src\\History\\Component\\DetailHistory.jsx",["203"],"import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport HistoryAPI from \"../../API/HistoryAPI\";\n\nfunction DetailHistory(props) {\n  const { idHistory } = useParams();\n\n  console.log(idHistory);\n  const [cart, setCart] = useState([]);\n\n  const [information, setInformation] = useState({});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await HistoryAPI.getDetail(idHistory);\n      console.log(response);\n\n      setCart(response.cart);\n      setInformation(response.information);\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <section className=\"py-5 bg-light\">\n        <div className=\"container\">\n          <div className=\"row px-4 px-lg-5 py-lg-4 align-items-center\">\n            <div className=\"col-lg-6\">\n              <h1 className=\"h2 text-uppercase mb-0\">Detail Order</h1>\n            </div>\n            <div className=\"col-lg-6 text-lg-right\">\n              <nav aria-label=\"breadcrumb\">\n                <ol className=\"breadcrumb justify-content-lg-end mb-0 px-0\">\n                  <li className=\"breadcrumb-item active\">Detail</li>\n                </ol>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <div className=\"p-5\">\n        <h1 className=\"h2 text-uppercase\">Information Order</h1>\n        <p>ID User: {information.idUser}</p>\n        <p>Full Name: {information.fullName}</p>\n        <p>Phone: {information.phone}</p>\n        <p>Address: {information.address}</p>\n        <p>Total: {information.total}$</p>\n      </div>\n\n      <div className=\"table-responsive pt-5 pb-5\">\n        <table className=\"table\">\n          <thead className=\"bg-light\">\n            <tr className=\"text-center\">\n              <th className=\"border-0\" scope=\"col\">\n                {\" \"}\n                <strong className=\"text-small text-uppercase\">\n                  ID Product\n                </strong>\n              </th>\n              <th className=\"border-0\" scope=\"col\">\n                {\" \"}\n                <strong className=\"text-small text-uppercase\">Image</strong>\n              </th>\n              <th className=\"border-0\" scope=\"col\">\n                {\" \"}\n                <strong className=\"text-small text-uppercase\">Name</strong>\n              </th>\n              <th className=\"border-0\" scope=\"col\">\n                {\" \"}\n                <strong className=\"text-small text-uppercase\">Price</strong>\n              </th>\n              <th className=\"border-0\" scope=\"col\">\n                {\" \"}\n                <strong className=\"text-small text-uppercase\">Count</strong>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {cart &&\n              cart.map((value) => (\n                <tr className=\"text-center\" key={value.idProduct}>\n                  <td className=\"align-middle border-0\">\n                    <h6 className=\"mb-0\">{value.idProduct}</h6>\n                  </td>\n                  <td className=\"pl-0 border-0\">\n                    <div className=\"media align-items-center justify-content-center\">\n                      <Link\n                        className=\"reset-anchor d-block animsition-link\"\n                        to={`/detail/${value.idProduct}`}\n                      >\n                        <img src={value.imgProduct} alt=\"...\" width=\"200\" />\n                      </Link>\n                    </div>\n                  </td>\n                  <td className=\"align-middle border-0\">\n                    <h6 className=\"mb-0\">{value.nameProduct}</h6>\n                  </td>\n                  <td className=\"align-middle border-0\">\n                    <h6 className=\"mb-0\">\n                      {parseInt(value.priceProduct).toLocaleString()} /VND\n                    </h6>\n                  </td>\n                  <td className=\"align-middle border-0\">\n                    <h6 className=\"mb-0\">{value.count}</h6>\n                  </td>\n                </tr>\n              ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default DetailHistory;\n","D:\\Funix\\NJS\\Asm3\\client\\src\\Shop\\Shop.jsx",["204","205","206"],"D:\\Funix\\NJS\\Asm3\\client\\src\\Cart\\Cart.jsx",["207","208","209","210"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteCart, updateCart } from \"../Redux/Action/ActionCart\";\nimport ListCart from \"./Component/ListCart\";\nimport alertify from \"alertifyjs\";\nimport { Link, redirect, useNavigate } from \"react-router-dom\";\nimport CartAPI from \"../API/CartAPI\";\nimport queryString from \"query-string\";\nimport convertMoney from \"../convertMoney\";\n\nfunction Cart(props) {\n  //id_user được lấy từ redux\n  const id_user = useSelector((state) => state.Cart.id_user);\n\n  //listCart được lấy từ redux\n  const listCart = useSelector((state) => state.Cart.listCart);\n\n  const [cart, setCart] = useState([]);\n\n  const [total, setTotal] = useState();\n\n  const dispatch = useDispatch();\n\n  const navigation = useNavigate();\n  //State dùng để Load dữ liệu từ Redux\n  const [loadRedux, setLoadRedux] = useState({\n    idProduct: \"\",\n    count: \"\",\n  });\n\n  //State dùng để Load dữ liệu từ API\n  const [loadAPI, setLoadAPI] = useState(false);\n\n  //Hàm này dùng để Load dữ liệu ở Redux\n  //Khi người dùng chưa đăng nhập\n  useEffect(() => {\n    const fetchDataRedux = () => {\n      if (!localStorage.getItem(\"id_user\")) {\n        setCart(listCart);\n\n        getTotal(listCart);\n      }\n    };\n\n    fetchDataRedux();\n  }, [loadRedux]);\n\n  //Hàm này dùng để tính tổng tiền carts\n  function getTotal(carts) {\n    let sub_total = 0;\n\n    const sum_total = carts.map((value) => {\n      return (sub_total +=\n        parseInt(value.priceProduct) * parseInt(value.count));\n    });\n\n    setTotal(sub_total);\n  }\n\n  //Hàm này dùng để load dữ liệu từ API\n  //Khi người dùng đã đăng nhập\n  useEffect(() => {\n    const fetchData = async () => {\n      if (localStorage.getItem(\"id_user\")) {\n        const params = {\n          idUser: localStorage.getItem(\"id_user\"),\n        };\n\n        const query = \"?\" + queryString.stringify(params);\n\n        const response = await CartAPI.getCarts(query);\n\n        setCart(response);\n\n        getTotal(response);\n      }\n    };\n\n    fetchData();\n\n    setLoadAPI(false);\n  }, [loadAPI]);\n\n  //Hàm này dùng để truyền xuống cho component con xử và trả ngược dữ liệu lại component cha\n  const onDeleteCart = (getUser, getProduct) => {\n    console.log(\"idUser: \" + getUser + \", idProduct: \" + getProduct);\n\n    const isDelete = window.confirm(\"Bạn có chắc chắn muốn xóa sản phẩm này?\");\n\n    if (isDelete) {\n      if (localStorage.getItem(\"id_user\")) {\n        // user đã đăng nhập\n\n        //Sau khi nhận được dữ liệu ở component con truyền lên thì sẽ gọi API xử lý dữ liệu\n        const fetchDelete = async () => {\n          const params = {\n            idUser: getUser,\n            idProduct: getProduct,\n          };\n\n          const query = \"?\" + queryString.stringify(params);\n\n          const response = await CartAPI.deleteToCart(query);\n          console.log(response);\n        };\n\n        fetchDelete();\n\n        //Sau đó thay đổi state loadAPI và load lại hàm useEffect\n        setLoadAPI(true);\n\n        alertify.set(\"notifier\", \"position\", \"bottom-left\");\n        alertify.error(\"Bạn Đã Xóa Hàng Thành Công!\");\n      } else {\n        // user chưa đăng nhập\n\n        //Nếu không có phiên làm việc của Session User thì mình sẽ xử lý với Redux\n        const data = {\n          idProduct: getProduct,\n          idUser: getUser,\n        };\n\n        //Đưa dữ liệu vào Redux\n        const action = deleteCart(data);\n        dispatch(action);\n\n        alertify.set(\"notifier\", \"position\", \"bottom-left\");\n        alertify.error(\"Bạn Đã Xóa Hàng Thành Công!\");\n\n        //set state loadRedux để nó load lại hàm useEffect để tiếp tục lấy dữ liệu từ redux\n        setLoadRedux({\n          idProduct: getProduct,\n          count: \"\",\n        });\n      }\n    } else {\n      return;\n    }\n  };\n\n  //Hàm này dùng để truyền xuống cho component con xử và trả ngược dữ liệu lại component cha\n  const onUpdateCount = (getUser, getProduct, getCount) => {\n    console.log(\n      \"Count: \" +\n        getCount +\n        \", idUser: \" +\n        getUser +\n        \", idProduct: \" +\n        getProduct\n    );\n\n    if (localStorage.getItem(\"id_user\")) {\n      // user đã đăng nhập\n\n      //Sau khi nhận được dữ liệu ở component con truyền lên thì sẽ gọi API xử lý dữ liệu\n      const fetchPut = async () => {\n        const data = {\n          idUser: getUser,\n          idProduct: getProduct,\n          count: getCount,\n        };\n\n        const body = JSON.stringify(data);\n\n        const response = await CartAPI.putToCart(body);\n        console.log(response);\n      };\n\n      fetchPut();\n\n      //Sau đó thay đổi state loadAPI và load lại hàm useEffect\n      setLoadAPI(true);\n\n      console.log(\"Ban Da Dang Nhap!\");\n\n      alertify.set(\"notifier\", \"position\", \"bottom-left\");\n      alertify.success(\"Bạn Đã Sửa Hàng Thành Công!\");\n    } else {\n      //Nếu không có phiên làm việc của Session User thì mình sẽ xử lý với Redux\n      const data = {\n        idProduct: getProduct,\n        idUser: getUser,\n        count: getCount,\n      };\n\n      //Đưa dữ liệu vào Redux\n      const action = updateCart(data);\n      dispatch(action);\n\n      alertify.set(\"notifier\", \"position\", \"bottom-left\");\n      alertify.success(\"Bạn Đã Sửa Hàng Thành Công!\");\n\n      //set state loadRedux để nó load lại hàm useEffect để tiếp tục lấy dữ liệu từ redux\n      setLoadRedux({\n        idProduct: getProduct,\n        count: getCount,\n      });\n    }\n  };\n\n  //Hàm này dùng để redirect đến page checkout\n\n  const onCheckout = () => {\n    if (!localStorage.getItem(\"id_user\")) {\n      alertify.set(\"notifier\", \"position\", \"bottom-left\");\n      alertify.error(\"Vui Lòng Kiểm Tra Lại Đăng Nhập!\");\n      return;\n    }\n\n    if (cart.length === 0) {\n      alertify.set(\"notifier\", \"position\", \"bottom-left\");\n      alertify.error(\"Vui Lòng Kiểm Tra Lại Giỏ Hàng!\");\n      return;\n    }\n    navigation(\"/checkout\");\n  };\n\n  return (\n    <div className=\"container\">\n      <section className=\"py-5 bg-light\">\n        <div className=\"container\">\n          <div className=\"row px-4 px-lg-5 py-lg-4 align-items-center\">\n            <div className=\"col-lg-6\">\n              <h1 className=\"h2 text-uppercase mb-0\">Cart</h1>\n            </div>\n            <div className=\"col-lg-6 text-lg-right\">\n              <nav aria-label=\"breadcrumb\">\n                <ol className=\"breadcrumb justify-content-lg-end mb-0 px-0\">\n                  <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                    Cart\n                  </li>\n                </ol>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </section>\n      <section className=\"py-5\">\n        <h2 className=\"h5 text-uppercase mb-4\">Shopping cart</h2>\n        <div className=\"row\">\n          <div className=\"col-lg-8 mb-4 mb-lg-0\">\n            <ListCart\n              listCart={cart}\n              onDeleteCart={onDeleteCart}\n              onUpdateCount={onUpdateCount}\n            />\n\n            <div className=\"bg-light px-4 py-3\">\n              <div className=\"row align-items-center text-center\">\n                <div className=\"col-md-6 mb-3 mb-md-0 text-md-left\">\n                  <Link\n                    className=\"btn btn-link p-0 text-dark btn-sm\"\n                    to={`/shop`}\n                  >\n                    <i className=\"fas fa-long-arrow-alt-left mr-2\"> </i>\n                    Continue shopping\n                  </Link>\n                </div>\n                <div className=\"col-md-6 text-md-right\">\n                  <span\n                    className=\"btn btn-outline-dark btn-sm\"\n                    onClick={onCheckout}\n                  >\n                    Proceed to checkout\n                    <i className=\"fas fa-long-arrow-alt-right ml-2\"></i>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-lg-4\">\n            <div className=\"card border-0 rounded-0 p-lg-4 bg-light\">\n              <div className=\"card-body\">\n                <h5 className=\"text-uppercase mb-4\">Cart total</h5>\n                <ul className=\"list-unstyled mb-0\">\n                  <li className=\"d-flex align-items-center justify-content-between\">\n                    <strong className=\"text-uppercase small font-weight-bold\">\n                      Subtotal\n                    </strong>\n                    <span className=\"text-muted small\">\n                      {convertMoney(total)} VND\n                    </span>\n                  </li>\n                  <li className=\"border-bottom my-2\"></li>\n                  <li className=\"d-flex align-items-center justify-content-between mb-4\">\n                    <strong className=\"text-uppercase small font-weight-bold\">\n                      Total\n                    </strong>\n                    <span>{convertMoney(total)} VND</span>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default Cart;\n","D:\\Funix\\NJS\\Asm3\\client\\src\\History\\Component\\MainHistory.jsx",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\Share\\Footer\\Footer.jsx",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\Share\\Header\\Header.jsx",["211"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addUser } from \"../../Redux/Action/ActionCart\";\nimport { addSession } from \"../../Redux/Action/ActionSession\";\n\nimport { Link } from \"react-router-dom\";\nimport LoginLink from \"../../Authentication/LoginLink\";\nimport LogoutLink from \"../../Authentication/LogoutLink\";\nimport Name from \"../../Authentication/Name\";\n\nfunction Header(props) {\n  const [active, setActive] = useState(\"Home\");\n\n  const dispatch = useDispatch();\n\n  //Sau khi F5 nó sẽ kiểm tra nếu phiên làm việc của Session vẫn còn thì nó sẽ tiếp tục\n  // đưa dữ liệu vào Redux\n  if (localStorage.getItem(\"id_user\")) {\n    const action = addSession(localStorage.getItem(\"id_user\"));\n    dispatch(action);\n  } else {\n    //Đưa idTemp vào Redux temp để tạm lưu trữ\n    localStorage.setItem(\"id_temp\", \"abc999\");\n    const action = addUser(localStorage.getItem(\"id_temp\"));\n    dispatch(action);\n  }\n\n  //Get IdUser từ redux khi user đã đăng nhập\n  var idUser = useSelector((state) => state.Session.idUser);\n\n  //Get idtemp từ redux khi user chưa đăng nhập\n  var idTemp = useSelector((state) => state.Cart.id_user);\n\n  const [loginUser, setLoginUser] = useState(false);\n  const [nameUser, setNameUser] = useState(false);\n\n  useEffect(() => {\n    if (!idUser) {\n      setLoginUser(false);\n      setNameUser(false);\n    } else {\n      setLoginUser(true);\n      setNameUser(true);\n    }\n  }, [idUser]);\n\n  const handlerActive = (value) => {\n    setActive(value);\n  };\n\n  return (\n    <div className=\"container px-0 px-lg-3\">\n      <nav className=\"navbar navbar-expand-lg navbar-light py-3 px-lg-0\">\n        <Link className=\"navbar-brand\" to={`/`}>\n          <span className=\"font-weight-bold text-uppercase text-dark\">\n            Boutique\n          </span>\n        </Link>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNavAltMarkup\"\n          aria-controls=\"navbarNavAltMarkup\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\" onClick={() => handlerActive(\"Home\")}>\n              <Link\n                className=\"nav-link\"\n                to={`/`}\n                style={\n                  active === \"Home\" ? { color: \"#dcb14a\" } : { color: \"black\" }\n                }\n              >\n                Home\n              </Link>\n            </li>\n            <li className=\"nav-item\" onClick={() => handlerActive(\"Shop\")}>\n              <Link\n                className=\"nav-link\"\n                to={`/shop`}\n                style={\n                  active === \"Shop\" ? { color: \"#dcb14a\" } : { color: \"black\" }\n                }\n              >\n                Shop\n              </Link>\n            </li>\n          </ul>\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to={`/cart`}>\n                <i className=\"fas fa-dolly-flatbed mr-1 text-gray\"></i>\n                Cart\n              </Link>\n            </li>\n            {nameUser ? <Name /> : \"\"}\n            {loginUser ? <LoginLink /> : <LogoutLink />}\n          </ul>\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nexport default Header;\n","D:\\Funix\\NJS\\Asm3\\client\\src\\Share\\Chat\\Chat.jsx",["212","213","214"],"import React, { useEffect, useState } from \"react\";\nimport \"./Chat.css\";\n\nimport ChatRoomsAPI from \"../../API/ChatRoomsAPI\";\n\nimport io from \"socket.io-client\";\n// const socket = io(\"http://localhost:5000\");\nconst socket = io.connect(\"https://backend-shop-rzlv.onrender.com\");\n\nfunction Chat(props) {\n  const [activeChat, setActiveChat] = useState(false);\n  const [textMessage, setTextMessage] = useState(\"\");\n  const [message, setMessage] = useState();\n  const [roomId, setRoomId] = useState(\n    localStorage.getItem(\"njs_asm3_roomId\") || \"\"\n  );\n\n  //Get id_user từ redux khi user đã đăng nhập\n  const [load, setLoad] = useState(false);\n\n  // Hàm này dùng để mở hộp thoại chat\n  const onChat = () => {\n    setActiveChat(!activeChat);\n  };\n\n  const onChangeText = (e) => {\n    setTextMessage(e.target.value);\n  };\n\n  const handlerSend = async () => {\n    //Sau đó nó emit dữ liệu lên server bằng socket với key send_message và value data\n\n    // Check if text equal \"/end\" then end room\n    if (roomId && textMessage.toLowerCase() === \"/end\") {\n      await ChatRoomsAPI.addMessage({\n        message: \"==END ROOM==\",\n        roomId: roomId,\n        is_admin: false,\n      });\n\n      localStorage.removeItem(\"njs_asm3_roomId\");\n      setTextMessage(\"\");\n      setRoomId(\"\");\n      setMessage([]);\n      setActiveChat(false);\n\n      return;\n    }\n\n    // Check if roomId is null then create new Room\n    if (!roomId) {\n      const newRoomData = await ChatRoomsAPI.createNewRoom();\n      setRoomId(newRoomData._id);\n      localStorage.setItem(\"njs_asm3_roomId\", newRoomData._id);\n    }\n\n    const data = {\n      message: textMessage,\n      roomId: roomId,\n      is_admin: false,\n    };\n\n    //Tiếp theo nó sẽ postdata lên api đưa dữ liệu vào database\n    await ChatRoomsAPI.addMessage(data);\n    setTextMessage(\"\");\n\n    setTimeout(() => {\n      setLoad(true);\n      socket.emit(\"send_message\", data);\n    }, 200);\n  };\n\n  const fetchData = async () => {\n    const response = await ChatRoomsAPI.getMessageByRoomId(roomId);\n    setMessage(response.content);\n  };\n\n  // Hàm này dùng để load dữ liệu message của user khi user gửi tin nhán\n  useEffect(() => {\n    if (load) {\n      fetchData();\n      setLoad(false);\n    }\n  }, [load]);\n\n  useEffect(() => {\n    setLoad(true);\n  }, [roomId]);\n\n  //Hàm này dùng để nhận socket từ server gửi lên\n  useEffect(() => {\n    //Nhận dữ liệu từ server gửi lên thông qua socket với key receive_message\n    socket.on(\"receive_message\", (data) => {\n      //Sau đó nó sẽ setLoad gọi lại hàm useEffect lấy lại dữ liệu\n      setLoad(true);\n    });\n  }, []);\n\n  return (\n    <div className=\"wrapper_chat\">\n      <div className=\"chat_messenger\" onClick={onChat}>\n        <svg x=\"0\" y=\"0\" width=\"60px\" height=\"60px\">\n          <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n            <g>\n              <circle fill=\"#383838\" cx=\"30\" cy=\"30\" r=\"30\"></circle>\n              <svg x=\"10\" y=\"10\">\n                <g transform=\"translate(0.000000, -10.000000)\" fill=\"#FFFFFF\">\n                  <g id=\"logo\" transform=\"translate(0.000000, 10.000000)\">\n                    <path\n                      d=\"M20,0 C31.2666,0 40,8.2528 40,19.4 C40,30.5472 31.2666,38.8 \n\t\t\t\t\t\t\t\t20,38.8 C17.9763,38.8 16.0348,38.5327 14.2106,38.0311 C13.856,37.9335 13.4789,37.9612 \n\t\t\t\t\t\t\t\t13.1424,38.1098 L9.1727,39.8621 C8.1343,40.3205 6.9621,39.5819 6.9273,38.4474 L6.8184,34.8894 \n\t\t\t\t\t\t\t\tC6.805,34.4513 6.6078,34.0414 6.2811,33.7492 C2.3896,30.2691 0,25.2307 0,19.4 C0,8.2528 8.7334,0 \n\t\t\t\t\t\t\t\t20,0 Z M7.99009,25.07344 C7.42629,25.96794 8.52579,26.97594 9.36809,26.33674 L15.67879,21.54734 \n\t\t\t\t\t\t\t\tC16.10569,21.22334 16.69559,21.22164 17.12429,21.54314 L21.79709,25.04774 C23.19919,26.09944 \n\t\t\t\t\t\t\t\t25.20039,25.73014 26.13499,24.24744 L32.00999,14.92654 C32.57369,14.03204 31.47419,13.02404 \n\t\t\t\t\t\t\t\t30.63189,13.66324 L24.32119,18.45264 C23.89429,18.77664 23.30439,18.77834 22.87569,18.45674 \n\t\t\t\t\t\t\t\tL18.20299,14.95224 C16.80079,13.90064 14.79959,14.26984 13.86509,15.75264 L7.99009,25.07344 Z\"\n                    ></path>\n                  </g>\n                </g>\n              </svg>\n            </g>\n          </g>\n        </svg>\n      </div>\n\n      {activeChat && (\n        <div className=\"active_chat animate__animated animate__jackInTheBox\">\n          <div style={{ width: \"100%\" }}>\n            <div\n              className=\"card card-bordered fix_boderChat\"\n              style={{ width: \"fit-content\" }}\n            >\n              <div className=\"card-header\">\n                <h4 className=\"card-title\">\n                  <strong>Customer Support</strong>\n                </h4>{\" \"}\n                <a className=\"btn btn-xs btn-secondary\" href=\"#\">\n                  Let's Chat App\n                </a>\n              </div>\n              <div className=\"ps-container ps-theme-default ps-active-y fix_scoll\">\n                {message &&\n                  message.map((value) =>\n                    !value.is_admin ? (\n                      <div\n                        className=\"media media-chat media-chat-reverse\"\n                        key={value.id}\n                      >\n                        <div className=\"media-body\">\n                          <p>You: {value.message}</p>\n                        </div>\n                      </div>\n                    ) : (\n                      <div className=\"media media-chat\" key={value.id}>\n                        {\" \"}\n                        <img\n                          className=\"avatar\"\n                          src=\"https://img.icons8.com/color/36/000000/administrator-male.png\"\n                          alt=\"...\"\n                        />\n                        <div className=\"media-body\" key={value.id}>\n                          <p>Cộng tác viên: {value.message}</p>\n                        </div>\n                      </div>\n                    )\n                  )}\n              </div>\n              <div className=\"publisher bt-1 border-light\">\n                <img\n                  className=\"avatar avatar-xs\"\n                  src=\"https://img.icons8.com/color/36/000000/administrator-male.png\"\n                  alt=\"...\"\n                />\n                <input\n                  type=\"text\"\n                  placeholder=\"Enter Message!\"\n                  onChange={onChangeText}\n                  value={textMessage}\n                  style={{ width: \"80%\" }}\n                  onKeyPress={(e) => {\n                    if (e.key === \"Enter\") {\n                      handlerSend();\n                    }\n                  }}\n                />\n                <a\n                  onClick={handlerSend}\n                  className=\"publisher-btn text-info\"\n                  data-abc=\"true\"\n                >\n                  <i className=\"fa fa-paper-plane\"></i>\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Chat;\n","D:\\Funix\\NJS\\Asm3\\client\\src\\Redux\\Reducer\\ReducerRoot.jsx",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\convertMoney.js",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\Authentication\\LoginLink.jsx",["215","216","217"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { deleteSession } from '../Redux/Action/ActionSession';\n\nfunction LoginLink(props) {\n\tconst dispatch = useDispatch();\n\n\tconst onRedirect = () => {\n\t\tlocalStorage.clear();\n\n\t\tconst action = deleteSession('');\n\t\tdispatch(action);\n\t};\n\n\treturn (\n\t\t<li className='nav-item' onClick={onRedirect}>\n\t\t\t<Link className='nav-link' to='/signin'>\n\t\t\t\t( Logout )\n\t\t\t</Link>\n\t\t</li>\n\t);\n}\n\nexport default LoginLink;\n","D:\\Funix\\NJS\\Asm3\\client\\src\\API\\ProductAPI.jsx",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\API\\CartAPI.jsx",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\API\\MessengerAPI.jsx",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\Authentication\\LogoutLink.jsx",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\API\\CheckoutAPI.jsx",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\API\\ChatRoomsAPI.jsx",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\API\\HistoryAPI.jsx",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\API\\CommentAPI.jsx",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\Authentication\\Name.jsx",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\Redux\\Action\\ActionCart.jsx",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\API\\UserAPI.jsx",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\Redux\\Action\\ActionSession.jsx",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\Shop\\Component\\Pagination.jsx",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\Share\\img\\Image.jsx",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\Shop\\Component\\Search.jsx",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\Shop\\Component\\Products.jsx",["218","219"],"D:\\Funix\\NJS\\Asm3\\client\\src\\Shop\\Component\\SortProduct.jsx",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\Cart\\Component\\ListCart.jsx",["220"],"import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport convertMoney from \"../../convertMoney\";\n\nListCart.propTypes = {\n  listCart: PropTypes.array,\n  onDeleteCart: PropTypes.func,\n  onUpdateCount: PropTypes.func,\n};\n\nListCart.defaultProps = {\n  listCart: [],\n  onDeleteCart: null,\n  onUpdateCount: null,\n};\n\nfunction ListCart(props) {\n  const { listCart, onDeleteCart, onUpdateCount } = props;\n\n  console.log(listCart);\n  const handlerChangeText = (e) => {\n    console.log(e.target.value);\n  };\n\n  const handlerDelete = (getUser, getProduct) => {\n    if (!onDeleteCart) {\n      return;\n    }\n\n    onDeleteCart(getUser, getProduct);\n  };\n\n  const handlerDown = (getIdUser, getIdProduct, getCount) => {\n    if (!onUpdateCount) {\n      return;\n    }\n\n    if (getCount === 1) {\n      return;\n    }\n\n    //Trước khi trả dữ liệu về component cha thì phải thay đổi biến count\n    const updateCount = parseInt(getCount) - 1;\n\n    onUpdateCount(getIdUser, getIdProduct, updateCount);\n  };\n\n  const handlerUp = (getIdUser, getIdProduct, getCount) => {\n    if (!onUpdateCount) {\n      return;\n    }\n\n    //Trước khi trả dữ liệu về component cha thì phải thay đổi biến count\n    const updateCount = parseInt(getCount) + 1;\n\n    onUpdateCount(getIdUser, getIdProduct, updateCount);\n  };\n\n  return (\n    <div className=\"table-responsive mb-4\">\n      <table className=\"table\">\n        <thead className=\"bg-light\">\n          <tr className=\"text-center\">\n            <th className=\"border-0\" scope=\"col\">\n              {\" \"}\n              <strong className=\"text-small text-uppercase\">Image</strong>\n            </th>\n            <th className=\"border-0\" scope=\"col\">\n              {\" \"}\n              <strong className=\"text-small text-uppercase\">Product</strong>\n            </th>\n            <th className=\"border-0\" scope=\"col\">\n              {\" \"}\n              <strong className=\"text-small text-uppercase\">Price</strong>\n            </th>\n            <th className=\"border-0\" scope=\"col\">\n              {\" \"}\n              <strong className=\"text-small text-uppercase\">Quantity</strong>\n            </th>\n            <th className=\"border-0\" scope=\"col\">\n              {\" \"}\n              <strong className=\"text-small text-uppercase\">Total</strong>\n            </th>\n            <th className=\"border-0\" scope=\"col\">\n              {\" \"}\n              <strong className=\"text-small text-uppercase\">Remove</strong>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {listCart &&\n            listCart.map((value, index) => (\n              <tr className=\"text-center\" key={index}>\n                <td className=\"pl-0 border-0\">\n                  <div className=\"media align-items-center justify-content-center\">\n                    <Link\n                      className=\"reset-anchor d-block animsition-link\"\n                      to={`/detail/${value.idProduct}`}\n                    >\n                      <img src={value.img} alt=\"...\" width=\"70\" />\n                    </Link>\n                  </div>\n                </td>\n                <td className=\"align-middle border-0\">\n                  <div className=\"media align-items-center justify-content-center\">\n                    <Link\n                      className=\"reset-anchor h6 animsition-link\"\n                      to={`/detail/${value.idProduct}`}\n                    >\n                      {value.nameProduct}\n                    </Link>\n                  </div>\n                </td>\n\n                <td className=\"align-middle border-0\">\n                  <p className=\"mb-0 small\">\n                    {convertMoney(value.priceProduct)} VND\n                  </p>\n                </td>\n                <td className=\"align-middle border-0\">\n                  <div className=\"quantity justify-content-center\">\n                    <button\n                      className=\"dec-btn p-0\"\n                      style={{ cursor: \"pointer\" }}\n                      onClick={() =>\n                        handlerDown(value.idUser, value.idProduct, value.count)\n                      }\n                    >\n                      <i className=\"fas fa-caret-left\"></i>\n                    </button>\n                    <input\n                      className=\"form-control form-control-sm border-0 shadow-0 p-0\"\n                      type=\"text\"\n                      value={value.count}\n                      onChange={handlerChangeText}\n                    />\n                    <button\n                      className=\"inc-btn p-0\"\n                      style={{ cursor: \"pointer\" }}\n                      onClick={() =>\n                        handlerUp(value.idUser, value.idProduct, value.count)\n                      }\n                    >\n                      <i className=\"fas fa-caret-right\"></i>\n                    </button>\n                  </div>\n                </td>\n                <td className=\"align-middle border-0\">\n                  <p className=\"mb-0 small\">\n                    {convertMoney(\n                      parseInt(value.priceProduct) * parseInt(value.count)\n                    )}{\" \"}\n                    VND\n                  </p>\n                </td>\n                <td className=\"align-middle border-0\">\n                  <span\n                    className=\"reset-anchor remove_cart\"\n                    style={{ cursor: \"pointer\" }}\n                    onClick={() => handlerDelete(value.idUser, value.idProduct)}\n                  >\n                    <i className=\"fas fa-trash-alt small text-muted\"></i>\n                  </span>\n                </td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default ListCart;\n","D:\\Funix\\NJS\\Asm3\\client\\src\\Redux\\Reducer\\ReducerSession.jsx",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\Redux\\Reducer\\ReducerCart.jsx",[],"D:\\Funix\\NJS\\Asm3\\client\\src\\Shop\\Component\\IndexPage.jsx",["221"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nIndexPage.propTypes = {\n  indexPage: PropTypes.array,\n  handlerChangePage: PropTypes.func,\n  pagination: PropTypes.object,\n};\n\nIndexPage.defaultProps = {\n  indexPage: null,\n  handlerChangePage: null,\n  pagination: {},\n};\n\nfunction IndexPage(props) {\n  const { indexPage, handlerChangePage, pagination } = props;\n\n  const { page } = pagination;\n\n  const onIndexPage = (value) => {\n    if (!handlerChangePage) {\n      return;\n    }\n\n    handlerChangePage(value);\n  };\n\n  console.log(indexPage);\n\n  return (\n    <div className=\"d-flex\">\n      {indexPage &&\n        indexPage.map((value) => (\n          <li\n            className={\n              value === parseInt(page) ? \"page-item active\" : \"page-item\"\n            }\n            key={value}\n            onClick={() => onIndexPage(value)}\n          >\n            <a className=\"page-link\">{value}</a>\n          </li>\n        ))}\n    </div>\n  );\n}\n\nexport default IndexPage;\n","D:\\Funix\\NJS\\Asm3\\client\\src\\API\\axiosClient.jsx",[],{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","severity":1,"message":"227","line":16,"column":8,"nodeType":"228","messageId":"229","endLine":16,"endColumn":12},{"ruleId":"222","replacedBy":"230"},{"ruleId":"224","replacedBy":"231"},{"ruleId":"226","severity":1,"message":"232","line":24,"column":9,"nodeType":"228","messageId":"229","endLine":24,"endColumn":17},{"ruleId":"226","severity":1,"message":"233","line":61,"column":9,"nodeType":"228","messageId":"229","endLine":61,"endColumn":21},{"ruleId":"226","severity":1,"message":"234","line":66,"column":9,"nodeType":"228","messageId":"229","endLine":66,"endColumn":24},{"ruleId":"226","severity":1,"message":"235","line":71,"column":9,"nodeType":"228","messageId":"229","endLine":71,"endColumn":23},{"ruleId":"236","severity":1,"message":"237","line":121,"column":6,"nodeType":"238","endLine":121,"endColumn":20,"suggestions":"239"},{"ruleId":"240","severity":1,"message":"241","line":411,"column":13,"nodeType":"242","endLine":419,"endColumn":14},{"ruleId":"226","severity":1,"message":"243","line":2,"column":16,"nodeType":"228","messageId":"229","endLine":2,"endColumn":24},{"ruleId":"226","severity":1,"message":"244","line":22,"column":10,"nodeType":"228","messageId":"229","endLine":22,"endColumn":17},{"ruleId":"226","severity":1,"message":"245","line":28,"column":10,"nodeType":"228","messageId":"229","endLine":28,"endColumn":17},{"ruleId":"236","severity":1,"message":"246","line":128,"column":6,"nodeType":"238","endLine":128,"endColumn":17,"suggestions":"247"},{"ruleId":"226","severity":1,"message":"248","line":66,"column":11,"nodeType":"228","messageId":"229","endLine":66,"endColumn":20},{"ruleId":"226","severity":1,"message":"249","line":150,"column":27,"nodeType":"228","messageId":"229","endLine":150,"endColumn":35},{"ruleId":"226","severity":1,"message":"250","line":188,"column":13,"nodeType":"228","messageId":"229","endLine":188,"endColumn":17},{"ruleId":"236","severity":1,"message":"251","line":200,"column":6,"nodeType":"238","endLine":200,"endColumn":12,"suggestions":"252"},{"ruleId":"240","severity":1,"message":"241","line":351,"column":23,"nodeType":"242","endLine":356,"endColumn":24},{"ruleId":"236","severity":1,"message":"253","line":23,"column":6,"nodeType":"238","endLine":23,"endColumn":8,"suggestions":"254"},{"ruleId":"226","severity":1,"message":"255","line":5,"column":10,"nodeType":"228","messageId":"229","endLine":5,"endColumn":14},{"ruleId":"226","severity":1,"message":"256","line":11,"column":8,"nodeType":"228","messageId":"229","endLine":11,"endColumn":21},{"ruleId":"226","severity":1,"message":"257","line":15,"column":10,"nodeType":"228","messageId":"229","endLine":15,"endColumn":14},{"ruleId":"226","severity":1,"message":"258","line":6,"column":16,"nodeType":"228","messageId":"229","endLine":6,"endColumn":24},{"ruleId":"226","severity":1,"message":"259","line":13,"column":9,"nodeType":"228","messageId":"229","endLine":13,"endColumn":16},{"ruleId":"236","severity":1,"message":"246","line":46,"column":6,"nodeType":"238","endLine":46,"endColumn":17,"suggestions":"260"},{"ruleId":"226","severity":1,"message":"248","line":52,"column":11,"nodeType":"228","messageId":"229","endLine":52,"endColumn":20},{"ruleId":"226","severity":1,"message":"261","line":32,"column":7,"nodeType":"228","messageId":"229","endLine":32,"endColumn":13},{"ruleId":"236","severity":1,"message":"262","line":84,"column":6,"nodeType":"238","endLine":84,"endColumn":12,"suggestions":"263"},{"ruleId":"240","severity":1,"message":"264","line":139,"column":17,"nodeType":"242","endLine":139,"endColumn":66},{"ruleId":"240","severity":1,"message":"241","line":188,"column":17,"nodeType":"242","endLine":192,"endColumn":18},{"ruleId":"226","severity":1,"message":"265","line":1,"column":17,"nodeType":"228","messageId":"229","endLine":1,"endColumn":26},{"ruleId":"226","severity":1,"message":"266","line":1,"column":28,"nodeType":"228","messageId":"229","endLine":1,"endColumn":36},{"ruleId":"226","severity":1,"message":"267","line":3,"column":16,"nodeType":"228","messageId":"229","endLine":3,"endColumn":24},{"ruleId":"226","severity":1,"message":"265","line":1,"column":17,"nodeType":"228","messageId":"229","endLine":1,"endColumn":26},{"ruleId":"226","severity":1,"message":"266","line":1,"column":28,"nodeType":"228","messageId":"229","endLine":1,"endColumn":36},{"ruleId":"226","severity":1,"message":"266","line":1,"column":17,"nodeType":"228","messageId":"229","endLine":1,"endColumn":25},{"ruleId":"240","severity":1,"message":"241","line":42,"column":13,"nodeType":"242","endLine":42,"endColumn":38},"no-native-reassign",["268"],"no-negated-in-lhs",["269"],"no-unused-vars","'Chat' is defined but never used.","Identifier","unusedVar",["268"],["269"],"'listCart' is assigned a value but never used.","'onChangeStar' is assigned a value but never used.","'onChangeComment' is assigned a value but never used.","'handlerComment' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["270"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Navigate' is defined but never used.","'success' is assigned a value but never used.","'isLogin' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'listCart'. Either include it or remove the dependency array.",["271"],"'sum_total' is assigned a value but never used.","'response' is assigned a value but never used.","'data' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'address', 'carts', 'email', 'fullName', 'phone', and 'success'. Either include them or remove the dependency array. You can also do a functional update 'setSuccess(s => ...)' if you only need 'success' in the 'setSuccess' call.",["272"],"React Hook useEffect has a missing dependency: 'idHistory'. Either include it or remove the dependency array.",["273"],"'Link' is defined but never used.","'ReactPaginate' is defined but never used.","'temp' is assigned a value but never used.","'redirect' is defined but never used.","'id_user' is assigned a value but never used.",["274"],"'idTemp' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["275"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'useEffect' is defined but never used.","'useState' is defined but never used.","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},"Update the dependencies array to be: [id, load_comment]",{"range":"288","text":"289"},"Update the dependencies array to be: [checkPush, listCart]",{"range":"290","text":"291"},"Update the dependencies array to be: [address, carts, email, fullName, load, phone, success]",{"range":"292","text":"293"},"Update the dependencies array to be: [idHistory]",{"range":"294","text":"295"},"Update the dependencies array to be: [listCart, loadRedux]",{"range":"296","text":"297"},"Update the dependencies array to be: [fetchData, load]",{"range":"298","text":"299"},[3076,3090],"[id, load_comment]",[3455,3466],"[checkPush, listCart]",[5430,5436],"[address, carts, email, fullName, load, phone, success]",[596,598],"[idHistory]",[1300,1311],"[listCart, loadRedux]",[2222,2228],"[fetchData, load]"]